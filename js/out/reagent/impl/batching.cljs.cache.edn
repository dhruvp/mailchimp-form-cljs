;; Analyzed by ClojureScript 0.0-2934
{:defs {fake-raf {:protocol-inline nil, :meta {:arglists (quote ([f])), :end-column 16, :end-line 16, :column 7, :line 16, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/batching.cljs"}, :name reagent.impl.batching/fake-raf, :variadic false, :file "resources/public/js/out/reagent/impl/batching.cljs", :end-column 16, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :test true}, run-funs {:protocol-inline nil, :meta {:arglists (quote ([a])), :end-column 16, :end-line 42, :column 7, :line 42, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/batching.cljs"}, :name reagent.impl.batching/run-funs, :variadic false, :file "resources/public/js/out/reagent/impl/batching.cljs", :end-column 16, :method-params ([a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 1}), :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([a])), :test true}, run-reactively {:protocol-inline nil, :meta {:arglists (quote ([c run])), :end-column 22, :end-line 90, :column 7, :line 90, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/batching.cljs"}, :name reagent.impl.batching/run-reactively, :variadic false, :file "resources/public/js/out/reagent/impl/batching.cljs", :end-column 22, :method-params ([c run]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 90, :end-line 90, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c run])), :test true}, queue-render {:protocol-inline nil, :meta {:arglists (quote ([c])), :end-column 20, :end-line 71, :column 7, :line 71, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/batching.cljs"}, :name reagent.impl.batching/queue-render, :variadic false, :file "resources/public/js/out/reagent/impl/batching.cljs", :end-column 20, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 71, :end-line 71, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c])), :test true}, next-tick {:meta {:end-column 16, :end-line 19, :column 6, :line 19, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/batching.cljs"}, :file "resources/public/js/out/reagent/impl/batching.cljs", :line 19, :column 1, :end-line 19, :end-column 16, :test true, :name reagent.impl.batching/next-tick}, flush {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 13, :end-line 68, :column 7, :line 68, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/batching.cljs"}, :name reagent.impl.batching/flush, :variadic false, :file "resources/public/js/out/reagent/impl/batching.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 68, :end-line 68, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, mark-rendered {:protocol-inline nil, :meta {:arglists (quote ([c])), :end-column 21, :end-line 75, :column 7, :line 75, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/batching.cljs"}, :name reagent.impl.batching/mark-rendered, :variadic false, :file "resources/public/js/out/reagent/impl/batching.cljs", :end-column 21, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c])), :test true}, render-queue {:meta {:end-column 19, :end-line 66, :column 6, :line 66, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/batching.cljs"}, :file "resources/public/js/out/reagent/impl/batching.cljs", :line 66, :column 1, :end-line 66, :end-column 19, :test true, :name reagent.impl.batching/render-queue}, RenderQueue {:num-fields 3, :protocols #{reagent.impl.batching/Object}, :name reagent.impl.batching/RenderQueue, :file "resources/public/js/out/reagent/impl/batching.cljs", :end-column 22, :type true, :column 10, :line 46, :record false, :end-line 46, :skip-protocol-flag nil}, do-after-flush {:protocol-inline nil, :meta {:arglists (quote ([f])), :end-column 22, :end-line 78, :column 7, :line 78, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/batching.cljs"}, :name reagent.impl.batching/do-after-flush, :variadic false, :file "resources/public/js/out/reagent/impl/batching.cljs", :end-column 22, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 78, :end-line 78, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :test true}, compare-mount-order {:protocol-inline nil, :meta {:arglists (quote ([c1 c2])), :end-column 27, :end-line 29, :column 7, :line 29, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/batching.cljs"}, :name reagent.impl.batching/compare-mount-order, :variadic false, :file "resources/public/js/out/reagent/impl/batching.cljs", :end-column 27, :method-params ([c1 c2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag number, :variadic false, :max-fixed-arity 2}), :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c1 c2])), :test true}, mount-count {:meta {:end-column 22, :end-line 11, :column 10, :line 11, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/batching.cljs"}, :file "resources/public/js/out/reagent/impl/batching.cljs", :line 11, :column 1, :end-line 11, :end-column 22, :test true, :name reagent.impl.batching/mount-count}, next-mount-count {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 24, :end-line 13, :column 7, :line 13, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/batching.cljs"}, :name reagent.impl.batching/next-mount-count, :variadic false, :file "resources/public/js/out/reagent/impl/batching.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 0}), :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ->RenderQueue {:protocol-inline nil, :meta {:arglists (quote ([queue scheduled? after-render])), :factory :positional, :skip-protocol-flag nil, :protocols #{reagent.impl.batching/Object}, :end-column 22, :end-line 46, :column 10, :line 46, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/batching.cljs"}, :protocols #{reagent.impl.batching/Object}, :name reagent.impl.batching/->RenderQueue, :variadic false, :file "resources/public/js/out/reagent/impl/batching.cljs", :end-column 22, :method-params ([queue scheduled? after-render]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :methods ({:tag reagent.impl.batching/RenderQueue, :variadic false, :max-fixed-arity 3}), :line 46, :end-line 46, :max-fixed-arity 3, :fn-var true, :arglists (quote ([queue scheduled? after-render])), :skip-protocol-flag nil, :test true}, is-reagent-component {:protocol-inline nil, :meta {:arglists (quote ([c])), :end-column 28, :end-line 87, :column 7, :line 87, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/batching.cljs"}, :name reagent.impl.batching/is-reagent-component, :variadic false, :file "resources/public/js/out/reagent/impl/batching.cljs", :end-column 28, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 87, :end-line 87, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c])), :test true}, do-later {:protocol-inline nil, :meta {:arglists (quote ([f])), :end-column 16, :end-line 81, :column 7, :line 81, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/batching.cljs"}, :name reagent.impl.batching/do-later, :variadic false, :file "resources/public/js/out/reagent/impl/batching.cljs", :end-column 16, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :test true}, run-queue {:protocol-inline nil, :meta {:arglists (quote ([a])), :end-column 17, :end-line 33, :column 7, :line 33, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/batching.cljs"}, :name reagent.impl.batching/run-queue, :variadic false, :file "resources/public/js/out/reagent/impl/batching.cljs", :end-column 17, :method-params ([a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 1}), :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([a])), :test true}, dispose {:protocol-inline nil, :meta {:arglists (quote ([c])), :end-column 15, :end-line 105, :column 7, :line 105, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/batching.cljs"}, :name reagent.impl.batching/dispose, :variadic false, :file "resources/public/js/out/reagent/impl/batching.cljs", :end-column 15, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 105, :end-line 105, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c])), :test true}}, :name reagent.impl.batching, :doc nil, :excludes #{flush}, :use-macros {dbg reagent.debug, .' reagent.interop, .! reagent.interop}, :require-macros {reagent.interop reagent.interop, reagent.debug reagent.debug}, :uses {is-client reagent.impl.util}, :requires {string clojure.string, clojure.string clojure.string, reagent.impl.util reagent.impl.util, ratom reagent.ratom, reagent.ratom reagent.ratom, reagent.interop reagent.interop, reagent.debug reagent.debug}, :imports nil}