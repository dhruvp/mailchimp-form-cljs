;; Analyzed by ClojureScript 0.0-2934
{:defs {obj-get {:protocol-inline nil, :meta {:arglists (quote ([o k])), :end-column 15, :end-line 41, :column 7, :line 41, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/obj-get, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 15, :method-params ([o k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 2}), :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([o k])), :test true}, valid-tag? {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 18, :end-line 29, :column 7, :line 29, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/valid-tag?, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag boolean, :variadic false, :max-fixed-arity 1}), :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, adapt-react-class {:protocol-inline nil, :meta {:arglists (quote ([c])), :end-column 25, :end-line 195, :column 7, :line 195, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/adapt-react-class, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 25, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag reagent.impl.template/NativeWrapper, :variadic false, :max-fixed-arity 1}), :line 195, :end-line 195, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c])), :test true}, get-key {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 15, :end-line 181, :column 7, :line 181, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/get-key, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 181, :end-line 181, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, re-tag {:meta {:doc "Regular expression that parses a CSS-style id and class\n             from a tag name.", :end-column 10, :end-line 14, :column 3, :line 14, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :file "resources/public/js/out/reagent/impl/template.cljs", :line 12, :column 1, :end-line 14, :end-column 10, :doc "Regular expression that parses a CSS-style id and class\n             from a tag name.", :test true, :name reagent.impl.template/re-tag}, reag-element {:protocol-inline nil, :meta {:arglists (quote ([tag v])), :end-column 20, :end-line 189, :column 7, :line 189, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/reag-element, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 20, :method-params ([tag v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 189, :end-line 189, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tag v])), :test true}, as-element {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 18, :end-line 244, :column 7, :line 244, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/as-element, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 244, :end-line 244, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, input-component? {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 24, :end-line 124, :column 7, :line 124, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/input-component?, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 24, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag boolean, :variadic false, :max-fixed-arity 1}), :line 124, :end-line 124, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, NativeWrapper {:num-fields 1, :protocols #{}, :name reagent.impl.template/NativeWrapper, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 24, :type true, :column 10, :line 16, :record false, :end-line 16, :skip-protocol-flag nil}, ->NativeWrapper {:protocol-inline nil, :meta {:arglists (quote ([comp])), :factory :positional, :skip-protocol-flag nil, :protocols #{}, :end-column 24, :end-line 16, :column 10, :line 16, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :protocols #{}, :name reagent.impl.template/->NativeWrapper, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 24, :method-params ([comp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :methods ({:tag reagent.impl.template/NativeWrapper, :variadic false, :max-fixed-arity 1}), :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([comp])), :skip-protocol-flag nil, :test true}, input-render-setup {:protocol-inline nil, :meta {:arglists (quote ([this jsprops])), :end-column 26, :end-line 109, :column 7, :line 109, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/input-render-setup, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 26, :method-params ([this jsprops]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 2}), :line 109, :end-line 109, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this jsprops])), :test true}, hiccup-tag? {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 19, :end-line 25, :column 7, :line 25, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/hiccup-tag?, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 19, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag boolean, :variadic false, :max-fixed-arity 1}), :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, set-id-class {:protocol-inline nil, :meta {:arglists (quote ([props id class])), :end-column 20, :end-line 65, :column 7, :line 65, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/set-id-class, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 20, :method-params ([props id class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil object}, :variadic false, :max-fixed-arity 3}), :line 65, :end-line 65, :max-fixed-arity 3, :fn-var true, :arglists (quote ([props id class])), :test true}, as-class {:protocol-inline nil, :meta {:arglists (quote ([tag])), :end-column 16, :end-line 176, :column 7, :line 176, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/as-class, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 16, :method-params ([tag]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 176, :end-line 176, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tag])), :test true}, tag-name-cache {:meta {:end-column 21, :end-line 200, :column 6, :line 200, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :file "resources/public/js/out/reagent/impl/template.cljs", :line 200, :column 1, :end-line 200, :end-column 21, :test true, :name reagent.impl.template/tag-name-cache}, fn-to-class {:protocol-inline nil, :meta {:arglists (quote ([f])), :end-column 19, :end-line 161, :column 7, :line 161, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/fn-to-class, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 19, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 161, :end-line 161, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :test true}, prop-name-cache {:meta {:end-column 22, :end-line 37, :column 6, :line 37, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :file "resources/public/js/out/reagent/impl/template.cljs", :line 37, :column 1, :end-line 37, :end-column 22, :test true, :name reagent.impl.template/prop-name-cache}, convert-props {:protocol-inline nil, :meta {:arglists (quote ([props id-class])), :end-column 21, :end-line 76, :column 7, :line 76, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/convert-props, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 21, :method-params ([props id-class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil object any array string function clj-nil}, :variadic false, :max-fixed-arity 2}), :line 76, :end-line 76, :max-fixed-arity 2, :fn-var true, :arglists (quote ([props id-class])), :test true}, named? {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 14, :end-line 21, :column 7, :line 21, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/named?, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag boolean, :variadic false, :max-fixed-arity 1}), :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, parse-tag {:protocol-inline nil, :meta {:arglists (quote ([hiccup-tag])), :end-column 17, :end-line 151, :column 7, :line 151, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/parse-tag, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 17, :method-params ([hiccup-tag]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag object, :variadic false, :max-fixed-arity 1}), :line 151, :end-line 151, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hiccup-tag])), :test true}, key-from-vec {:protocol-inline nil, :meta {:arglists (quote ([v])), :end-column 20, :end-line 184, :column 7, :line 184, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/key-from-vec, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 20, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 184, :end-line 184, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :test true}, input-unmount {:protocol-inline nil, :meta {:arglists (quote ([this])), :end-column 21, :end-line 90, :column 7, :line 90, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/input-unmount, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :test true}, reagent-input-class {:meta {:end-column 26, :end-line 128, :column 6, :line 128, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :file "resources/public/js/out/reagent/impl/template.cljs", :line 128, :column 1, :end-line 128, :end-column 26, :test true, :name reagent.impl.template/reagent-input-class}, native-element {:protocol-inline nil, :meta {:arglists (quote ([tag argv])), :end-column 22, :end-line 212, :column 7, :line 212, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/native-element, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 22, :method-params ([tag argv]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 2}), :line 212, :end-line 212, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tag argv])), :test true}, reagent-input {:protocol-inline nil, :meta {:arglists (quote ([argv comp jsprops first-child])), :end-column 21, :end-line 142, :column 7, :line 142, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/reagent-input, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 21, :method-params ([argv comp jsprops first-child]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 4}), :line 142, :end-line 142, :max-fixed-arity 4, :fn-var true, :arglists (quote ([argv comp jsprops first-child])), :test true}, vec-to-elem {:protocol-inline nil, :meta {:arglists (quote ([v])), :end-column 19, :end-line 229, :column 7, :line 229, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/vec-to-elem, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 19, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 229, :end-line 229, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :test true}, input-handle-change {:protocol-inline nil, :meta {:arglists (quote ([this on-change e])), :end-column 27, :end-line 100, :column 7, :line 100, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/input-handle-change, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 27, :method-params ([this on-change e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 3}), :line 100, :end-line 100, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this on-change e])), :test true}, input-set-value {:protocol-inline nil, :meta {:arglists (quote ([this])), :end-column 23, :end-line 93, :column 7, :line 93, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/input-set-value, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 93, :end-line 93, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :test true}, make-element {:protocol-inline nil, :meta {:arglists (quote ([argv comp jsprops first-child])), :end-column 20, :end-line 283, :column 7, :line 283, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/make-element, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 20, :method-params ([argv comp jsprops first-child]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 4}), :line 283, :end-line 283, :max-fixed-arity 4, :fn-var true, :arglists (quote ([argv comp jsprops first-child])), :test true}, input-spec {:meta {:end-column 17, :end-line 132, :column 6, :line 132, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :file "resources/public/js/out/reagent/impl/template.cljs", :line 132, :column 1, :end-line 132, :end-column 17, :test true, :name reagent.impl.template/input-spec}, expand-seq-dev {:protocol-inline nil, :meta {:arglists (quote ([s o])), :end-column 22, :end-line 258, :column 7, :line 258, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/expand-seq-dev, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 22, :method-params ([s o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag array, :variadic false, :max-fixed-arity 2}), :line 258, :end-line 258, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s o])), :test true}, convert-prop-value {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 26, :end-line 53, :column 7, :line 53, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/convert-prop-value, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 26, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil object any array string function clj-nil}, :variadic false, :max-fixed-arity 1}), :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, cached-prop-name {:protocol-inline nil, :meta {:arglists (quote ([k])), :end-column 24, :end-line 45, :column 7, :line 45, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/cached-prop-name, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 24, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k])), :test true}, expand-seq {:protocol-inline nil, :meta {:arglists (quote ([s])), :end-column 18, :end-line 252, :column 7, :line 252, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/expand-seq, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 18, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag array, :variadic false, :max-fixed-arity 1}), :line 252, :end-line 252, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, expand-seq-check {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 24, :end-line 268, :column 7, :line 268, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/expand-seq-check, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 24, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any array}, :variadic false, :max-fixed-arity 1}), :line 268, :end-line 268, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, cached-parse {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 20, :end-line 202, :column 7, :line 202, :file "/Users/dhruv/Documents/engineering/experiments/mailchimp-form-cljs/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/cached-parse, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 20, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 202, :end-line 202, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}}, :name reagent.impl.template, :doc nil, :excludes #{}, :use-macros {log reagent.debug, warn-unless reagent.debug, dbg reagent.debug, .' reagent.interop, prn reagent.debug, warn reagent.debug, dev? reagent.debug, println reagent.debug, .! reagent.interop}, :require-macros {reagent.debug reagent.debug, reagent.interop reagent.interop}, :uses {is-client reagent.impl.util}, :requires {reagent.impl.util reagent.impl.util, comp reagent.impl.component, reagent.interop reagent.interop, reagent.ratom reagent.ratom, reagent.impl.batching reagent.impl.batching, reagent.impl.component reagent.impl.component, util reagent.impl.util, ratom reagent.ratom, string clojure.string, batch reagent.impl.batching, reagent.debug reagent.debug, clojure.string clojure.string}, :imports nil}