// Compiled by ClojureScript 0.0-2934 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2934";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__2204__delegate = function (args){
return console.log.apply(console,(function (){var G__2203 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__2203) : cljs.core.into_array.call(null,G__2203));
})());
};
var G__2204 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__2205__i = 0, G__2205__a = new Array(arguments.length -  0);
while (G__2205__i < G__2205__a.length) {G__2205__a[G__2205__i] = arguments[G__2205__i + 0]; ++G__2205__i;}
  args = new cljs.core.IndexedSeq(G__2205__a,0);
} 
return G__2204__delegate.call(this,args);};
G__2204.cljs$lang$maxFixedArity = 0;
G__2204.cljs$lang$applyTo = (function (arglist__2206){
var args = cljs.core.seq(arglist__2206);
return G__2204__delegate(args);
});
G__2204.cljs$core$IFn$_invoke$arity$variadic = G__2204__delegate;
return G__2204;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__2208 = x;
return goog.isString(G__2208);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__2210 = x__$1;
return goog.typeOf(G__2210);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3081__auto__ = ty;
if(cljs.core.truth_(and__3081__auto__)){
return ty.cljs$lang$type;
} else {
return and__3081__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__2212 = obj;
return goog.typeOf(G__2212);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__2214 = Symbol;
return goog.typeOf(G__2214);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__3508__auto___2216 = len;
var i_2217 = (0);
while(true){
if((i_2217 < n__3508__auto___2216)){
(new_arr[i_2217] = (arr[i_2217]));

var G__2218 = (i_2217 + (1));
i_2217 = G__2218;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__2219 = (i + (1));
i = G__2219;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__2228__delegate = function (array,i,idxs){
var G__2225 = aget;
var G__2226 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__2227 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__2225,G__2226,G__2227) : cljs.core.apply.call(null,G__2225,G__2226,G__2227));
};
var G__2228 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__2229__i = 0, G__2229__a = new Array(arguments.length -  2);
while (G__2229__i < G__2229__a.length) {G__2229__a[G__2229__i] = arguments[G__2229__i + 2]; ++G__2229__i;}
  idxs = new cljs.core.IndexedSeq(G__2229__a,0);
} 
return G__2228__delegate.call(this,array,i,idxs);};
G__2228.cljs$lang$maxFixedArity = 2;
G__2228.cljs$lang$applyTo = (function (arglist__2230){
var array = cljs.core.first(arglist__2230);
arglist__2230 = cljs.core.next(arglist__2230);
var i = cljs.core.first(arglist__2230);
var idxs = cljs.core.rest(arglist__2230);
return G__2228__delegate(array,i,idxs);
});
G__2228.cljs$core$IFn$_invoke$arity$variadic = G__2228__delegate;
return G__2228;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__2231 = null;
if (arguments.length > 2) {
var G__2232__i = 0, G__2232__a = new Array(arguments.length -  2);
while (G__2232__i < G__2232__a.length) {G__2232__a[G__2232__i] = arguments[G__2232__i + 2]; ++G__2232__i;}
G__2231 = new cljs.core.IndexedSeq(G__2232__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__2231);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__2241__delegate = function (array,idx,idx2,idxv){
var G__2237 = aset;
var G__2238 = (array[idx]);
var G__2239 = idx2;
var G__2240 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__2237,G__2238,G__2239,G__2240) : cljs.core.apply.call(null,G__2237,G__2238,G__2239,G__2240));
};
var G__2241 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__2242__i = 0, G__2242__a = new Array(arguments.length -  3);
while (G__2242__i < G__2242__a.length) {G__2242__a[G__2242__i] = arguments[G__2242__i + 3]; ++G__2242__i;}
  idxv = new cljs.core.IndexedSeq(G__2242__a,0);
} 
return G__2241__delegate.call(this,array,idx,idx2,idxv);};
G__2241.cljs$lang$maxFixedArity = 3;
G__2241.cljs$lang$applyTo = (function (arglist__2243){
var array = cljs.core.first(arglist__2243);
arglist__2243 = cljs.core.next(arglist__2243);
var idx = cljs.core.first(arglist__2243);
arglist__2243 = cljs.core.next(arglist__2243);
var idx2 = cljs.core.first(arglist__2243);
var idxv = cljs.core.rest(arglist__2243);
return G__2241__delegate(array,idx,idx2,idxv);
});
G__2241.cljs$core$IFn$_invoke$arity$variadic = G__2241__delegate;
return G__2241;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__2244 = null;
if (arguments.length > 3) {
var G__2245__i = 0, G__2245__a = new Array(arguments.length -  3);
while (G__2245__i < G__2245__a.length) {G__2245__a[G__2245__i] = arguments[G__2245__i + 3]; ++G__2245__i;}
G__2244 = new cljs.core.IndexedSeq(G__2245__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__2244);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__2251 = (function (a,x){
a.push(x);

return a;
});
var G__2252 = [];
var G__2253 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__2251,G__2252,G__2253) : cljs.core.reduce.call(null,G__2251,G__2252,G__2253));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__2254__i = 0, G__2254__a = new Array(arguments.length -  2);
while (G__2254__i < G__2254__a.length) {G__2254__a[G__2254__i] = arguments[G__2254__i + 2]; ++G__2254__i;}
  args = new cljs.core.IndexedSeq(G__2254__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__2255){
var obj = cljs.core.first(arglist__2255);
arglist__2255 = cljs.core.next(arglist__2255);
var s = cljs.core.first(arglist__2255);
var args = cljs.core.rest(arglist__2255);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj2257 = {};
return obj2257;
})();


cljs.core.IFn = (function (){var obj2259 = {};
return obj2259;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3081__auto__ = this$;
if(and__3081__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__3357__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3089__auto__ = (cljs.core._invoke[(function (){var G__2305 = x__3357__auto__;
return goog.typeOf(G__2305);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._invoke["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3081__auto__ = this$;
if(and__3081__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__3357__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3089__auto__ = (cljs.core._invoke[(function (){var G__2307 = x__3357__auto__;
return goog.typeOf(G__2307);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._invoke["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3081__auto__ = this$;
if(and__3081__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__3357__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3089__auto__ = (cljs.core._invoke[(function (){var G__2309 = x__3357__auto__;
return goog.typeOf(G__2309);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._invoke["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3081__auto__ = this$;
if(and__3081__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__3357__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3089__auto__ = (cljs.core._invoke[(function (){var G__2311 = x__3357__auto__;
return goog.typeOf(G__2311);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._invoke["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3081__auto__ = this$;
if(and__3081__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__3357__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3089__auto__ = (cljs.core._invoke[(function (){var G__2313 = x__3357__auto__;
return goog.typeOf(G__2313);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._invoke["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3081__auto__ = this$;
if(and__3081__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__3357__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3089__auto__ = (cljs.core._invoke[(function (){var G__2315 = x__3357__auto__;
return goog.typeOf(G__2315);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._invoke["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3081__auto__ = this$;
if(and__3081__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__3357__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3089__auto__ = (cljs.core._invoke[(function (){var G__2317 = x__3357__auto__;
return goog.typeOf(G__2317);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._invoke["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3081__auto__ = this$;
if(and__3081__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__3357__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3089__auto__ = (cljs.core._invoke[(function (){var G__2319 = x__3357__auto__;
return goog.typeOf(G__2319);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._invoke["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3081__auto__ = this$;
if(and__3081__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__3357__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3089__auto__ = (cljs.core._invoke[(function (){var G__2321 = x__3357__auto__;
return goog.typeOf(G__2321);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._invoke["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3081__auto__ = this$;
if(and__3081__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__3357__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3089__auto__ = (cljs.core._invoke[(function (){var G__2323 = x__3357__auto__;
return goog.typeOf(G__2323);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._invoke["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3081__auto__ = this$;
if(and__3081__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__3357__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3089__auto__ = (cljs.core._invoke[(function (){var G__2325 = x__3357__auto__;
return goog.typeOf(G__2325);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._invoke["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3081__auto__ = this$;
if(and__3081__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__3357__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3089__auto__ = (cljs.core._invoke[(function (){var G__2327 = x__3357__auto__;
return goog.typeOf(G__2327);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._invoke["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3081__auto__ = this$;
if(and__3081__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__3357__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3089__auto__ = (cljs.core._invoke[(function (){var G__2329 = x__3357__auto__;
return goog.typeOf(G__2329);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._invoke["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3081__auto__ = this$;
if(and__3081__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__3357__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3089__auto__ = (cljs.core._invoke[(function (){var G__2331 = x__3357__auto__;
return goog.typeOf(G__2331);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._invoke["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3081__auto__ = this$;
if(and__3081__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__3357__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3089__auto__ = (cljs.core._invoke[(function (){var G__2333 = x__3357__auto__;
return goog.typeOf(G__2333);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._invoke["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3081__auto__ = this$;
if(and__3081__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__3357__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3089__auto__ = (cljs.core._invoke[(function (){var G__2335 = x__3357__auto__;
return goog.typeOf(G__2335);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._invoke["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3081__auto__ = this$;
if(and__3081__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__3357__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3089__auto__ = (cljs.core._invoke[(function (){var G__2337 = x__3357__auto__;
return goog.typeOf(G__2337);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._invoke["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3081__auto__ = this$;
if(and__3081__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__3357__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3089__auto__ = (cljs.core._invoke[(function (){var G__2339 = x__3357__auto__;
return goog.typeOf(G__2339);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._invoke["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3081__auto__ = this$;
if(and__3081__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__3357__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3089__auto__ = (cljs.core._invoke[(function (){var G__2341 = x__3357__auto__;
return goog.typeOf(G__2341);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._invoke["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3081__auto__ = this$;
if(and__3081__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__3357__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3089__auto__ = (cljs.core._invoke[(function (){var G__2343 = x__3357__auto__;
return goog.typeOf(G__2343);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._invoke["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3081__auto__ = this$;
if(and__3081__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__3357__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3089__auto__ = (cljs.core._invoke[(function (){var G__2345 = x__3357__auto__;
return goog.typeOf(G__2345);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._invoke["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3081__auto__ = this$;
if(and__3081__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__3357__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3089__auto__ = (cljs.core._invoke[(function (){var G__2347 = x__3357__auto__;
return goog.typeOf(G__2347);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._invoke["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj2349 = {};
return obj2349;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3081__auto__ = value;
if(and__3081__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3081__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__3357__auto__ = (((value == null))?null:value);
return (function (){var or__3089__auto__ = (cljs.core._clone[(function (){var G__2353 = x__3357__auto__;
return goog.typeOf(G__2353);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._clone["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj2355 = {};
return obj2355;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._count[(function (){var G__2359 = x__3357__auto__;
return goog.typeOf(G__2359);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._count["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj2361 = {};
return obj2361;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._empty[(function (){var G__2365 = x__3357__auto__;
return goog.typeOf(G__2365);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._empty["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj2367 = {};
return obj2367;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._conj[(function (){var G__2371 = x__3357__auto__;
return goog.typeOf(G__2371);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._conj["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj2373 = {};
return obj2373;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._nth[(function (){var G__2379 = x__3357__auto__;
return goog.typeOf(G__2379);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._nth["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._nth[(function (){var G__2381 = x__3357__auto__;
return goog.typeOf(G__2381);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._nth["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj2383 = {};
return obj2383;
})();


cljs.core.ISeq = (function (){var obj2385 = {};
return obj2385;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._first[(function (){var G__2389 = x__3357__auto__;
return goog.typeOf(G__2389);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._first["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._rest[(function (){var G__2393 = x__3357__auto__;
return goog.typeOf(G__2393);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._rest["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj2395 = {};
return obj2395;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._next[(function (){var G__2399 = x__3357__auto__;
return goog.typeOf(G__2399);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._next["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj2401 = {};
return obj2401;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3081__auto__ = o;
if(and__3081__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3081__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__3357__auto__ = (((o == null))?null:o);
return (function (){var or__3089__auto__ = (cljs.core._lookup[(function (){var G__2407 = x__3357__auto__;
return goog.typeOf(G__2407);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._lookup["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3081__auto__ = o;
if(and__3081__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3081__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__3357__auto__ = (((o == null))?null:o);
return (function (){var or__3089__auto__ = (cljs.core._lookup[(function (){var G__2409 = x__3357__auto__;
return goog.typeOf(G__2409);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._lookup["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj2411 = {};
return obj2411;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__2415 = x__3357__auto__;
return goog.typeOf(G__2415);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._assoc[(function (){var G__2419 = x__3357__auto__;
return goog.typeOf(G__2419);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._assoc["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj2421 = {};
return obj2421;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._dissoc[(function (){var G__2425 = x__3357__auto__;
return goog.typeOf(G__2425);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj2427 = {};
return obj2427;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._key[(function (){var G__2431 = x__3357__auto__;
return goog.typeOf(G__2431);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._key["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._val[(function (){var G__2435 = x__3357__auto__;
return goog.typeOf(G__2435);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._val["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj2437 = {};
return obj2437;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._disjoin[(function (){var G__2441 = x__3357__auto__;
return goog.typeOf(G__2441);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj2443 = {};
return obj2443;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._peek[(function (){var G__2447 = x__3357__auto__;
return goog.typeOf(G__2447);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._peek["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._pop[(function (){var G__2451 = x__3357__auto__;
return goog.typeOf(G__2451);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._pop["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj2453 = {};
return obj2453;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._assoc_n[(function (){var G__2457 = x__3357__auto__;
return goog.typeOf(G__2457);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj2459 = {};
return obj2459;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3081__auto__ = o;
if(and__3081__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3081__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__3357__auto__ = (((o == null))?null:o);
return (function (){var or__3089__auto__ = (cljs.core._deref[(function (){var G__2463 = x__3357__auto__;
return goog.typeOf(G__2463);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._deref["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj2465 = {};
return obj2465;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3081__auto__ = o;
if(and__3081__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3081__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__3357__auto__ = (((o == null))?null:o);
return (function (){var or__3089__auto__ = (cljs.core._deref_with_timeout[(function (){var G__2469 = x__3357__auto__;
return goog.typeOf(G__2469);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj2471 = {};
return obj2471;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3081__auto__ = o;
if(and__3081__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3081__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__3357__auto__ = (((o == null))?null:o);
return (function (){var or__3089__auto__ = (cljs.core._meta[(function (){var G__2475 = x__3357__auto__;
return goog.typeOf(G__2475);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._meta["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj2477 = {};
return obj2477;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3081__auto__ = o;
if(and__3081__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3081__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__3357__auto__ = (((o == null))?null:o);
return (function (){var or__3089__auto__ = (cljs.core._with_meta[(function (){var G__2481 = x__3357__auto__;
return goog.typeOf(G__2481);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj2483 = {};
return obj2483;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._reduce[(function (){var G__2489 = x__3357__auto__;
return goog.typeOf(G__2489);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._reduce["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._reduce[(function (){var G__2491 = x__3357__auto__;
return goog.typeOf(G__2491);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._reduce["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj2493 = {};
return obj2493;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._kv_reduce[(function (){var G__2497 = x__3357__auto__;
return goog.typeOf(G__2497);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj2499 = {};
return obj2499;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3081__auto__ = o;
if(and__3081__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3081__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__3357__auto__ = (((o == null))?null:o);
return (function (){var or__3089__auto__ = (cljs.core._equiv[(function (){var G__2503 = x__3357__auto__;
return goog.typeOf(G__2503);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._equiv["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj2505 = {};
return obj2505;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3081__auto__ = o;
if(and__3081__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3081__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__3357__auto__ = (((o == null))?null:o);
return (function (){var or__3089__auto__ = (cljs.core._hash[(function (){var G__2509 = x__3357__auto__;
return goog.typeOf(G__2509);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._hash["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj2511 = {};
return obj2511;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3081__auto__ = o;
if(and__3081__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3081__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__3357__auto__ = (((o == null))?null:o);
return (function (){var or__3089__auto__ = (cljs.core._seq[(function (){var G__2515 = x__3357__auto__;
return goog.typeOf(G__2515);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._seq["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj2517 = {};
return obj2517;
})();


cljs.core.IList = (function (){var obj2519 = {};
return obj2519;
})();


cljs.core.IRecord = (function (){var obj2521 = {};
return obj2521;
})();


cljs.core.IReversible = (function (){var obj2523 = {};
return obj2523;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._rseq[(function (){var G__2527 = x__3357__auto__;
return goog.typeOf(G__2527);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._rseq["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj2529 = {};
return obj2529;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._sorted_seq[(function (){var G__2533 = x__3357__auto__;
return goog.typeOf(G__2533);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._sorted_seq_from[(function (){var G__2537 = x__3357__auto__;
return goog.typeOf(G__2537);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._entry_key[(function (){var G__2541 = x__3357__auto__;
return goog.typeOf(G__2541);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._comparator[(function (){var G__2545 = x__3357__auto__;
return goog.typeOf(G__2545);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._comparator["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj2547 = {};
return obj2547;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3081__auto__ = writer;
if(and__3081__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3081__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__3357__auto__ = (((writer == null))?null:writer);
return (function (){var or__3089__auto__ = (cljs.core._write[(function (){var G__2551 = x__3357__auto__;
return goog.typeOf(G__2551);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._write["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3081__auto__ = writer;
if(and__3081__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3081__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__3357__auto__ = (((writer == null))?null:writer);
return (function (){var or__3089__auto__ = (cljs.core._flush[(function (){var G__2555 = x__3357__auto__;
return goog.typeOf(G__2555);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._flush["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj2557 = {};
return obj2557;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3081__auto__ = o;
if(and__3081__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3081__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__3357__auto__ = (((o == null))?null:o);
return (function (){var or__3089__auto__ = (cljs.core._pr_writer[(function (){var G__2561 = x__3357__auto__;
return goog.typeOf(G__2561);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj2563 = {};
return obj2563;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3081__auto__ = d;
if(and__3081__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3081__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__3357__auto__ = (((d == null))?null:d);
return (function (){var or__3089__auto__ = (cljs.core._realized_QMARK_[(function (){var G__2567 = x__3357__auto__;
return goog.typeOf(G__2567);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj2569 = {};
return obj2569;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3081__auto__ = this$;
if(and__3081__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3081__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__3357__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3089__auto__ = (cljs.core._notify_watches[(function (){var G__2573 = x__3357__auto__;
return goog.typeOf(G__2573);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3081__auto__ = this$;
if(and__3081__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3081__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__3357__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3089__auto__ = (cljs.core._add_watch[(function (){var G__2577 = x__3357__auto__;
return goog.typeOf(G__2577);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3081__auto__ = this$;
if(and__3081__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3081__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__3357__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3089__auto__ = (cljs.core._remove_watch[(function (){var G__2581 = x__3357__auto__;
return goog.typeOf(G__2581);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj2583 = {};
return obj2583;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._as_transient[(function (){var G__2587 = x__3357__auto__;
return goog.typeOf(G__2587);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj2589 = {};
return obj2589;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3081__auto__ = tcoll;
if(and__3081__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3081__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__3357__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3089__auto__ = (cljs.core._conj_BANG_[(function (){var G__2593 = x__3357__auto__;
return goog.typeOf(G__2593);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3081__auto__ = tcoll;
if(and__3081__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3081__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__3357__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3089__auto__ = (cljs.core._persistent_BANG_[(function (){var G__2597 = x__3357__auto__;
return goog.typeOf(G__2597);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj2599 = {};
return obj2599;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3081__auto__ = tcoll;
if(and__3081__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3081__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__3357__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3089__auto__ = (cljs.core._assoc_BANG_[(function (){var G__2603 = x__3357__auto__;
return goog.typeOf(G__2603);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj2605 = {};
return obj2605;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3081__auto__ = tcoll;
if(and__3081__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3081__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__3357__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3089__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__2609 = x__3357__auto__;
return goog.typeOf(G__2609);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj2611 = {};
return obj2611;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3081__auto__ = tcoll;
if(and__3081__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3081__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__3357__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3089__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__2615 = x__3357__auto__;
return goog.typeOf(G__2615);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3081__auto__ = tcoll;
if(and__3081__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3081__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__3357__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3089__auto__ = (cljs.core._pop_BANG_[(function (){var G__2619 = x__3357__auto__;
return goog.typeOf(G__2619);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj2621 = {};
return obj2621;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3081__auto__ = tcoll;
if(and__3081__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3081__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__3357__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3089__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__2625 = x__3357__auto__;
return goog.typeOf(G__2625);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj2627 = {};
return obj2627;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3081__auto__ = x;
if(and__3081__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3081__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__3357__auto__ = (((x == null))?null:x);
return (function (){var or__3089__auto__ = (cljs.core._compare[(function (){var G__2631 = x__3357__auto__;
return goog.typeOf(G__2631);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._compare["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj2633 = {};
return obj2633;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._drop_first[(function (){var G__2637 = x__3357__auto__;
return goog.typeOf(G__2637);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj2639 = {};
return obj2639;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._chunked_first[(function (){var G__2643 = x__3357__auto__;
return goog.typeOf(G__2643);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._chunked_rest[(function (){var G__2647 = x__3357__auto__;
return goog.typeOf(G__2647);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj2649 = {};
return obj2649;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._chunked_next[(function (){var G__2653 = x__3357__auto__;
return goog.typeOf(G__2653);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj2655 = {};
return obj2655;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3081__auto__ = x;
if(and__3081__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3081__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__3357__auto__ = (((x == null))?null:x);
return (function (){var or__3089__auto__ = (cljs.core._name[(function (){var G__2659 = x__3357__auto__;
return goog.typeOf(G__2659);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._name["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3081__auto__ = x;
if(and__3081__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3081__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__3357__auto__ = (((x == null))?null:x);
return (function (){var or__3089__auto__ = (cljs.core._namespace[(function (){var G__2663 = x__3357__auto__;
return goog.typeOf(G__2663);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._namespace["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj2665 = {};
return obj2665;
})();


cljs.core.IReset = (function (){var obj2667 = {};
return obj2667;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3081__auto__ = o;
if(and__3081__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3081__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__3357__auto__ = (((o == null))?null:o);
return (function (){var or__3089__auto__ = (cljs.core._reset_BANG_[(function (){var G__2671 = x__3357__auto__;
return goog.typeOf(G__2671);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj2673 = {};
return obj2673;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3081__auto__ = o;
if(and__3081__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3081__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__3357__auto__ = (((o == null))?null:o);
return (function (){var or__3089__auto__ = (cljs.core._swap_BANG_[(function (){var G__2683 = x__3357__auto__;
return goog.typeOf(G__2683);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3081__auto__ = o;
if(and__3081__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3081__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__3357__auto__ = (((o == null))?null:o);
return (function (){var or__3089__auto__ = (cljs.core._swap_BANG_[(function (){var G__2685 = x__3357__auto__;
return goog.typeOf(G__2685);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3081__auto__ = o;
if(and__3081__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3081__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__3357__auto__ = (((o == null))?null:o);
return (function (){var or__3089__auto__ = (cljs.core._swap_BANG_[(function (){var G__2687 = x__3357__auto__;
return goog.typeOf(G__2687);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3081__auto__ = o;
if(and__3081__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3081__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__3357__auto__ = (((o == null))?null:o);
return (function (){var or__3089__auto__ = (cljs.core._swap_BANG_[(function (){var G__2689 = x__3357__auto__;
return goog.typeOf(G__2689);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj2691 = {};
return obj2691;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3081__auto__ = o;
if(and__3081__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3081__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__3357__auto__ = (((o == null))?null:o);
return (function (){var or__3089__auto__ = (cljs.core._vreset_BANG_[(function (){var G__2695 = x__3357__auto__;
return goog.typeOf(G__2695);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj2697 = {};
return obj2697;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3081__auto__ = coll;
if(and__3081__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3081__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__3357__auto__ = (((coll == null))?null:coll);
return (function (){var or__3089__auto__ = (cljs.core._iterator[(function (){var G__2701 = x__3357__auto__;
return goog.typeOf(G__2701);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._iterator["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__2704 = (4294967295);
var G__2705 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__2704,G__2705) : Math.imul.call(null,G__2704,G__2705));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__2708 = a;
var G__2709 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__2708,G__2709) : Math.imul.call(null,G__2708,G__2709));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__2710 = (i + (2));
var G__2711 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__2710;
h1 = G__2711;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj2713 = {};
return obj2713;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__2714 = (i + (1));
var G__2715 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__2714;
hash = G__2715;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj2719 = {};
return obj2719;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__2722 = o;
if(G__2722){
var bit__3383__auto__ = (G__2722.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__3383__auto__) || (G__2722.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__2723 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__2723) : Math.floor.call(null,G__2723));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3081__auto__ = cljs.core.not(a.ns);
if(and__3081__auto__){
return b.ns;
} else {
return and__3081__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__2730 = a.ns;
var G__2731 = b.ns;
return goog.array.defaultCompare(G__2730,G__2731);
})();
if(((0) === nsc)){
var G__2732 = a.name;
var G__2733 = b.name;
return goog.array.defaultCompare(G__2732,G__2733);
} else {
return nsc;
}
}
} else {
var G__2734 = a.name;
var G__2735 = b.name;
return goog.array.defaultCompare(G__2734,G__2735);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__3182__auto__ = self__._hash;
if(!((h__3182__auto__ == null))){
return h__3182__auto__;
} else {
var h__3182__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__3182__auto____$1;

return h__3182__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__2737 = null;
var G__2737__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__2737__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__2737 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__2737__2.call(this,self__,coll);
case 3:
return G__2737__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2737.cljs$core$IFn$_invoke$arity$2 = G__2737__2;
G__2737.cljs$core$IFn$_invoke$arity$3 = G__2737__3;
return G__2737;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args2736){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args2736)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__2785 = null;
var G__2785__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__2785__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__2785__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__2785__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__2785__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__2785__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__2785__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__2785__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__2785__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__2785__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__2785__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__2785__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__2785__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__2785__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__2785__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__2785__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__2785__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__2785__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__2785__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__2785__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__2785__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__2785__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__2741 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__2742 = a;
var G__2743 = b;
var G__2744 = c;
var G__2745 = d;
var G__2746 = e;
var G__2747 = f;
var G__2748 = g;
var G__2749 = h;
var G__2750 = i;
var G__2751 = j;
var G__2752 = k;
var G__2753 = l;
var G__2754 = m;
var G__2755 = n;
var G__2756 = o;
var G__2757 = p;
var G__2758 = q;
var G__2759 = r;
var G__2760 = s;
var G__2761 = t;
var G__2762 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__2741,G__2742,G__2743,G__2744,G__2745,G__2746,G__2747,G__2748,G__2749,G__2750,G__2751,G__2752,G__2753,G__2754,G__2755,G__2756,G__2757,G__2758,G__2759,G__2760,G__2761,G__2762) : cljs.core.apply.call(null,G__2741,G__2742,G__2743,G__2744,G__2745,G__2746,G__2747,G__2748,G__2749,G__2750,G__2751,G__2752,G__2753,G__2754,G__2755,G__2756,G__2757,G__2758,G__2759,G__2760,G__2761,G__2762));
});
G__2785 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__2785__1.call(this,self__);
case 2:
return G__2785__2.call(this,self__,a);
case 3:
return G__2785__3.call(this,self__,a,b);
case 4:
return G__2785__4.call(this,self__,a,b,c);
case 5:
return G__2785__5.call(this,self__,a,b,c,d);
case 6:
return G__2785__6.call(this,self__,a,b,c,d,e);
case 7:
return G__2785__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__2785__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__2785__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__2785__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__2785__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__2785__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__2785__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__2785__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__2785__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__2785__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__2785__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__2785__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__2785__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__2785__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__2785__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__2785__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2785.cljs$core$IFn$_invoke$arity$1 = G__2785__1;
G__2785.cljs$core$IFn$_invoke$arity$2 = G__2785__2;
G__2785.cljs$core$IFn$_invoke$arity$3 = G__2785__3;
G__2785.cljs$core$IFn$_invoke$arity$4 = G__2785__4;
G__2785.cljs$core$IFn$_invoke$arity$5 = G__2785__5;
G__2785.cljs$core$IFn$_invoke$arity$6 = G__2785__6;
G__2785.cljs$core$IFn$_invoke$arity$7 = G__2785__7;
G__2785.cljs$core$IFn$_invoke$arity$8 = G__2785__8;
G__2785.cljs$core$IFn$_invoke$arity$9 = G__2785__9;
G__2785.cljs$core$IFn$_invoke$arity$10 = G__2785__10;
G__2785.cljs$core$IFn$_invoke$arity$11 = G__2785__11;
G__2785.cljs$core$IFn$_invoke$arity$12 = G__2785__12;
G__2785.cljs$core$IFn$_invoke$arity$13 = G__2785__13;
G__2785.cljs$core$IFn$_invoke$arity$14 = G__2785__14;
G__2785.cljs$core$IFn$_invoke$arity$15 = G__2785__15;
G__2785.cljs$core$IFn$_invoke$arity$16 = G__2785__16;
G__2785.cljs$core$IFn$_invoke$arity$17 = G__2785__17;
G__2785.cljs$core$IFn$_invoke$arity$18 = G__2785__18;
G__2785.cljs$core$IFn$_invoke$arity$19 = G__2785__19;
G__2785.cljs$core$IFn$_invoke$arity$20 = G__2785__20;
G__2785.cljs$core$IFn$_invoke$arity$21 = G__2785__21;
G__2785.cljs$core$IFn$_invoke$arity$22 = G__2785__22;
return G__2785;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args2740){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args2740)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__2763 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__2764 = a;
var G__2765 = b;
var G__2766 = c;
var G__2767 = d;
var G__2768 = e;
var G__2769 = f;
var G__2770 = g;
var G__2771 = h;
var G__2772 = i;
var G__2773 = j;
var G__2774 = k;
var G__2775 = l;
var G__2776 = m;
var G__2777 = n;
var G__2778 = o;
var G__2779 = p;
var G__2780 = q;
var G__2781 = r;
var G__2782 = s;
var G__2783 = t;
var G__2784 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__2763,G__2764,G__2765,G__2766,G__2767,G__2768,G__2769,G__2770,G__2771,G__2772,G__2773,G__2774,G__2775,G__2776,G__2777,G__2778,G__2779,G__2780,G__2781,G__2782,G__2783,G__2784) : cljs.core.apply.call(null,G__2763,G__2764,G__2765,G__2766,G__2767,G__2768,G__2769,G__2770,G__2771,G__2772,G__2773,G__2774,G__2775,G__2776,G__2777,G__2778,G__2779,G__2780,G__2781,G__2782,G__2783,G__2784));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__2787 = x;
if(G__2787){
var bit__3386__auto__ = null;
if(cljs.core.truth_((function (){var or__3089__auto__ = bit__3386__auto__;
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
return G__2787.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__2787.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__2787);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__2787);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__2789 = value;
if(G__2789){
var bit__3386__auto__ = (G__2789.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__3386__auto__) || (G__2789.cljs$core$ICloneable$)){
return true;
} else {
if((!G__2789.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__2789);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__2789);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__2791 = coll;
if(G__2791){
var bit__3383__auto__ = (G__2791.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__3383__auto__) || (G__2791.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__2793 = coll;
if(G__2793){
var bit__3383__auto__ = (G__2793.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__3383__auto__) || (G__2793.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__2795 = coll;
if(G__2795){
var bit__3383__auto__ = (G__2795.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__3383__auto__) || (G__2795.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__2797 = coll;
if(G__2797){
var bit__3383__auto__ = (G__2797.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__3383__auto__) || (G__2797.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__2802__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__2803 = y;
var G__2804 = cljs.core.first(more);
var G__2805 = cljs.core.next(more);
x = G__2803;
y = G__2804;
more = G__2805;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__2802 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__2806__i = 0, G__2806__a = new Array(arguments.length -  2);
while (G__2806__i < G__2806__a.length) {G__2806__a[G__2806__i] = arguments[G__2806__i + 2]; ++G__2806__i;}
  more = new cljs.core.IndexedSeq(G__2806__a,0);
} 
return G__2802__delegate.call(this,x,y,more);};
G__2802.cljs$lang$maxFixedArity = 2;
G__2802.cljs$lang$applyTo = (function (arglist__2807){
var x = cljs.core.first(arglist__2807);
arglist__2807 = cljs.core.next(arglist__2807);
var y = cljs.core.first(arglist__2807);
var more = cljs.core.rest(arglist__2807);
return G__2802__delegate(x,y,more);
});
G__2802.cljs$core$IFn$_invoke$arity$variadic = G__2802__delegate;
return G__2802;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__2808 = null;
if (arguments.length > 2) {
var G__2809__i = 0, G__2809__a = new Array(arguments.length -  2);
while (G__2809__i < G__2809__a.length) {G__2809__a[G__2809__i] = arguments[G__2809__i + 2]; ++G__2809__i;}
G__2808 = new cljs.core.IndexedSeq(G__2809__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2808);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__2810 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__2810) : cljs.core.es6_iterator_seq.call(null,G__2810));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__2811 = (n + (1));
var G__2812 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__2813 = cljs.core.next(coll__$1);
n = G__2811;
hash_code = G__2812;
coll__$1 = G__2813;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__2814 = (n + (1));
var G__2815 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__2816 = cljs.core.next(coll__$1);
n = G__2814;
hash_code = G__2815;
coll__$1 = G__2816;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__2817 = o;
return goog.getUid(G__2817);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__2819 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__2819) : cljs.core.deref.call(null,G__2819));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__2826 = val;
var G__2827 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2826,G__2827) : f.call(null,G__2826,G__2827));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__2832 = nval;
var G__2833 = (n + (1));
val = G__2832;
n = G__2833;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__2828 = val__$1;
var G__2829 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2828,G__2829) : f.call(null,G__2828,G__2829));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__2834 = nval;
var G__2835 = (n + (1));
val__$1 = G__2834;
n = G__2835;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__2830 = val__$1;
var G__2831 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2830,G__2831) : f.call(null,G__2830,G__2831));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__2836 = nval;
var G__2837 = (n + (1));
val__$1 = G__2836;
n = G__2837;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__2844 = val;
var G__2845 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2844,G__2845) : f.call(null,G__2844,G__2845));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__2850 = nval;
var G__2851 = (n + (1));
val = G__2850;
n = G__2851;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__2846 = val__$1;
var G__2847 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2846,G__2847) : f.call(null,G__2846,G__2847));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__2852 = nval;
var G__2853 = (n + (1));
val__$1 = G__2852;
n = G__2853;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__2848 = val__$1;
var G__2849 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2848,G__2849) : f.call(null,G__2848,G__2849));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__2854 = nval;
var G__2855 = (n + (1));
val__$1 = G__2854;
n = G__2855;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__2857 = x;
if(G__2857){
var bit__3386__auto__ = (G__2857.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__3386__auto__) || (G__2857.cljs$core$ICounted$)){
return true;
} else {
if((!G__2857.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__2857);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__2857);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__2859 = x;
if(G__2859){
var bit__3386__auto__ = (G__2859.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__3386__auto__) || (G__2859.cljs$core$IIndexed$)){
return true;
} else {
if((!G__2859.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__2859);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__2859);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__2860 = coll__$1;
var G__2861 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__2860,G__2861) : cljs.core.equiv_sequential.call(null,G__2860,G__2861));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__2862 = o;
var G__2863 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__2862,G__2863) : cljs.core.cons.call(null,G__2862,G__2863));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__2866 = coll__$1;
var G__2867 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__2866,G__2867) : cljs.core.equiv_sequential.call(null,G__2866,G__2867));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__2868 = cljs.core.List.EMPTY;
var G__2869 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__2868,G__2869) : cljs.core.with_meta.call(null,G__2868,G__2869));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__2870 = f;
var G__2871 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__2870,G__2871) : cljs.core.seq_reduce.call(null,G__2870,G__2871));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__2872 = f;
var G__2873 = start;
var G__2874 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__2872,G__2873,G__2874) : cljs.core.seq_reduce.call(null,G__2872,G__2873,G__2874));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__2875 = o;
var G__2876 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__2875,G__2876) : cljs.core.cons.call(null,G__2875,G__2876));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__2877 = sn;
s = G__2877;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__2882__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__2883 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__2884 = cljs.core.first(xs);
var G__2885 = cljs.core.next(xs);
coll = G__2883;
x = G__2884;
xs = G__2885;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__2882 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__2886__i = 0, G__2886__a = new Array(arguments.length -  2);
while (G__2886__i < G__2886__a.length) {G__2886__a[G__2886__i] = arguments[G__2886__i + 2]; ++G__2886__i;}
  xs = new cljs.core.IndexedSeq(G__2886__a,0);
} 
return G__2882__delegate.call(this,coll,x,xs);};
G__2882.cljs$lang$maxFixedArity = 2;
G__2882.cljs$lang$applyTo = (function (arglist__2887){
var coll = cljs.core.first(arglist__2887);
arglist__2887 = cljs.core.next(arglist__2887);
var x = cljs.core.first(arglist__2887);
var xs = cljs.core.rest(arglist__2887);
return G__2882__delegate(coll,x,xs);
});
G__2882.cljs$core$IFn$_invoke$arity$variadic = G__2882__delegate;
return G__2882;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__2888 = null;
if (arguments.length > 2) {
var G__2889__i = 0, G__2889__a = new Array(arguments.length -  2);
while (G__2889__i < G__2889__a.length) {G__2889__a[G__2889__i] = arguments[G__2889__i + 2]; ++G__2889__i;}
G__2888 = new cljs.core.IndexedSeq(G__2889__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__2888);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__2890 = cljs.core.next(s);
var G__2891 = (acc + (1));
s = G__2890;
acc = G__2891;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__2893 = coll;
if(G__2893){
var bit__3383__auto__ = (G__2893.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__3383__auto__) || (G__2893.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__2894 = cljs.core.next(coll);
var G__2895 = (n - (1));
coll = G__2894;
n = G__2895;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__2896 = cljs.core.next(coll);
var G__2897 = (n - (1));
var G__2898 = not_found;
coll = G__2896;
n = G__2897;
not_found = G__2898;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__2903 = coll;
if(G__2903){
var bit__3383__auto__ = (G__2903.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__3383__auto__) || (G__2903.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__2904 = coll;
if(G__2904){
var bit__3386__auto__ = (G__2904.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__3386__auto__) || (G__2904.cljs$core$ISeq$)){
return true;
} else {
if((!G__2904.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__2904);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__2904);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__2905 = coll;
if(G__2905){
var bit__3383__auto__ = (G__2905.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__3383__auto__) || (G__2905.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__2906 = coll;
if(G__2906){
var bit__3386__auto__ = (G__2906.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__3386__auto__) || (G__2906.cljs$core$ISeq$)){
return true;
} else {
if((!G__2906.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__2906);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__2906);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__2907 = (n__$1 - (1));
var G__2908 = cljs.core.rest(xs);
n__$1 = G__2907;
xs = G__2908;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__2911 = o;
if(G__2911){
var bit__3383__auto__ = (G__2911.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__3383__auto__) || (G__2911.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__2912 = o;
if(G__2912){
var bit__3383__auto__ = (G__2912.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__3383__auto__) || (G__2912.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__2916__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__2917 = ret;
var G__2918 = cljs.core.first(kvs);
var G__2919 = cljs.core.second(kvs);
var G__2920 = cljs.core.nnext(kvs);
coll = G__2917;
k = G__2918;
v = G__2919;
kvs = G__2920;
continue;
} else {
return ret;
}
break;
}
};
var G__2916 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__2921__i = 0, G__2921__a = new Array(arguments.length -  3);
while (G__2921__i < G__2921__a.length) {G__2921__a[G__2921__i] = arguments[G__2921__i + 3]; ++G__2921__i;}
  kvs = new cljs.core.IndexedSeq(G__2921__a,0);
} 
return G__2916__delegate.call(this,coll,k,v,kvs);};
G__2916.cljs$lang$maxFixedArity = 3;
G__2916.cljs$lang$applyTo = (function (arglist__2922){
var coll = cljs.core.first(arglist__2922);
arglist__2922 = cljs.core.next(arglist__2922);
var k = cljs.core.first(arglist__2922);
arglist__2922 = cljs.core.next(arglist__2922);
var v = cljs.core.first(arglist__2922);
var kvs = cljs.core.rest(arglist__2922);
return G__2916__delegate(coll,k,v,kvs);
});
G__2916.cljs$core$IFn$_invoke$arity$variadic = G__2916__delegate;
return G__2916;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__2923 = null;
if (arguments.length > 3) {
var G__2924__i = 0, G__2924__a = new Array(arguments.length -  3);
while (G__2924__i < G__2924__a.length) {G__2924__a[G__2924__i] = arguments[G__2924__i + 3]; ++G__2924__i;}
G__2923 = new cljs.core.IndexedSeq(G__2924__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__2923);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__2927__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__2928 = ret;
var G__2929 = cljs.core.first(ks);
var G__2930 = cljs.core.next(ks);
coll = G__2928;
k = G__2929;
ks = G__2930;
continue;
} else {
return ret;
}
}
break;
}
};
var G__2927 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__2931__i = 0, G__2931__a = new Array(arguments.length -  2);
while (G__2931__i < G__2931__a.length) {G__2931__a[G__2931__i] = arguments[G__2931__i + 2]; ++G__2931__i;}
  ks = new cljs.core.IndexedSeq(G__2931__a,0);
} 
return G__2927__delegate.call(this,coll,k,ks);};
G__2927.cljs$lang$maxFixedArity = 2;
G__2927.cljs$lang$applyTo = (function (arglist__2932){
var coll = cljs.core.first(arglist__2932);
arglist__2932 = cljs.core.next(arglist__2932);
var k = cljs.core.first(arglist__2932);
var ks = cljs.core.rest(arglist__2932);
return G__2927__delegate(coll,k,ks);
});
G__2927.cljs$core$IFn$_invoke$arity$variadic = G__2927__delegate;
return G__2927;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__2933 = null;
if (arguments.length > 2) {
var G__2934__i = 0, G__2934__a = new Array(arguments.length -  2);
while (G__2934__i < G__2934__a.length) {G__2934__a[G__2934__i] = arguments[G__2934__i + 2]; ++G__2934__i;}
G__2933 = new cljs.core.IndexedSeq(G__2934__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__2933);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3089__auto__ = (function (){var G__2939 = f;
return goog.isFunction(G__2939);
})();
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
var G__2940 = f;
if(G__2940){
var bit__3386__auto__ = null;
if(cljs.core.truth_((function (){var or__3089__auto____$1 = bit__3386__auto__;
if(cljs.core.truth_(or__3089__auto____$1)){
return or__3089__auto____$1;
} else {
return G__2940.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__2940.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__2940);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__2940);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__3406 = null;
var G__3406__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__3406__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__2942 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__2942) : self__.afn.call(null,G__2942));
});
var G__3406__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__2943 = a;
var G__2944 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__2943,G__2944) : self__.afn.call(null,G__2943,G__2944));
});
var G__3406__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__2945 = a;
var G__2946 = b;
var G__2947 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__2945,G__2946,G__2947) : self__.afn.call(null,G__2945,G__2946,G__2947));
});
var G__3406__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__2948 = a;
var G__2949 = b;
var G__2950 = c;
var G__2951 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__2948,G__2949,G__2950,G__2951) : self__.afn.call(null,G__2948,G__2949,G__2950,G__2951));
});
var G__3406__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__2952 = a;
var G__2953 = b;
var G__2954 = c;
var G__2955 = d;
var G__2956 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__2952,G__2953,G__2954,G__2955,G__2956) : self__.afn.call(null,G__2952,G__2953,G__2954,G__2955,G__2956));
});
var G__3406__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__2957 = a;
var G__2958 = b;
var G__2959 = c;
var G__2960 = d;
var G__2961 = e;
var G__2962 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__2957,G__2958,G__2959,G__2960,G__2961,G__2962) : self__.afn.call(null,G__2957,G__2958,G__2959,G__2960,G__2961,G__2962));
});
var G__3406__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__2963 = a;
var G__2964 = b;
var G__2965 = c;
var G__2966 = d;
var G__2967 = e;
var G__2968 = f;
var G__2969 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__2963,G__2964,G__2965,G__2966,G__2967,G__2968,G__2969) : self__.afn.call(null,G__2963,G__2964,G__2965,G__2966,G__2967,G__2968,G__2969));
});
var G__3406__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__2970 = a;
var G__2971 = b;
var G__2972 = c;
var G__2973 = d;
var G__2974 = e;
var G__2975 = f;
var G__2976 = g;
var G__2977 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__2970,G__2971,G__2972,G__2973,G__2974,G__2975,G__2976,G__2977) : self__.afn.call(null,G__2970,G__2971,G__2972,G__2973,G__2974,G__2975,G__2976,G__2977));
});
var G__3406__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__2978 = a;
var G__2979 = b;
var G__2980 = c;
var G__2981 = d;
var G__2982 = e;
var G__2983 = f;
var G__2984 = g;
var G__2985 = h;
var G__2986 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__2978,G__2979,G__2980,G__2981,G__2982,G__2983,G__2984,G__2985,G__2986) : self__.afn.call(null,G__2978,G__2979,G__2980,G__2981,G__2982,G__2983,G__2984,G__2985,G__2986));
});
var G__3406__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__2987 = a;
var G__2988 = b;
var G__2989 = c;
var G__2990 = d;
var G__2991 = e;
var G__2992 = f;
var G__2993 = g;
var G__2994 = h;
var G__2995 = i;
var G__2996 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__2987,G__2988,G__2989,G__2990,G__2991,G__2992,G__2993,G__2994,G__2995,G__2996) : self__.afn.call(null,G__2987,G__2988,G__2989,G__2990,G__2991,G__2992,G__2993,G__2994,G__2995,G__2996));
});
var G__3406__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__2997 = a;
var G__2998 = b;
var G__2999 = c;
var G__3000 = d;
var G__3001 = e;
var G__3002 = f;
var G__3003 = g;
var G__3004 = h;
var G__3005 = i;
var G__3006 = j;
var G__3007 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__2997,G__2998,G__2999,G__3000,G__3001,G__3002,G__3003,G__3004,G__3005,G__3006,G__3007) : self__.afn.call(null,G__2997,G__2998,G__2999,G__3000,G__3001,G__3002,G__3003,G__3004,G__3005,G__3006,G__3007));
});
var G__3406__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__3008 = a;
var G__3009 = b;
var G__3010 = c;
var G__3011 = d;
var G__3012 = e;
var G__3013 = f;
var G__3014 = g;
var G__3015 = h;
var G__3016 = i;
var G__3017 = j;
var G__3018 = k;
var G__3019 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__3008,G__3009,G__3010,G__3011,G__3012,G__3013,G__3014,G__3015,G__3016,G__3017,G__3018,G__3019) : self__.afn.call(null,G__3008,G__3009,G__3010,G__3011,G__3012,G__3013,G__3014,G__3015,G__3016,G__3017,G__3018,G__3019));
});
var G__3406__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__3020 = a;
var G__3021 = b;
var G__3022 = c;
var G__3023 = d;
var G__3024 = e;
var G__3025 = f;
var G__3026 = g;
var G__3027 = h;
var G__3028 = i;
var G__3029 = j;
var G__3030 = k;
var G__3031 = l;
var G__3032 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__3020,G__3021,G__3022,G__3023,G__3024,G__3025,G__3026,G__3027,G__3028,G__3029,G__3030,G__3031,G__3032) : self__.afn.call(null,G__3020,G__3021,G__3022,G__3023,G__3024,G__3025,G__3026,G__3027,G__3028,G__3029,G__3030,G__3031,G__3032));
});
var G__3406__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__3033 = a;
var G__3034 = b;
var G__3035 = c;
var G__3036 = d;
var G__3037 = e;
var G__3038 = f;
var G__3039 = g;
var G__3040 = h;
var G__3041 = i;
var G__3042 = j;
var G__3043 = k;
var G__3044 = l;
var G__3045 = m;
var G__3046 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__3033,G__3034,G__3035,G__3036,G__3037,G__3038,G__3039,G__3040,G__3041,G__3042,G__3043,G__3044,G__3045,G__3046) : self__.afn.call(null,G__3033,G__3034,G__3035,G__3036,G__3037,G__3038,G__3039,G__3040,G__3041,G__3042,G__3043,G__3044,G__3045,G__3046));
});
var G__3406__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__3047 = a;
var G__3048 = b;
var G__3049 = c;
var G__3050 = d;
var G__3051 = e;
var G__3052 = f;
var G__3053 = g;
var G__3054 = h;
var G__3055 = i;
var G__3056 = j;
var G__3057 = k;
var G__3058 = l;
var G__3059 = m;
var G__3060 = n;
var G__3061 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__3047,G__3048,G__3049,G__3050,G__3051,G__3052,G__3053,G__3054,G__3055,G__3056,G__3057,G__3058,G__3059,G__3060,G__3061) : self__.afn.call(null,G__3047,G__3048,G__3049,G__3050,G__3051,G__3052,G__3053,G__3054,G__3055,G__3056,G__3057,G__3058,G__3059,G__3060,G__3061));
});
var G__3406__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__3062 = a;
var G__3063 = b;
var G__3064 = c;
var G__3065 = d;
var G__3066 = e;
var G__3067 = f;
var G__3068 = g;
var G__3069 = h;
var G__3070 = i;
var G__3071 = j;
var G__3072 = k;
var G__3073 = l;
var G__3074 = m;
var G__3075 = n;
var G__3076 = o;
var G__3077 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__3062,G__3063,G__3064,G__3065,G__3066,G__3067,G__3068,G__3069,G__3070,G__3071,G__3072,G__3073,G__3074,G__3075,G__3076,G__3077) : self__.afn.call(null,G__3062,G__3063,G__3064,G__3065,G__3066,G__3067,G__3068,G__3069,G__3070,G__3071,G__3072,G__3073,G__3074,G__3075,G__3076,G__3077));
});
var G__3406__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__3078 = a;
var G__3079 = b;
var G__3080 = c;
var G__3081 = d;
var G__3082 = e;
var G__3083 = f;
var G__3084 = g;
var G__3085 = h;
var G__3086 = i;
var G__3087 = j;
var G__3088 = k;
var G__3089 = l;
var G__3090 = m;
var G__3091 = n;
var G__3092 = o;
var G__3093 = p;
var G__3094 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__3078,G__3079,G__3080,G__3081,G__3082,G__3083,G__3084,G__3085,G__3086,G__3087,G__3088,G__3089,G__3090,G__3091,G__3092,G__3093,G__3094) : self__.afn.call(null,G__3078,G__3079,G__3080,G__3081,G__3082,G__3083,G__3084,G__3085,G__3086,G__3087,G__3088,G__3089,G__3090,G__3091,G__3092,G__3093,G__3094));
});
var G__3406__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__3095 = a;
var G__3096 = b;
var G__3097 = c;
var G__3098 = d;
var G__3099 = e;
var G__3100 = f;
var G__3101 = g;
var G__3102 = h;
var G__3103 = i;
var G__3104 = j;
var G__3105 = k;
var G__3106 = l;
var G__3107 = m;
var G__3108 = n;
var G__3109 = o;
var G__3110 = p;
var G__3111 = q;
var G__3112 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__3095,G__3096,G__3097,G__3098,G__3099,G__3100,G__3101,G__3102,G__3103,G__3104,G__3105,G__3106,G__3107,G__3108,G__3109,G__3110,G__3111,G__3112) : self__.afn.call(null,G__3095,G__3096,G__3097,G__3098,G__3099,G__3100,G__3101,G__3102,G__3103,G__3104,G__3105,G__3106,G__3107,G__3108,G__3109,G__3110,G__3111,G__3112));
});
var G__3406__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__3113 = a;
var G__3114 = b;
var G__3115 = c;
var G__3116 = d;
var G__3117 = e;
var G__3118 = f;
var G__3119 = g;
var G__3120 = h;
var G__3121 = i;
var G__3122 = j;
var G__3123 = k;
var G__3124 = l;
var G__3125 = m;
var G__3126 = n;
var G__3127 = o;
var G__3128 = p;
var G__3129 = q;
var G__3130 = r;
var G__3131 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__3113,G__3114,G__3115,G__3116,G__3117,G__3118,G__3119,G__3120,G__3121,G__3122,G__3123,G__3124,G__3125,G__3126,G__3127,G__3128,G__3129,G__3130,G__3131) : self__.afn.call(null,G__3113,G__3114,G__3115,G__3116,G__3117,G__3118,G__3119,G__3120,G__3121,G__3122,G__3123,G__3124,G__3125,G__3126,G__3127,G__3128,G__3129,G__3130,G__3131));
});
var G__3406__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__3132 = a;
var G__3133 = b;
var G__3134 = c;
var G__3135 = d;
var G__3136 = e;
var G__3137 = f;
var G__3138 = g;
var G__3139 = h;
var G__3140 = i;
var G__3141 = j;
var G__3142 = k;
var G__3143 = l;
var G__3144 = m;
var G__3145 = n;
var G__3146 = o;
var G__3147 = p;
var G__3148 = q;
var G__3149 = r;
var G__3150 = s;
var G__3151 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__3132,G__3133,G__3134,G__3135,G__3136,G__3137,G__3138,G__3139,G__3140,G__3141,G__3142,G__3143,G__3144,G__3145,G__3146,G__3147,G__3148,G__3149,G__3150,G__3151) : self__.afn.call(null,G__3132,G__3133,G__3134,G__3135,G__3136,G__3137,G__3138,G__3139,G__3140,G__3141,G__3142,G__3143,G__3144,G__3145,G__3146,G__3147,G__3148,G__3149,G__3150,G__3151));
});
var G__3406__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__3152 = self__.afn;
var G__3153 = a;
var G__3154 = b;
var G__3155 = c;
var G__3156 = d;
var G__3157 = e;
var G__3158 = f;
var G__3159 = g;
var G__3160 = h;
var G__3161 = i;
var G__3162 = j;
var G__3163 = k;
var G__3164 = l;
var G__3165 = m;
var G__3166 = n;
var G__3167 = o;
var G__3168 = p;
var G__3169 = q;
var G__3170 = r;
var G__3171 = s;
var G__3172 = t;
var G__3173 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__3152,G__3153,G__3154,G__3155,G__3156,G__3157,G__3158,G__3159,G__3160,G__3161,G__3162,G__3163,G__3164,G__3165,G__3166,G__3167,G__3168,G__3169,G__3170,G__3171,G__3172,G__3173) : cljs.core.apply.call(null,G__3152,G__3153,G__3154,G__3155,G__3156,G__3157,G__3158,G__3159,G__3160,G__3161,G__3162,G__3163,G__3164,G__3165,G__3166,G__3167,G__3168,G__3169,G__3170,G__3171,G__3172,G__3173));
});
G__3406 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__3406__1.call(this,self__);
case 2:
return G__3406__2.call(this,self__,a);
case 3:
return G__3406__3.call(this,self__,a,b);
case 4:
return G__3406__4.call(this,self__,a,b,c);
case 5:
return G__3406__5.call(this,self__,a,b,c,d);
case 6:
return G__3406__6.call(this,self__,a,b,c,d,e);
case 7:
return G__3406__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__3406__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__3406__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__3406__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__3406__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__3406__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__3406__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__3406__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__3406__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__3406__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__3406__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__3406__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__3406__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__3406__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__3406__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__3406__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3406.cljs$core$IFn$_invoke$arity$1 = G__3406__1;
G__3406.cljs$core$IFn$_invoke$arity$2 = G__3406__2;
G__3406.cljs$core$IFn$_invoke$arity$3 = G__3406__3;
G__3406.cljs$core$IFn$_invoke$arity$4 = G__3406__4;
G__3406.cljs$core$IFn$_invoke$arity$5 = G__3406__5;
G__3406.cljs$core$IFn$_invoke$arity$6 = G__3406__6;
G__3406.cljs$core$IFn$_invoke$arity$7 = G__3406__7;
G__3406.cljs$core$IFn$_invoke$arity$8 = G__3406__8;
G__3406.cljs$core$IFn$_invoke$arity$9 = G__3406__9;
G__3406.cljs$core$IFn$_invoke$arity$10 = G__3406__10;
G__3406.cljs$core$IFn$_invoke$arity$11 = G__3406__11;
G__3406.cljs$core$IFn$_invoke$arity$12 = G__3406__12;
G__3406.cljs$core$IFn$_invoke$arity$13 = G__3406__13;
G__3406.cljs$core$IFn$_invoke$arity$14 = G__3406__14;
G__3406.cljs$core$IFn$_invoke$arity$15 = G__3406__15;
G__3406.cljs$core$IFn$_invoke$arity$16 = G__3406__16;
G__3406.cljs$core$IFn$_invoke$arity$17 = G__3406__17;
G__3406.cljs$core$IFn$_invoke$arity$18 = G__3406__18;
G__3406.cljs$core$IFn$_invoke$arity$19 = G__3406__19;
G__3406.cljs$core$IFn$_invoke$arity$20 = G__3406__20;
G__3406.cljs$core$IFn$_invoke$arity$21 = G__3406__21;
G__3406.cljs$core$IFn$_invoke$arity$22 = G__3406__22;
return G__3406;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args2941){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args2941)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__3174 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__3174) : self__.afn.call(null,G__3174));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__3175 = a;
var G__3176 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__3175,G__3176) : self__.afn.call(null,G__3175,G__3176));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__3177 = a;
var G__3178 = b;
var G__3179 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__3177,G__3178,G__3179) : self__.afn.call(null,G__3177,G__3178,G__3179));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__3180 = a;
var G__3181 = b;
var G__3182 = c;
var G__3183 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__3180,G__3181,G__3182,G__3183) : self__.afn.call(null,G__3180,G__3181,G__3182,G__3183));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__3184 = a;
var G__3185 = b;
var G__3186 = c;
var G__3187 = d;
var G__3188 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__3184,G__3185,G__3186,G__3187,G__3188) : self__.afn.call(null,G__3184,G__3185,G__3186,G__3187,G__3188));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__3189 = a;
var G__3190 = b;
var G__3191 = c;
var G__3192 = d;
var G__3193 = e;
var G__3194 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__3189,G__3190,G__3191,G__3192,G__3193,G__3194) : self__.afn.call(null,G__3189,G__3190,G__3191,G__3192,G__3193,G__3194));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__3195 = a;
var G__3196 = b;
var G__3197 = c;
var G__3198 = d;
var G__3199 = e;
var G__3200 = f;
var G__3201 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__3195,G__3196,G__3197,G__3198,G__3199,G__3200,G__3201) : self__.afn.call(null,G__3195,G__3196,G__3197,G__3198,G__3199,G__3200,G__3201));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__3202 = a;
var G__3203 = b;
var G__3204 = c;
var G__3205 = d;
var G__3206 = e;
var G__3207 = f;
var G__3208 = g;
var G__3209 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__3202,G__3203,G__3204,G__3205,G__3206,G__3207,G__3208,G__3209) : self__.afn.call(null,G__3202,G__3203,G__3204,G__3205,G__3206,G__3207,G__3208,G__3209));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__3210 = a;
var G__3211 = b;
var G__3212 = c;
var G__3213 = d;
var G__3214 = e;
var G__3215 = f;
var G__3216 = g;
var G__3217 = h;
var G__3218 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__3210,G__3211,G__3212,G__3213,G__3214,G__3215,G__3216,G__3217,G__3218) : self__.afn.call(null,G__3210,G__3211,G__3212,G__3213,G__3214,G__3215,G__3216,G__3217,G__3218));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__3219 = a;
var G__3220 = b;
var G__3221 = c;
var G__3222 = d;
var G__3223 = e;
var G__3224 = f;
var G__3225 = g;
var G__3226 = h;
var G__3227 = i;
var G__3228 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__3219,G__3220,G__3221,G__3222,G__3223,G__3224,G__3225,G__3226,G__3227,G__3228) : self__.afn.call(null,G__3219,G__3220,G__3221,G__3222,G__3223,G__3224,G__3225,G__3226,G__3227,G__3228));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__3229 = a;
var G__3230 = b;
var G__3231 = c;
var G__3232 = d;
var G__3233 = e;
var G__3234 = f;
var G__3235 = g;
var G__3236 = h;
var G__3237 = i;
var G__3238 = j;
var G__3239 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__3229,G__3230,G__3231,G__3232,G__3233,G__3234,G__3235,G__3236,G__3237,G__3238,G__3239) : self__.afn.call(null,G__3229,G__3230,G__3231,G__3232,G__3233,G__3234,G__3235,G__3236,G__3237,G__3238,G__3239));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__3240 = a;
var G__3241 = b;
var G__3242 = c;
var G__3243 = d;
var G__3244 = e;
var G__3245 = f;
var G__3246 = g;
var G__3247 = h;
var G__3248 = i;
var G__3249 = j;
var G__3250 = k;
var G__3251 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__3240,G__3241,G__3242,G__3243,G__3244,G__3245,G__3246,G__3247,G__3248,G__3249,G__3250,G__3251) : self__.afn.call(null,G__3240,G__3241,G__3242,G__3243,G__3244,G__3245,G__3246,G__3247,G__3248,G__3249,G__3250,G__3251));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__3252 = a;
var G__3253 = b;
var G__3254 = c;
var G__3255 = d;
var G__3256 = e;
var G__3257 = f;
var G__3258 = g;
var G__3259 = h;
var G__3260 = i;
var G__3261 = j;
var G__3262 = k;
var G__3263 = l;
var G__3264 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__3252,G__3253,G__3254,G__3255,G__3256,G__3257,G__3258,G__3259,G__3260,G__3261,G__3262,G__3263,G__3264) : self__.afn.call(null,G__3252,G__3253,G__3254,G__3255,G__3256,G__3257,G__3258,G__3259,G__3260,G__3261,G__3262,G__3263,G__3264));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__3265 = a;
var G__3266 = b;
var G__3267 = c;
var G__3268 = d;
var G__3269 = e;
var G__3270 = f;
var G__3271 = g;
var G__3272 = h;
var G__3273 = i;
var G__3274 = j;
var G__3275 = k;
var G__3276 = l;
var G__3277 = m;
var G__3278 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__3265,G__3266,G__3267,G__3268,G__3269,G__3270,G__3271,G__3272,G__3273,G__3274,G__3275,G__3276,G__3277,G__3278) : self__.afn.call(null,G__3265,G__3266,G__3267,G__3268,G__3269,G__3270,G__3271,G__3272,G__3273,G__3274,G__3275,G__3276,G__3277,G__3278));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__3279 = a;
var G__3280 = b;
var G__3281 = c;
var G__3282 = d;
var G__3283 = e;
var G__3284 = f;
var G__3285 = g;
var G__3286 = h;
var G__3287 = i;
var G__3288 = j;
var G__3289 = k;
var G__3290 = l;
var G__3291 = m;
var G__3292 = n;
var G__3293 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__3279,G__3280,G__3281,G__3282,G__3283,G__3284,G__3285,G__3286,G__3287,G__3288,G__3289,G__3290,G__3291,G__3292,G__3293) : self__.afn.call(null,G__3279,G__3280,G__3281,G__3282,G__3283,G__3284,G__3285,G__3286,G__3287,G__3288,G__3289,G__3290,G__3291,G__3292,G__3293));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__3294 = a;
var G__3295 = b;
var G__3296 = c;
var G__3297 = d;
var G__3298 = e;
var G__3299 = f;
var G__3300 = g;
var G__3301 = h;
var G__3302 = i;
var G__3303 = j;
var G__3304 = k;
var G__3305 = l;
var G__3306 = m;
var G__3307 = n;
var G__3308 = o;
var G__3309 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__3294,G__3295,G__3296,G__3297,G__3298,G__3299,G__3300,G__3301,G__3302,G__3303,G__3304,G__3305,G__3306,G__3307,G__3308,G__3309) : self__.afn.call(null,G__3294,G__3295,G__3296,G__3297,G__3298,G__3299,G__3300,G__3301,G__3302,G__3303,G__3304,G__3305,G__3306,G__3307,G__3308,G__3309));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__3310 = a;
var G__3311 = b;
var G__3312 = c;
var G__3313 = d;
var G__3314 = e;
var G__3315 = f;
var G__3316 = g;
var G__3317 = h;
var G__3318 = i;
var G__3319 = j;
var G__3320 = k;
var G__3321 = l;
var G__3322 = m;
var G__3323 = n;
var G__3324 = o;
var G__3325 = p;
var G__3326 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__3310,G__3311,G__3312,G__3313,G__3314,G__3315,G__3316,G__3317,G__3318,G__3319,G__3320,G__3321,G__3322,G__3323,G__3324,G__3325,G__3326) : self__.afn.call(null,G__3310,G__3311,G__3312,G__3313,G__3314,G__3315,G__3316,G__3317,G__3318,G__3319,G__3320,G__3321,G__3322,G__3323,G__3324,G__3325,G__3326));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__3327 = a;
var G__3328 = b;
var G__3329 = c;
var G__3330 = d;
var G__3331 = e;
var G__3332 = f;
var G__3333 = g;
var G__3334 = h;
var G__3335 = i;
var G__3336 = j;
var G__3337 = k;
var G__3338 = l;
var G__3339 = m;
var G__3340 = n;
var G__3341 = o;
var G__3342 = p;
var G__3343 = q;
var G__3344 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__3327,G__3328,G__3329,G__3330,G__3331,G__3332,G__3333,G__3334,G__3335,G__3336,G__3337,G__3338,G__3339,G__3340,G__3341,G__3342,G__3343,G__3344) : self__.afn.call(null,G__3327,G__3328,G__3329,G__3330,G__3331,G__3332,G__3333,G__3334,G__3335,G__3336,G__3337,G__3338,G__3339,G__3340,G__3341,G__3342,G__3343,G__3344));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__3345 = a;
var G__3346 = b;
var G__3347 = c;
var G__3348 = d;
var G__3349 = e;
var G__3350 = f;
var G__3351 = g;
var G__3352 = h;
var G__3353 = i;
var G__3354 = j;
var G__3355 = k;
var G__3356 = l;
var G__3357 = m;
var G__3358 = n;
var G__3359 = o;
var G__3360 = p;
var G__3361 = q;
var G__3362 = r;
var G__3363 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__3345,G__3346,G__3347,G__3348,G__3349,G__3350,G__3351,G__3352,G__3353,G__3354,G__3355,G__3356,G__3357,G__3358,G__3359,G__3360,G__3361,G__3362,G__3363) : self__.afn.call(null,G__3345,G__3346,G__3347,G__3348,G__3349,G__3350,G__3351,G__3352,G__3353,G__3354,G__3355,G__3356,G__3357,G__3358,G__3359,G__3360,G__3361,G__3362,G__3363));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__3364 = a;
var G__3365 = b;
var G__3366 = c;
var G__3367 = d;
var G__3368 = e;
var G__3369 = f;
var G__3370 = g;
var G__3371 = h;
var G__3372 = i;
var G__3373 = j;
var G__3374 = k;
var G__3375 = l;
var G__3376 = m;
var G__3377 = n;
var G__3378 = o;
var G__3379 = p;
var G__3380 = q;
var G__3381 = r;
var G__3382 = s;
var G__3383 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__3364,G__3365,G__3366,G__3367,G__3368,G__3369,G__3370,G__3371,G__3372,G__3373,G__3374,G__3375,G__3376,G__3377,G__3378,G__3379,G__3380,G__3381,G__3382,G__3383) : self__.afn.call(null,G__3364,G__3365,G__3366,G__3367,G__3368,G__3369,G__3370,G__3371,G__3372,G__3373,G__3374,G__3375,G__3376,G__3377,G__3378,G__3379,G__3380,G__3381,G__3382,G__3383));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__3384 = self__.afn;
var G__3385 = a;
var G__3386 = b;
var G__3387 = c;
var G__3388 = d;
var G__3389 = e;
var G__3390 = f;
var G__3391 = g;
var G__3392 = h;
var G__3393 = i;
var G__3394 = j;
var G__3395 = k;
var G__3396 = l;
var G__3397 = m;
var G__3398 = n;
var G__3399 = o;
var G__3400 = p;
var G__3401 = q;
var G__3402 = r;
var G__3403 = s;
var G__3404 = t;
var G__3405 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__3384,G__3385,G__3386,G__3387,G__3388,G__3389,G__3390,G__3391,G__3392,G__3393,G__3394,G__3395,G__3396,G__3397,G__3398,G__3399,G__3400,G__3401,G__3402,G__3403,G__3404,G__3405) : cljs.core.apply.call(null,G__3384,G__3385,G__3386,G__3387,G__3388,G__3389,G__3390,G__3391,G__3392,G__3393,G__3394,G__3395,G__3396,G__3397,G__3398,G__3399,G__3400,G__3401,G__3402,G__3403,G__3404,G__3405));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__3410 = o;
if(G__3410){
var bit__3386__auto__ = (G__3410.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__3386__auto__) || (G__3410.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__3410.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__3410);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__3410);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3081__auto__ = !((o == null));
if(and__3081__auto__){
var G__3414 = o;
if(G__3414){
var bit__3386__auto__ = (G__3414.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__3386__auto__) || (G__3414.cljs$core$IMeta$)){
return true;
} else {
if((!G__3414.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__3414);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__3414);
}
} else {
return and__3081__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__3417__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__3418 = ret;
var G__3419 = cljs.core.first(ks);
var G__3420 = cljs.core.next(ks);
coll = G__3418;
k = G__3419;
ks = G__3420;
continue;
} else {
return ret;
}
}
break;
}
};
var G__3417 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__3421__i = 0, G__3421__a = new Array(arguments.length -  2);
while (G__3421__i < G__3421__a.length) {G__3421__a[G__3421__i] = arguments[G__3421__i + 2]; ++G__3421__i;}
  ks = new cljs.core.IndexedSeq(G__3421__a,0);
} 
return G__3417__delegate.call(this,coll,k,ks);};
G__3417.cljs$lang$maxFixedArity = 2;
G__3417.cljs$lang$applyTo = (function (arglist__3422){
var coll = cljs.core.first(arglist__3422);
arglist__3422 = cljs.core.next(arglist__3422);
var k = cljs.core.first(arglist__3422);
var ks = cljs.core.rest(arglist__3422);
return G__3417__delegate(coll,k,ks);
});
G__3417.cljs$core$IFn$_invoke$arity$variadic = G__3417__delegate;
return G__3417;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__3423 = null;
if (arguments.length > 2) {
var G__3424__i = 0, G__3424__a = new Array(arguments.length -  2);
while (G__3424__i < G__3424__a.length) {G__3424__a[G__3424__i] = arguments[G__3424__i + 2]; ++G__3424__i;}
G__3423 = new cljs.core.IndexedSeq(G__3424__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__3423);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__3426 = x;
if(G__3426){
var bit__3386__auto__ = (G__3426.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__3386__auto__) || (G__3426.cljs$core$ICollection$)){
return true;
} else {
if((!G__3426.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__3426);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__3426);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__3428 = x;
if(G__3428){
var bit__3386__auto__ = (G__3428.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__3386__auto__) || (G__3428.cljs$core$ISet$)){
return true;
} else {
if((!G__3428.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__3428);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__3428);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__3430 = x;
if(G__3430){
var bit__3386__auto__ = (G__3430.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__3386__auto__) || (G__3430.cljs$core$IAssociative$)){
return true;
} else {
if((!G__3430.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__3430);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__3430);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__3432 = x;
if(G__3432){
var bit__3386__auto__ = (G__3432.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__3386__auto__) || (G__3432.cljs$core$ISequential$)){
return true;
} else {
if((!G__3432.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__3432);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__3432);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__3434 = x;
if(G__3434){
var bit__3386__auto__ = (G__3434.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__3386__auto__) || (G__3434.cljs$core$ISorted$)){
return true;
} else {
if((!G__3434.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__3434);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__3434);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__3436 = x;
if(G__3436){
var bit__3386__auto__ = (G__3436.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__3386__auto__) || (G__3436.cljs$core$IReduce$)){
return true;
} else {
if((!G__3436.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__3436);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__3436);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__3438 = x;
if(G__3438){
var bit__3386__auto__ = (G__3438.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__3386__auto__) || (G__3438.cljs$core$IMap$)){
return true;
} else {
if((!G__3438.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__3438);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__3438);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__3440 = x;
if(G__3440){
var bit__3386__auto__ = (G__3440.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__3386__auto__) || (G__3440.cljs$core$IVector$)){
return true;
} else {
if((!G__3440.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__3440);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__3440);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__3442 = x;
if(G__3442){
var bit__3383__auto__ = (G__3442.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__3383__auto__) || (G__3442.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj3448 = {};
return obj3448;
});
var js_obj__1 = (function() { 
var G__3451__delegate = function (keyvals){
var G__3449 = goog.object.create;
var G__3450 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__3449,G__3450) : cljs.core.apply.call(null,G__3449,G__3450));
};
var G__3451 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__3452__i = 0, G__3452__a = new Array(arguments.length -  0);
while (G__3452__i < G__3452__a.length) {G__3452__a[G__3452__i] = arguments[G__3452__i + 0]; ++G__3452__i;}
  keyvals = new cljs.core.IndexedSeq(G__3452__a,0);
} 
return G__3451__delegate.call(this,keyvals);};
G__3451.cljs$lang$maxFixedArity = 0;
G__3451.cljs$lang$applyTo = (function (arglist__3453){
var keyvals = cljs.core.seq(arglist__3453);
return G__3451__delegate(keyvals);
});
G__3451.cljs$core$IFn$_invoke$arity$variadic = G__3451__delegate;
return G__3451;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__3454 = null;
if (arguments.length > 0) {
var G__3455__i = 0, G__3455__a = new Array(arguments.length -  0);
while (G__3455__i < G__3455__a.length) {G__3455__a[G__3455__i] = arguments[G__3455__i + 0]; ++G__3455__i;}
G__3454 = new cljs.core.IndexedSeq(G__3455__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__3454);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__3458_3460 = obj;
var G__3459_3461 = ((function (G__3458_3460,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__3458_3460,keys))
;
goog.object.forEach(G__3458_3460,G__3459_3461);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__3462 = (i__$1 + (1));
var G__3463 = (j__$1 + (1));
var G__3464 = (len__$1 - (1));
i__$1 = G__3462;
j__$1 = G__3463;
len__$1 = G__3464;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__3465 = (i__$1 - (1));
var G__3466 = (j__$1 - (1));
var G__3467 = (len__$1 - (1));
i__$1 = G__3465;
j__$1 = G__3466;
len__$1 = G__3467;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj3469 = {};
return obj3469;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__3471 = s;
if(G__3471){
var bit__3386__auto__ = (G__3471.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__3386__auto__) || (G__3471.cljs$core$ISeq$)){
return true;
} else {
if((!G__3471.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__3471);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__3471);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__3473 = s;
if(G__3473){
var bit__3386__auto__ = (G__3473.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__3386__auto__) || (G__3473.cljs$core$ISeqable$)){
return true;
} else {
if((!G__3473.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__3473);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__3473);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3089__auto__ = cljs.core.fn_QMARK_(f);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var G__3477 = f;
if(G__3477){
var bit__3386__auto__ = (G__3477.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__3386__auto__) || (G__3477.cljs$core$IFn$)){
return true;
} else {
if((!G__3477.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__3477);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__3477);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__3490 = n;
return isNaN(G__3490);
})())) && (!((n === Infinity))) && (((function (){var G__3491 = n;
return parseFloat(G__3491);
})() === (function (){var G__3492 = n;
var G__3493 = (10);
return parseInt(G__3492,G__3493);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__3494__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__3495 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__3496 = etc;
s = G__3495;
xs = G__3496;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__3494 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__3497__i = 0, G__3497__a = new Array(arguments.length -  2);
while (G__3497__i < G__3497__a.length) {G__3497__a[G__3497__i] = arguments[G__3497__i + 2]; ++G__3497__i;}
  more = new cljs.core.IndexedSeq(G__3497__a,0);
} 
return G__3494__delegate.call(this,x,y,more);};
G__3494.cljs$lang$maxFixedArity = 2;
G__3494.cljs$lang$applyTo = (function (arglist__3498){
var x = cljs.core.first(arglist__3498);
arglist__3498 = cljs.core.next(arglist__3498);
var y = cljs.core.first(arglist__3498);
var more = cljs.core.rest(arglist__3498);
return G__3494__delegate(x,y,more);
});
G__3494.cljs$core$IFn$_invoke$arity$variadic = G__3494__delegate;
return G__3494;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__3499 = null;
if (arguments.length > 2) {
var G__3500__i = 0, G__3500__a = new Array(arguments.length -  2);
while (G__3500__i < G__3500__a.length) {G__3500__a[G__3500__i] = arguments[G__3500__i + 2]; ++G__3500__i;}
G__3499 = new cljs.core.IndexedSeq(G__3500__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__3499);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__3504 = x;
if(G__3504){
var bit__3383__auto__ = (G__3504.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__3383__auto__) || (G__3504.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__3505 = x;
var G__3506 = y;
return goog.array.defaultCompare(G__3505,G__3506);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__3511 = xs;
var G__3512 = ys;
var G__3513 = len;
var G__3514 = (n + (1));
xs = G__3511;
ys = G__3512;
len = G__3513;
n = G__3514;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__3519 = x;
var G__3520 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3519,G__3520) : f.call(null,G__3519,G__3520));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__3521 = y;
var G__3522 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3521,G__3522) : f.call(null,G__3521,G__3522));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__3528 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__3528) : cljs.core.to_array.call(null,G__3528));
})();
var G__3529_3531 = a;
var G__3530_3532 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__3529_3531,G__3530_3532);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__3538 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__3538) : keyfn.call(null,G__3538));
})(),(function (){var G__3539 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__3539) : keyfn.call(null,G__3539));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__3545 = f;
var G__3546 = cljs.core.first(s);
var G__3547 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__3545,G__3546,G__3547) : cljs.core.reduce.call(null,G__3545,G__3546,G__3547));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__3548 = val__$1;
var G__3549 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3548,G__3549) : f.call(null,G__3548,G__3549));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__3550 = nval;
var G__3551 = cljs.core.next(coll__$1);
val__$1 = G__3550;
coll__$1 = G__3551;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__3555 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__3555) : cljs.core.to_array.call(null,G__3555));
})();
var G__3556_3558 = a;
goog.array.shuffle(G__3556_3558);

var G__3557 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__3557) : cljs.core.vec.call(null,G__3557));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__3561 = coll;
if(G__3561){
var bit__3383__auto__ = (G__3561.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__3383__auto__) || (G__3561.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__3562 = coll;
if(G__3562){
var bit__3383__auto__ = (G__3562.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__3383__auto__) || (G__3562.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__3571 = null;
var G__3571__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__3571__1 = (function (x){
var G__3568 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__3568) : cf.call(null,G__3568));
});
var G__3571__2 = (function (x,y){
var G__3569 = x;
var G__3570 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3569,G__3570) : f.call(null,G__3569,G__3570));
});
G__3571 = function(x,y){
switch(arguments.length){
case 0:
return G__3571__0.call(this);
case 1:
return G__3571__1.call(this,x);
case 2:
return G__3571__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3571.cljs$core$IFn$_invoke$arity$0 = G__3571__0;
G__3571.cljs$core$IFn$_invoke$arity$1 = G__3571__1;
G__3571.cljs$core$IFn$_invoke$arity$2 = G__3571__2;
return G__3571;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__3578 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__3578) : xform.call(null,G__3578));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__3579 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__3579) : f__$1.call(null,G__3579));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__3580__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__3580 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__3581__i = 0, G__3581__a = new Array(arguments.length -  2);
while (G__3581__i < G__3581__a.length) {G__3581__a[G__3581__i] = arguments[G__3581__i + 2]; ++G__3581__i;}
  more = new cljs.core.IndexedSeq(G__3581__a,0);
} 
return G__3580__delegate.call(this,x,y,more);};
G__3580.cljs$lang$maxFixedArity = 2;
G__3580.cljs$lang$applyTo = (function (arglist__3582){
var x = cljs.core.first(arglist__3582);
arglist__3582 = cljs.core.next(arglist__3582);
var y = cljs.core.first(arglist__3582);
var more = cljs.core.rest(arglist__3582);
return G__3580__delegate(x,y,more);
});
G__3580.cljs$core$IFn$_invoke$arity$variadic = G__3580__delegate;
return G__3580;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__3583 = null;
if (arguments.length > 2) {
var G__3584__i = 0, G__3584__a = new Array(arguments.length -  2);
while (G__3584__i < G__3584__a.length) {G__3584__a[G__3584__i] = arguments[G__3584__i + 2]; ++G__3584__i;}
G__3583 = new cljs.core.IndexedSeq(G__3584__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__3583);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__3585__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__3585 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__3586__i = 0, G__3586__a = new Array(arguments.length -  2);
while (G__3586__i < G__3586__a.length) {G__3586__a[G__3586__i] = arguments[G__3586__i + 2]; ++G__3586__i;}
  more = new cljs.core.IndexedSeq(G__3586__a,0);
} 
return G__3585__delegate.call(this,x,y,more);};
G__3585.cljs$lang$maxFixedArity = 2;
G__3585.cljs$lang$applyTo = (function (arglist__3587){
var x = cljs.core.first(arglist__3587);
arglist__3587 = cljs.core.next(arglist__3587);
var y = cljs.core.first(arglist__3587);
var more = cljs.core.rest(arglist__3587);
return G__3585__delegate(x,y,more);
});
G__3585.cljs$core$IFn$_invoke$arity$variadic = G__3585__delegate;
return G__3585;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__3588 = null;
if (arguments.length > 2) {
var G__3589__i = 0, G__3589__a = new Array(arguments.length -  2);
while (G__3589__i < G__3589__a.length) {G__3589__a[G__3589__i] = arguments[G__3589__i + 2]; ++G__3589__i;}
G__3588 = new cljs.core.IndexedSeq(G__3589__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__3588);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__3590__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__3590 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__3591__i = 0, G__3591__a = new Array(arguments.length -  2);
while (G__3591__i < G__3591__a.length) {G__3591__a[G__3591__i] = arguments[G__3591__i + 2]; ++G__3591__i;}
  more = new cljs.core.IndexedSeq(G__3591__a,0);
} 
return G__3590__delegate.call(this,x,y,more);};
G__3590.cljs$lang$maxFixedArity = 2;
G__3590.cljs$lang$applyTo = (function (arglist__3592){
var x = cljs.core.first(arglist__3592);
arglist__3592 = cljs.core.next(arglist__3592);
var y = cljs.core.first(arglist__3592);
var more = cljs.core.rest(arglist__3592);
return G__3590__delegate(x,y,more);
});
G__3590.cljs$core$IFn$_invoke$arity$variadic = G__3590__delegate;
return G__3590;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__3593 = null;
if (arguments.length > 2) {
var G__3594__i = 0, G__3594__a = new Array(arguments.length -  2);
while (G__3594__i < G__3594__a.length) {G__3594__a[G__3594__i] = arguments[G__3594__i + 2]; ++G__3594__i;}
G__3593 = new cljs.core.IndexedSeq(G__3594__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__3593);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__3599__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__3599 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__3600__i = 0, G__3600__a = new Array(arguments.length -  2);
while (G__3600__i < G__3600__a.length) {G__3600__a[G__3600__i] = arguments[G__3600__i + 2]; ++G__3600__i;}
  more = new cljs.core.IndexedSeq(G__3600__a,0);
} 
return G__3599__delegate.call(this,x,y,more);};
G__3599.cljs$lang$maxFixedArity = 2;
G__3599.cljs$lang$applyTo = (function (arglist__3601){
var x = cljs.core.first(arglist__3601);
arglist__3601 = cljs.core.next(arglist__3601);
var y = cljs.core.first(arglist__3601);
var more = cljs.core.rest(arglist__3601);
return G__3599__delegate(x,y,more);
});
G__3599.cljs$core$IFn$_invoke$arity$variadic = G__3599__delegate;
return G__3599;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__3602 = null;
if (arguments.length > 2) {
var G__3603__i = 0, G__3603__a = new Array(arguments.length -  2);
while (G__3603__i < G__3603__a.length) {G__3603__a[G__3603__i] = arguments[G__3603__i + 2]; ++G__3603__i;}
G__3602 = new cljs.core.IndexedSeq(G__3603__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__3602);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__3604__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__3605 = y;
var G__3606 = cljs.core.first(more);
var G__3607 = cljs.core.next(more);
x = G__3605;
y = G__3606;
more = G__3607;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__3604 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__3608__i = 0, G__3608__a = new Array(arguments.length -  2);
while (G__3608__i < G__3608__a.length) {G__3608__a[G__3608__i] = arguments[G__3608__i + 2]; ++G__3608__i;}
  more = new cljs.core.IndexedSeq(G__3608__a,0);
} 
return G__3604__delegate.call(this,x,y,more);};
G__3604.cljs$lang$maxFixedArity = 2;
G__3604.cljs$lang$applyTo = (function (arglist__3609){
var x = cljs.core.first(arglist__3609);
arglist__3609 = cljs.core.next(arglist__3609);
var y = cljs.core.first(arglist__3609);
var more = cljs.core.rest(arglist__3609);
return G__3604__delegate(x,y,more);
});
G__3604.cljs$core$IFn$_invoke$arity$variadic = G__3604__delegate;
return G__3604;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__3610 = null;
if (arguments.length > 2) {
var G__3611__i = 0, G__3611__a = new Array(arguments.length -  2);
while (G__3611__i < G__3611__a.length) {G__3611__a[G__3611__i] = arguments[G__3611__i + 2]; ++G__3611__i;}
G__3610 = new cljs.core.IndexedSeq(G__3611__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__3610);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__3612__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__3613 = y;
var G__3614 = cljs.core.first(more);
var G__3615 = cljs.core.next(more);
x = G__3613;
y = G__3614;
more = G__3615;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__3612 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__3616__i = 0, G__3616__a = new Array(arguments.length -  2);
while (G__3616__i < G__3616__a.length) {G__3616__a[G__3616__i] = arguments[G__3616__i + 2]; ++G__3616__i;}
  more = new cljs.core.IndexedSeq(G__3616__a,0);
} 
return G__3612__delegate.call(this,x,y,more);};
G__3612.cljs$lang$maxFixedArity = 2;
G__3612.cljs$lang$applyTo = (function (arglist__3617){
var x = cljs.core.first(arglist__3617);
arglist__3617 = cljs.core.next(arglist__3617);
var y = cljs.core.first(arglist__3617);
var more = cljs.core.rest(arglist__3617);
return G__3612__delegate(x,y,more);
});
G__3612.cljs$core$IFn$_invoke$arity$variadic = G__3612__delegate;
return G__3612;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__3618 = null;
if (arguments.length > 2) {
var G__3619__i = 0, G__3619__a = new Array(arguments.length -  2);
while (G__3619__i < G__3619__a.length) {G__3619__a[G__3619__i] = arguments[G__3619__i + 2]; ++G__3619__i;}
G__3618 = new cljs.core.IndexedSeq(G__3619__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__3618);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__3620__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__3621 = y;
var G__3622 = cljs.core.first(more);
var G__3623 = cljs.core.next(more);
x = G__3621;
y = G__3622;
more = G__3623;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__3620 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__3624__i = 0, G__3624__a = new Array(arguments.length -  2);
while (G__3624__i < G__3624__a.length) {G__3624__a[G__3624__i] = arguments[G__3624__i + 2]; ++G__3624__i;}
  more = new cljs.core.IndexedSeq(G__3624__a,0);
} 
return G__3620__delegate.call(this,x,y,more);};
G__3620.cljs$lang$maxFixedArity = 2;
G__3620.cljs$lang$applyTo = (function (arglist__3625){
var x = cljs.core.first(arglist__3625);
arglist__3625 = cljs.core.next(arglist__3625);
var y = cljs.core.first(arglist__3625);
var more = cljs.core.rest(arglist__3625);
return G__3620__delegate(x,y,more);
});
G__3620.cljs$core$IFn$_invoke$arity$variadic = G__3620__delegate;
return G__3620;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__3626 = null;
if (arguments.length > 2) {
var G__3627__i = 0, G__3627__a = new Array(arguments.length -  2);
while (G__3627__i < G__3627__a.length) {G__3627__a[G__3627__i] = arguments[G__3627__i + 2]; ++G__3627__i;}
G__3626 = new cljs.core.IndexedSeq(G__3627__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__3626);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__3628__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__3629 = y;
var G__3630 = cljs.core.first(more);
var G__3631 = cljs.core.next(more);
x = G__3629;
y = G__3630;
more = G__3631;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__3628 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__3632__i = 0, G__3632__a = new Array(arguments.length -  2);
while (G__3632__i < G__3632__a.length) {G__3632__a[G__3632__i] = arguments[G__3632__i + 2]; ++G__3632__i;}
  more = new cljs.core.IndexedSeq(G__3632__a,0);
} 
return G__3628__delegate.call(this,x,y,more);};
G__3628.cljs$lang$maxFixedArity = 2;
G__3628.cljs$lang$applyTo = (function (arglist__3633){
var x = cljs.core.first(arglist__3633);
arglist__3633 = cljs.core.next(arglist__3633);
var y = cljs.core.first(arglist__3633);
var more = cljs.core.rest(arglist__3633);
return G__3628__delegate(x,y,more);
});
G__3628.cljs$core$IFn$_invoke$arity$variadic = G__3628__delegate;
return G__3628;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__3634 = null;
if (arguments.length > 2) {
var G__3635__i = 0, G__3635__a = new Array(arguments.length -  2);
while (G__3635__i < G__3635__a.length) {G__3635__a[G__3635__i] = arguments[G__3635__i + 2]; ++G__3635__i;}
G__3634 = new cljs.core.IndexedSeq(G__3635__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__3634);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__3158__auto__ = x;
var y__3159__auto__ = y;
return ((x__3158__auto__ > y__3159__auto__) ? x__3158__auto__ : y__3159__auto__);
});
var max__3 = (function() { 
var G__3636__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__3158__auto__ = x;
var y__3159__auto__ = y;
return ((x__3158__auto__ > y__3159__auto__) ? x__3158__auto__ : y__3159__auto__);
})(),more);
};
var G__3636 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__3637__i = 0, G__3637__a = new Array(arguments.length -  2);
while (G__3637__i < G__3637__a.length) {G__3637__a[G__3637__i] = arguments[G__3637__i + 2]; ++G__3637__i;}
  more = new cljs.core.IndexedSeq(G__3637__a,0);
} 
return G__3636__delegate.call(this,x,y,more);};
G__3636.cljs$lang$maxFixedArity = 2;
G__3636.cljs$lang$applyTo = (function (arglist__3638){
var x = cljs.core.first(arglist__3638);
arglist__3638 = cljs.core.next(arglist__3638);
var y = cljs.core.first(arglist__3638);
var more = cljs.core.rest(arglist__3638);
return G__3636__delegate(x,y,more);
});
G__3636.cljs$core$IFn$_invoke$arity$variadic = G__3636__delegate;
return G__3636;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__3639 = null;
if (arguments.length > 2) {
var G__3640__i = 0, G__3640__a = new Array(arguments.length -  2);
while (G__3640__i < G__3640__a.length) {G__3640__a[G__3640__i] = arguments[G__3640__i + 2]; ++G__3640__i;}
G__3639 = new cljs.core.IndexedSeq(G__3640__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__3639);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__3161__auto__ = x;
var y__3162__auto__ = y;
return ((x__3161__auto__ < y__3162__auto__) ? x__3161__auto__ : y__3162__auto__);
});
var min__3 = (function() { 
var G__3641__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__3161__auto__ = x;
var y__3162__auto__ = y;
return ((x__3161__auto__ < y__3162__auto__) ? x__3161__auto__ : y__3162__auto__);
})(),more);
};
var G__3641 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__3642__i = 0, G__3642__a = new Array(arguments.length -  2);
while (G__3642__i < G__3642__a.length) {G__3642__a[G__3642__i] = arguments[G__3642__i + 2]; ++G__3642__i;}
  more = new cljs.core.IndexedSeq(G__3642__a,0);
} 
return G__3641__delegate.call(this,x,y,more);};
G__3641.cljs$lang$maxFixedArity = 2;
G__3641.cljs$lang$applyTo = (function (arglist__3643){
var x = cljs.core.first(arglist__3643);
arglist__3643 = cljs.core.next(arglist__3643);
var y = cljs.core.first(arglist__3643);
var more = cljs.core.rest(arglist__3643);
return G__3641__delegate(x,y,more);
});
G__3641.cljs$core$IFn$_invoke$arity$variadic = G__3641__delegate;
return G__3641;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__3644 = null;
if (arguments.length > 2) {
var G__3645__i = 0, G__3645__a = new Array(arguments.length -  2);
while (G__3645__i < G__3645__a.length) {G__3645__a[G__3645__i] = arguments[G__3645__i + 2]; ++G__3645__i;}
G__3644 = new cljs.core.IndexedSeq(G__3645__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__3644);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__3646__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__3646 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__3647__i = 0, G__3647__a = new Array(arguments.length -  2);
while (G__3647__i < G__3647__a.length) {G__3647__a[G__3647__i] = arguments[G__3647__i + 2]; ++G__3647__i;}
  more = new cljs.core.IndexedSeq(G__3647__a,0);
} 
return G__3646__delegate.call(this,x,y,more);};
G__3646.cljs$lang$maxFixedArity = 2;
G__3646.cljs$lang$applyTo = (function (arglist__3648){
var x = cljs.core.first(arglist__3648);
arglist__3648 = cljs.core.next(arglist__3648);
var y = cljs.core.first(arglist__3648);
var more = cljs.core.rest(arglist__3648);
return G__3646__delegate(x,y,more);
});
G__3646.cljs$core$IFn$_invoke$arity$variadic = G__3646__delegate;
return G__3646;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__3649 = null;
if (arguments.length > 2) {
var G__3650__i = 0, G__3650__a = new Array(arguments.length -  2);
while (G__3650__i < G__3650__a.length) {G__3650__a[G__3650__i] = arguments[G__3650__i + 2]; ++G__3650__i;}
G__3649 = new cljs.core.IndexedSeq(G__3650__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__3649);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__3651__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__3651 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__3652__i = 0, G__3652__a = new Array(arguments.length -  2);
while (G__3652__i < G__3652__a.length) {G__3652__a[G__3652__i] = arguments[G__3652__i + 2]; ++G__3652__i;}
  more = new cljs.core.IndexedSeq(G__3652__a,0);
} 
return G__3651__delegate.call(this,x,y,more);};
G__3651.cljs$lang$maxFixedArity = 2;
G__3651.cljs$lang$applyTo = (function (arglist__3653){
var x = cljs.core.first(arglist__3653);
arglist__3653 = cljs.core.next(arglist__3653);
var y = cljs.core.first(arglist__3653);
var more = cljs.core.rest(arglist__3653);
return G__3651__delegate(x,y,more);
});
G__3651.cljs$core$IFn$_invoke$arity$variadic = G__3651__delegate;
return G__3651;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__3654 = null;
if (arguments.length > 2) {
var G__3655__i = 0, G__3655__a = new Array(arguments.length -  2);
while (G__3655__i < G__3655__a.length) {G__3655__a[G__3655__i] = arguments[G__3655__i + 2]; ++G__3655__i;}
G__3654 = new cljs.core.IndexedSeq(G__3655__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__3654);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__3660__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__3660 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__3661__i = 0, G__3661__a = new Array(arguments.length -  2);
while (G__3661__i < G__3661__a.length) {G__3661__a[G__3661__i] = arguments[G__3661__i + 2]; ++G__3661__i;}
  more = new cljs.core.IndexedSeq(G__3661__a,0);
} 
return G__3660__delegate.call(this,x,y,more);};
G__3660.cljs$lang$maxFixedArity = 2;
G__3660.cljs$lang$applyTo = (function (arglist__3662){
var x = cljs.core.first(arglist__3662);
arglist__3662 = cljs.core.next(arglist__3662);
var y = cljs.core.first(arglist__3662);
var more = cljs.core.rest(arglist__3662);
return G__3660__delegate(x,y,more);
});
G__3660.cljs$core$IFn$_invoke$arity$variadic = G__3660__delegate;
return G__3660;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__3663 = null;
if (arguments.length > 2) {
var G__3664__i = 0, G__3664__a = new Array(arguments.length -  2);
while (G__3664__i < G__3664__a.length) {G__3664__a[G__3664__i] = arguments[G__3664__i + 2]; ++G__3664__i;}
G__3663 = new cljs.core.IndexedSeq(G__3664__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__3663);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__3665__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__3665 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__3666__i = 0, G__3666__a = new Array(arguments.length -  2);
while (G__3666__i < G__3666__a.length) {G__3666__a[G__3666__i] = arguments[G__3666__i + 2]; ++G__3666__i;}
  more = new cljs.core.IndexedSeq(G__3666__a,0);
} 
return G__3665__delegate.call(this,x,y,more);};
G__3665.cljs$lang$maxFixedArity = 2;
G__3665.cljs$lang$applyTo = (function (arglist__3667){
var x = cljs.core.first(arglist__3667);
arglist__3667 = cljs.core.next(arglist__3667);
var y = cljs.core.first(arglist__3667);
var more = cljs.core.rest(arglist__3667);
return G__3665__delegate(x,y,more);
});
G__3665.cljs$core$IFn$_invoke$arity$variadic = G__3665__delegate;
return G__3665;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__3668 = null;
if (arguments.length > 2) {
var G__3669__i = 0, G__3669__a = new Array(arguments.length -  2);
while (G__3669__i < G__3669__a.length) {G__3669__a[G__3669__i] = arguments[G__3669__i + 2]; ++G__3669__i;}
G__3668 = new cljs.core.IndexedSeq(G__3669__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__3668);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__3670__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__3670 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__3671__i = 0, G__3671__a = new Array(arguments.length -  2);
while (G__3671__i < G__3671__a.length) {G__3671__a[G__3671__i] = arguments[G__3671__i + 2]; ++G__3671__i;}
  more = new cljs.core.IndexedSeq(G__3671__a,0);
} 
return G__3670__delegate.call(this,x,y,more);};
G__3670.cljs$lang$maxFixedArity = 2;
G__3670.cljs$lang$applyTo = (function (arglist__3672){
var x = cljs.core.first(arglist__3672);
arglist__3672 = cljs.core.next(arglist__3672);
var y = cljs.core.first(arglist__3672);
var more = cljs.core.rest(arglist__3672);
return G__3670__delegate(x,y,more);
});
G__3670.cljs$core$IFn$_invoke$arity$variadic = G__3670__delegate;
return G__3670;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__3673 = null;
if (arguments.length > 2) {
var G__3674__i = 0, G__3674__a = new Array(arguments.length -  2);
while (G__3674__i < G__3674__a.length) {G__3674__a[G__3674__i] = arguments[G__3674__i + 2]; ++G__3674__i;}
G__3673 = new cljs.core.IndexedSeq(G__3674__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__3673);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__3677 = x;
var G__3678 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__3677,G__3678) : cljs.core.mod.call(null,G__3677,G__3678));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__3679__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__3679 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__3680__i = 0, G__3680__a = new Array(arguments.length -  2);
while (G__3680__i < G__3680__a.length) {G__3680__a[G__3680__i] = arguments[G__3680__i + 2]; ++G__3680__i;}
  more = new cljs.core.IndexedSeq(G__3680__a,0);
} 
return G__3679__delegate.call(this,x,y,more);};
G__3679.cljs$lang$maxFixedArity = 2;
G__3679.cljs$lang$applyTo = (function (arglist__3681){
var x = cljs.core.first(arglist__3681);
arglist__3681 = cljs.core.next(arglist__3681);
var y = cljs.core.first(arglist__3681);
var more = cljs.core.rest(arglist__3681);
return G__3679__delegate(x,y,more);
});
G__3679.cljs$core$IFn$_invoke$arity$variadic = G__3679__delegate;
return G__3679;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__3682 = null;
if (arguments.length > 2) {
var G__3683__i = 0, G__3683__a = new Array(arguments.length -  2);
while (G__3683__i < G__3683__a.length) {G__3683__a[G__3683__i] = arguments[G__3683__i + 2]; ++G__3683__i;}
G__3682 = new cljs.core.IndexedSeq(G__3683__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__3682);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__3684__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__3684 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__3685__i = 0, G__3685__a = new Array(arguments.length -  2);
while (G__3685__i < G__3685__a.length) {G__3685__a[G__3685__i] = arguments[G__3685__i + 2]; ++G__3685__i;}
  more = new cljs.core.IndexedSeq(G__3685__a,0);
} 
return G__3684__delegate.call(this,x,y,more);};
G__3684.cljs$lang$maxFixedArity = 2;
G__3684.cljs$lang$applyTo = (function (arglist__3686){
var x = cljs.core.first(arglist__3686);
arglist__3686 = cljs.core.next(arglist__3686);
var y = cljs.core.first(arglist__3686);
var more = cljs.core.rest(arglist__3686);
return G__3684__delegate(x,y,more);
});
G__3684.cljs$core$IFn$_invoke$arity$variadic = G__3684__delegate;
return G__3684;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__3687 = null;
if (arguments.length > 2) {
var G__3688__i = 0, G__3688__a = new Array(arguments.length -  2);
while (G__3688__i < G__3688__a.length) {G__3688__a[G__3688__i] = arguments[G__3688__i + 2]; ++G__3688__i;}
G__3687 = new cljs.core.IndexedSeq(G__3688__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__3687);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__3691 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__3691) : Math.floor.call(null,G__3691));
} else {
var G__3692 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__3692) : Math.ceil.call(null,G__3692));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__3693__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__3693 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__3694__i = 0, G__3694__a = new Array(arguments.length -  2);
while (G__3694__i < G__3694__a.length) {G__3694__a[G__3694__i] = arguments[G__3694__i + 2]; ++G__3694__i;}
  more = new cljs.core.IndexedSeq(G__3694__a,0);
} 
return G__3693__delegate.call(this,x,y,more);};
G__3693.cljs$lang$maxFixedArity = 2;
G__3693.cljs$lang$applyTo = (function (arglist__3695){
var x = cljs.core.first(arglist__3695);
arglist__3695 = cljs.core.next(arglist__3695);
var y = cljs.core.first(arglist__3695);
var more = cljs.core.rest(arglist__3695);
return G__3693__delegate(x,y,more);
});
G__3693.cljs$core$IFn$_invoke$arity$variadic = G__3693__delegate;
return G__3693;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__3696 = null;
if (arguments.length > 2) {
var G__3697__i = 0, G__3697__a = new Array(arguments.length -  2);
while (G__3697__i < G__3697__a.length) {G__3697__a[G__3697__i] = arguments[G__3697__i + 2]; ++G__3697__i;}
G__3696 = new cljs.core.IndexedSeq(G__3697__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__3696);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__3698__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__3698 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__3699__i = 0, G__3699__a = new Array(arguments.length -  2);
while (G__3699__i < G__3699__a.length) {G__3699__a[G__3699__i] = arguments[G__3699__i + 2]; ++G__3699__i;}
  more = new cljs.core.IndexedSeq(G__3699__a,0);
} 
return G__3698__delegate.call(this,x,y,more);};
G__3698.cljs$lang$maxFixedArity = 2;
G__3698.cljs$lang$applyTo = (function (arglist__3700){
var x = cljs.core.first(arglist__3700);
arglist__3700 = cljs.core.next(arglist__3700);
var y = cljs.core.first(arglist__3700);
var more = cljs.core.rest(arglist__3700);
return G__3698__delegate(x,y,more);
});
G__3698.cljs$core$IFn$_invoke$arity$variadic = G__3698__delegate;
return G__3698;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__3701 = null;
if (arguments.length > 2) {
var G__3702__i = 0, G__3702__a = new Array(arguments.length -  2);
while (G__3702__i < G__3702__a.length) {G__3702__a[G__3702__i] = arguments[G__3702__i + 2]; ++G__3702__i;}
G__3701 = new cljs.core.IndexedSeq(G__3702__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__3701);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__3703__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__3703 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__3704__i = 0, G__3704__a = new Array(arguments.length -  2);
while (G__3704__i < G__3704__a.length) {G__3704__a[G__3704__i] = arguments[G__3704__i + 2]; ++G__3704__i;}
  more = new cljs.core.IndexedSeq(G__3704__a,0);
} 
return G__3703__delegate.call(this,x,y,more);};
G__3703.cljs$lang$maxFixedArity = 2;
G__3703.cljs$lang$applyTo = (function (arglist__3705){
var x = cljs.core.first(arglist__3705);
arglist__3705 = cljs.core.next(arglist__3705);
var y = cljs.core.first(arglist__3705);
var more = cljs.core.rest(arglist__3705);
return G__3703__delegate(x,y,more);
});
G__3703.cljs$core$IFn$_invoke$arity$variadic = G__3703__delegate;
return G__3703;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__3706 = null;
if (arguments.length > 2) {
var G__3707__i = 0, G__3707__a = new Array(arguments.length -  2);
while (G__3707__i < G__3707__a.length) {G__3707__a[G__3707__i] = arguments[G__3707__i + 2]; ++G__3707__i;}
G__3706 = new cljs.core.IndexedSeq(G__3707__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__3706);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__3708__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__3708 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__3709__i = 0, G__3709__a = new Array(arguments.length -  2);
while (G__3709__i < G__3709__a.length) {G__3709__a[G__3709__i] = arguments[G__3709__i + 2]; ++G__3709__i;}
  more = new cljs.core.IndexedSeq(G__3709__a,0);
} 
return G__3708__delegate.call(this,x,y,more);};
G__3708.cljs$lang$maxFixedArity = 2;
G__3708.cljs$lang$applyTo = (function (arglist__3710){
var x = cljs.core.first(arglist__3710);
arglist__3710 = cljs.core.next(arglist__3710);
var y = cljs.core.first(arglist__3710);
var more = cljs.core.rest(arglist__3710);
return G__3708__delegate(x,y,more);
});
G__3708.cljs$core$IFn$_invoke$arity$variadic = G__3708__delegate;
return G__3708;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__3711 = null;
if (arguments.length > 2) {
var G__3712__i = 0, G__3712__a = new Array(arguments.length -  2);
while (G__3712__i < G__3712__a.length) {G__3712__a[G__3712__i] = arguments[G__3712__i + 2]; ++G__3712__i;}
G__3711 = new cljs.core.IndexedSeq(G__3712__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__3711);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__3717__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__3718 = y;
var G__3719 = cljs.core.first(more);
var G__3720 = cljs.core.next(more);
x = G__3718;
y = G__3719;
more = G__3720;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__3717 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__3721__i = 0, G__3721__a = new Array(arguments.length -  2);
while (G__3721__i < G__3721__a.length) {G__3721__a[G__3721__i] = arguments[G__3721__i + 2]; ++G__3721__i;}
  more = new cljs.core.IndexedSeq(G__3721__a,0);
} 
return G__3717__delegate.call(this,x,y,more);};
G__3717.cljs$lang$maxFixedArity = 2;
G__3717.cljs$lang$applyTo = (function (arglist__3722){
var x = cljs.core.first(arglist__3722);
arglist__3722 = cljs.core.next(arglist__3722);
var y = cljs.core.first(arglist__3722);
var more = cljs.core.rest(arglist__3722);
return G__3717__delegate(x,y,more);
});
G__3717.cljs$core$IFn$_invoke$arity$variadic = G__3717__delegate;
return G__3717;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__3723 = null;
if (arguments.length > 2) {
var G__3724__i = 0, G__3724__a = new Array(arguments.length -  2);
while (G__3724__i < G__3724__a.length) {G__3724__a[G__3724__i] = arguments[G__3724__i + 2]; ++G__3724__i;}
G__3723 = new cljs.core.IndexedSeq(G__3724__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__3723);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__3725 = (n__$1 - (1));
var G__3726 = cljs.core.next(xs);
n__$1 = G__3725;
xs = G__3726;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__3730 = x;
return goog.string.buildString(G__3730);
}
});
var str__2 = (function() { 
var G__3731__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__3732 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__3733 = cljs.core.next(more);
sb = G__3732;
more = G__3733;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__3731 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__3734__i = 0, G__3734__a = new Array(arguments.length -  1);
while (G__3734__i < G__3734__a.length) {G__3734__a[G__3734__i] = arguments[G__3734__i + 1]; ++G__3734__i;}
  ys = new cljs.core.IndexedSeq(G__3734__a,0);
} 
return G__3731__delegate.call(this,x,ys);};
G__3731.cljs$lang$maxFixedArity = 1;
G__3731.cljs$lang$applyTo = (function (arglist__3735){
var x = cljs.core.first(arglist__3735);
var ys = cljs.core.rest(arglist__3735);
return G__3731__delegate(x,ys);
});
G__3731.cljs$core$IFn$_invoke$arity$variadic = G__3731__delegate;
return G__3731;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__3736 = null;
if (arguments.length > 1) {
var G__3737__i = 0, G__3737__a = new Array(arguments.length -  1);
while (G__3737__i < G__3737__a.length) {G__3737__a[G__3737__i] = arguments[G__3737__i + 1]; ++G__3737__i;}
G__3736 = new cljs.core.IndexedSeq(G__3737__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__3736);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__3738 = cljs.core.next(xs);
var G__3739 = cljs.core.next(ys);
xs = G__3738;
ys = G__3739;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__3740 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__3741 = cljs.core.next(s);
res = G__3740;
s = G__3741;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__3746 = ((h + (cljs.core.hash((function (){var G__3744 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__3744) : cljs.core.key.call(null,G__3744));
})()) ^ cljs.core.hash((function (){var G__3745 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__3745) : cljs.core.val.call(null,G__3745));
})()))) % (4503599627370496));
var G__3747 = cljs.core.next(s);
h = G__3746;
s = G__3747;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__3748 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__3749 = cljs.core.next(s__$1);
h = G__3748;
s__$1 = G__3749;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__3760_3770 = cljs.core.seq(fn_map);
var chunk__3761_3771 = null;
var count__3762_3772 = (0);
var i__3763_3773 = (0);
while(true){
if((i__3763_3773 < count__3762_3772)){
var vec__3764_3774 = chunk__3761_3771.cljs$core$IIndexed$_nth$arity$2(null,i__3763_3773);
var key_name_3775 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3764_3774,(0),null);
var f_3776 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3764_3774,(1),null);
var str_name_3777 = (function (){var G__3765 = key_name_3775;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__3765) : cljs.core.name.call(null,G__3765));
})();
(obj[str_name_3777] = f_3776);

var G__3778 = seq__3760_3770;
var G__3779 = chunk__3761_3771;
var G__3780 = count__3762_3772;
var G__3781 = (i__3763_3773 + (1));
seq__3760_3770 = G__3778;
chunk__3761_3771 = G__3779;
count__3762_3772 = G__3780;
i__3763_3773 = G__3781;
continue;
} else {
var temp__4126__auto___3782 = cljs.core.seq(seq__3760_3770);
if(temp__4126__auto___3782){
var seq__3760_3783__$1 = temp__4126__auto___3782;
if(cljs.core.chunked_seq_QMARK_(seq__3760_3783__$1)){
var c__3456__auto___3784 = (function (){var G__3766 = seq__3760_3783__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__3766) : cljs.core.chunk_first.call(null,G__3766));
})();
var G__3785 = (function (){var G__3767 = seq__3760_3783__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__3767) : cljs.core.chunk_rest.call(null,G__3767));
})();
var G__3786 = c__3456__auto___3784;
var G__3787 = cljs.core.count(c__3456__auto___3784);
var G__3788 = (0);
seq__3760_3770 = G__3785;
chunk__3761_3771 = G__3786;
count__3762_3772 = G__3787;
i__3763_3773 = G__3788;
continue;
} else {
var vec__3768_3789 = cljs.core.first(seq__3760_3783__$1);
var key_name_3790 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3768_3789,(0),null);
var f_3791 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3768_3789,(1),null);
var str_name_3792 = (function (){var G__3769 = key_name_3790;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__3769) : cljs.core.name.call(null,G__3769));
})();
(obj[str_name_3792] = f_3791);

var G__3793 = cljs.core.next(seq__3760_3783__$1);
var G__3794 = null;
var G__3795 = (0);
var G__3796 = (0);
seq__3760_3770 = G__3793;
chunk__3761_3771 = G__3794;
count__3762_3772 = G__3795;
i__3763_3773 = G__3796;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3182__auto__ = self__.__hash;
if(!((h__3182__auto__ == null))){
return h__3182__auto__;
} else {
var h__3182__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3182__auto____$1;

return h__3182__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__3798 = coll;
if(G__3798){
var bit__3386__auto__ = (G__3798.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__3386__auto__) || (G__3798.cljs$core$IReversible$)){
return true;
} else {
if((!G__3798.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__3798);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__3798);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__3799 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__3799;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__3800 = (i - (1));
var G__3801 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__3800;
r = G__3801;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__3802__i = 0, G__3802__a = new Array(arguments.length -  0);
while (G__3802__i < G__3802__a.length) {G__3802__a[G__3802__i] = arguments[G__3802__i + 0]; ++G__3802__i;}
  xs = new cljs.core.IndexedSeq(G__3802__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__3803){
var xs = cljs.core.seq(arglist__3803);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3182__auto__ = self__.__hash;
if(!((h__3182__auto__ == null))){
return h__3182__auto__;
} else {
var h__3182__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3182__auto____$1;

return h__3182__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3089__auto__ = (coll == null);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var G__3807 = coll;
if(G__3807){
var bit__3383__auto__ = (G__3807.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__3383__auto__) || (G__3807.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__3809 = x;
if(G__3809){
var bit__3386__auto__ = (G__3809.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__3386__auto__) || (G__3809.cljs$core$IList$)){
return true;
} else {
if((!G__3809.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__3809);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__3809);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3081__auto__ = cljs.core.not(a.ns);
if(and__3081__auto__){
return b.ns;
} else {
return and__3081__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__3816 = a.ns;
var G__3817 = b.ns;
return goog.array.defaultCompare(G__3816,G__3817);
})();
if(((0) === nsc)){
var G__3818 = a.name;
var G__3819 = b.name;
return goog.array.defaultCompare(G__3818,G__3819);
} else {
return nsc;
}
}
} else {
var G__3820 = a.name;
var G__3821 = b.name;
return goog.array.defaultCompare(G__3820,G__3821);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__3182__auto__ = self__._hash;
if(!((h__3182__auto__ == null))){
return h__3182__auto__;
} else {
var h__3182__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__3182__auto____$1;

return h__3182__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__3823 = null;
var G__3823__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__3823__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__3823 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__3823__2.call(this,self__,coll);
case 3:
return G__3823__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3823.cljs$core$IFn$_invoke$arity$2 = G__3823__2;
G__3823.cljs$core$IFn$_invoke$arity$3 = G__3823__3;
return G__3823;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args3822){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args3822)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__3825 = x;
if(G__3825){
var bit__3383__auto__ = (G__3825.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__3383__auto__) || (G__3825.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__3827 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__3827) : cljs.core.name.call(null,G__3827));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3182__auto__ = self__.__hash;
if(!((h__3182__auto__ == null))){
return h__3182__auto__;
} else {
var h__3182__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3182__auto____$1;

return h__3182__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__3828 = ls.sval();
ls = G__3828;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3182__auto__ = self__.__hash;
if(!((h__3182__auto__ == null))){
return h__3182__auto__;
} else {
var h__3182__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3182__auto____$1;

return h__3182__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__3830 = s;
if(G__3830){
var bit__3383__auto__ = (G__3830.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__3383__auto__) || (G__3830.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__3831 = cljs.core.next(s__$1);
s__$1 = G__3831;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_3832 = (0);
var xs_3833 = cljs.core.seq(coll);
while(true){
if(xs_3833){
(ret[i_3832] = cljs.core.to_array(cljs.core.first(xs_3833)));

var G__3834 = (i_3832 + (1));
var G__3835 = cljs.core.next(xs_3833);
i_3832 = G__3834;
xs_3833 = G__3835;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__3838 = (i + (1));
var G__3839 = cljs.core.next(s__$1);
i = G__3838;
s__$1 = G__3839;
continue;
} else {
return a;
}
break;
}
} else {
var n__3508__auto___3840 = size;
var i_3841 = (0);
while(true){
if((i_3841 < n__3508__auto___3840)){
(a[i_3841] = init_val_or_seq);

var G__3842 = (i_3841 + (1));
i_3841 = G__3842;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__3845 = (i + (1));
var G__3846 = cljs.core.next(s__$1);
i = G__3845;
s__$1 = G__3846;
continue;
} else {
return a;
}
break;
}
} else {
var n__3508__auto___3847 = size;
var i_3848 = (0);
while(true){
if((i_3848 < n__3508__auto___3847)){
(a[i_3848] = init_val_or_seq);

var G__3849 = (i_3848 + (1));
i_3848 = G__3849;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__3852 = (i + (1));
var G__3853 = cljs.core.next(s__$1);
i = G__3852;
s__$1 = G__3853;
continue;
} else {
return a;
}
break;
}
} else {
var n__3508__auto___3854 = size;
var i_3855 = (0);
while(true){
if((i_3855 < n__3508__auto___3854)){
(a[i_3855] = init_val_or_seq);

var G__3856 = (i_3855 + (1));
i_3855 = G__3856;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__3859 = (i + (1));
var G__3860 = cljs.core.next(s__$1);
i = G__3859;
s__$1 = G__3860;
continue;
} else {
return a;
}
break;
}
} else {
var n__3508__auto___3861 = size;
var i_3862 = (0);
while(true){
if((i_3862 < n__3508__auto___3861)){
(a[i_3862] = init_val_or_seq);

var G__3863 = (i_3862 + (1));
i_3862 = G__3863;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__3864 = cljs.core.next(s__$1);
var G__3865 = (i - (1));
var G__3866 = (sum + (1));
s__$1 = G__3864;
i = G__3865;
sum = G__3866;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__3886__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__3886 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__3887__i = 0, G__3887__a = new Array(arguments.length -  2);
while (G__3887__i < G__3887__a.length) {G__3887__a[G__3887__i] = arguments[G__3887__i + 2]; ++G__3887__i;}
  zs = new cljs.core.IndexedSeq(G__3887__a,0);
} 
return G__3886__delegate.call(this,x,y,zs);};
G__3886.cljs$lang$maxFixedArity = 2;
G__3886.cljs$lang$applyTo = (function (arglist__3888){
var x = cljs.core.first(arglist__3888);
arglist__3888 = cljs.core.next(arglist__3888);
var y = cljs.core.first(arglist__3888);
var zs = cljs.core.rest(arglist__3888);
return G__3886__delegate(x,y,zs);
});
G__3886.cljs$core$IFn$_invoke$arity$variadic = G__3886__delegate;
return G__3886;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__3889 = null;
if (arguments.length > 2) {
var G__3890__i = 0, G__3890__a = new Array(arguments.length -  2);
while (G__3890__i < G__3890__a.length) {G__3890__a[G__3890__i] = arguments[G__3890__i + 2]; ++G__3890__i;}
G__3889 = new cljs.core.IndexedSeq(G__3890__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__3889);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__3891__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__3891 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__3892__i = 0, G__3892__a = new Array(arguments.length -  4);
while (G__3892__i < G__3892__a.length) {G__3892__a[G__3892__i] = arguments[G__3892__i + 4]; ++G__3892__i;}
  more = new cljs.core.IndexedSeq(G__3892__a,0);
} 
return G__3891__delegate.call(this,a,b,c,d,more);};
G__3891.cljs$lang$maxFixedArity = 4;
G__3891.cljs$lang$applyTo = (function (arglist__3893){
var a = cljs.core.first(arglist__3893);
arglist__3893 = cljs.core.next(arglist__3893);
var b = cljs.core.first(arglist__3893);
arglist__3893 = cljs.core.next(arglist__3893);
var c = cljs.core.first(arglist__3893);
arglist__3893 = cljs.core.next(arglist__3893);
var d = cljs.core.first(arglist__3893);
var more = cljs.core.rest(arglist__3893);
return G__3891__delegate(a,b,c,d,more);
});
G__3891.cljs$core$IFn$_invoke$arity$variadic = G__3891__delegate;
return G__3891;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__3894 = null;
if (arguments.length > 4) {
var G__3895__i = 0, G__3895__a = new Array(arguments.length -  4);
while (G__3895__i < G__3895__a.length) {G__3895__a[G__3895__i] = arguments[G__3895__i + 4]; ++G__3895__i;}
G__3894 = new cljs.core.IndexedSeq(G__3895__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__3894);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__3896__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__3897 = ntcoll;
var G__3898 = cljs.core.first(vals);
var G__3899 = cljs.core.next(vals);
tcoll = G__3897;
val = G__3898;
vals = G__3899;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__3896 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__3900__i = 0, G__3900__a = new Array(arguments.length -  2);
while (G__3900__i < G__3900__a.length) {G__3900__a[G__3900__i] = arguments[G__3900__i + 2]; ++G__3900__i;}
  vals = new cljs.core.IndexedSeq(G__3900__a,0);
} 
return G__3896__delegate.call(this,tcoll,val,vals);};
G__3896.cljs$lang$maxFixedArity = 2;
G__3896.cljs$lang$applyTo = (function (arglist__3901){
var tcoll = cljs.core.first(arglist__3901);
arglist__3901 = cljs.core.next(arglist__3901);
var val = cljs.core.first(arglist__3901);
var vals = cljs.core.rest(arglist__3901);
return G__3896__delegate(tcoll,val,vals);
});
G__3896.cljs$core$IFn$_invoke$arity$variadic = G__3896__delegate;
return G__3896;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__3902 = null;
if (arguments.length > 2) {
var G__3903__i = 0, G__3903__a = new Array(arguments.length -  2);
while (G__3903__i < G__3903__a.length) {G__3903__a[G__3903__i] = arguments[G__3903__i + 2]; ++G__3903__i;}
G__3902 = new cljs.core.IndexedSeq(G__3903__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__3902);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__3904__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__3905 = ntcoll;
var G__3906 = cljs.core.first(kvs);
var G__3907 = cljs.core.second(kvs);
var G__3908 = cljs.core.nnext(kvs);
tcoll = G__3905;
key = G__3906;
val = G__3907;
kvs = G__3908;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__3904 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__3909__i = 0, G__3909__a = new Array(arguments.length -  3);
while (G__3909__i < G__3909__a.length) {G__3909__a[G__3909__i] = arguments[G__3909__i + 3]; ++G__3909__i;}
  kvs = new cljs.core.IndexedSeq(G__3909__a,0);
} 
return G__3904__delegate.call(this,tcoll,key,val,kvs);};
G__3904.cljs$lang$maxFixedArity = 3;
G__3904.cljs$lang$applyTo = (function (arglist__3910){
var tcoll = cljs.core.first(arglist__3910);
arglist__3910 = cljs.core.next(arglist__3910);
var key = cljs.core.first(arglist__3910);
arglist__3910 = cljs.core.next(arglist__3910);
var val = cljs.core.first(arglist__3910);
var kvs = cljs.core.rest(arglist__3910);
return G__3904__delegate(tcoll,key,val,kvs);
});
G__3904.cljs$core$IFn$_invoke$arity$variadic = G__3904__delegate;
return G__3904;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__3911 = null;
if (arguments.length > 3) {
var G__3912__i = 0, G__3912__a = new Array(arguments.length -  3);
while (G__3912__i < G__3912__a.length) {G__3912__a[G__3912__i] = arguments[G__3912__i + 3]; ++G__3912__i;}
G__3911 = new cljs.core.IndexedSeq(G__3912__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__3911);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__3913__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__3914 = ntcoll;
var G__3915 = cljs.core.first(ks);
var G__3916 = cljs.core.next(ks);
tcoll = G__3914;
key = G__3915;
ks = G__3916;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__3913 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__3917__i = 0, G__3917__a = new Array(arguments.length -  2);
while (G__3917__i < G__3917__a.length) {G__3917__a[G__3917__i] = arguments[G__3917__i + 2]; ++G__3917__i;}
  ks = new cljs.core.IndexedSeq(G__3917__a,0);
} 
return G__3913__delegate.call(this,tcoll,key,ks);};
G__3913.cljs$lang$maxFixedArity = 2;
G__3913.cljs$lang$applyTo = (function (arglist__3918){
var tcoll = cljs.core.first(arglist__3918);
arglist__3918 = cljs.core.next(arglist__3918);
var key = cljs.core.first(arglist__3918);
var ks = cljs.core.rest(arglist__3918);
return G__3913__delegate(tcoll,key,ks);
});
G__3913.cljs$core$IFn$_invoke$arity$variadic = G__3913__delegate;
return G__3913;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__3919 = null;
if (arguments.length > 2) {
var G__3920__i = 0, G__3920__a = new Array(arguments.length -  2);
while (G__3920__i < G__3920__a.length) {G__3920__a[G__3920__i] = arguments[G__3920__i + 2]; ++G__3920__i;}
G__3919 = new cljs.core.IndexedSeq(G__3920__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__3919);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__3921__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__3922 = ntcoll;
var G__3923 = cljs.core.first(vals);
var G__3924 = cljs.core.next(vals);
tcoll = G__3922;
val = G__3923;
vals = G__3924;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__3921 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__3925__i = 0, G__3925__a = new Array(arguments.length -  2);
while (G__3925__i < G__3925__a.length) {G__3925__a[G__3925__i] = arguments[G__3925__i + 2]; ++G__3925__i;}
  vals = new cljs.core.IndexedSeq(G__3925__a,0);
} 
return G__3921__delegate.call(this,tcoll,val,vals);};
G__3921.cljs$lang$maxFixedArity = 2;
G__3921.cljs$lang$applyTo = (function (arglist__3926){
var tcoll = cljs.core.first(arglist__3926);
arglist__3926 = cljs.core.next(arglist__3926);
var val = cljs.core.first(arglist__3926);
var vals = cljs.core.rest(arglist__3926);
return G__3921__delegate(tcoll,val,vals);
});
G__3921.cljs$core$IFn$_invoke$arity$variadic = G__3921__delegate;
return G__3921;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__3927 = null;
if (arguments.length > 2) {
var G__3928__i = 0, G__3928__a = new Array(arguments.length -  2);
while (G__3928__i < G__3928__a.length) {G__3928__a[G__3928__i] = arguments[G__3928__i + 2]; ++G__3928__i;}
G__3927 = new cljs.core.IndexedSeq(G__3928__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__3927);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a1048 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a1048);
} else {
var G__4139 = a1048;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4139) : f.call(null,G__4139));
}
} else {
var b1049 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a1048,b1049);
} else {
var G__4140 = a1048;
var G__4141 = b1049;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4140,G__4141) : f.call(null,G__4140,G__4141));
}
} else {
var c1050 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a1048,b1049,c1050);
} else {
var G__4142 = a1048;
var G__4143 = b1049;
var G__4144 = c1050;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4142,G__4143,G__4144) : f.call(null,G__4142,G__4143,G__4144));
}
} else {
var d1051 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a1048,b1049,c1050,d1051);
} else {
var G__4145 = a1048;
var G__4146 = b1049;
var G__4147 = c1050;
var G__4148 = d1051;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__4145,G__4146,G__4147,G__4148) : f.call(null,G__4145,G__4146,G__4147,G__4148));
}
} else {
var e1052 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a1048,b1049,c1050,d1051,e1052);
} else {
var G__4149 = a1048;
var G__4150 = b1049;
var G__4151 = c1050;
var G__4152 = d1051;
var G__4153 = e1052;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__4149,G__4150,G__4151,G__4152,G__4153) : f.call(null,G__4149,G__4150,G__4151,G__4152,G__4153));
}
} else {
var f1053 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a1048,b1049,c1050,d1051,e1052,f1053);
} else {
var G__4154 = a1048;
var G__4155 = b1049;
var G__4156 = c1050;
var G__4157 = d1051;
var G__4158 = e1052;
var G__4159 = f1053;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__4154,G__4155,G__4156,G__4157,G__4158,G__4159) : f.call(null,G__4154,G__4155,G__4156,G__4157,G__4158,G__4159));
}
} else {
var g1054 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a1048,b1049,c1050,d1051,e1052,f1053,g1054);
} else {
var G__4160 = a1048;
var G__4161 = b1049;
var G__4162 = c1050;
var G__4163 = d1051;
var G__4164 = e1052;
var G__4165 = f1053;
var G__4166 = g1054;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__4160,G__4161,G__4162,G__4163,G__4164,G__4165,G__4166) : f.call(null,G__4160,G__4161,G__4162,G__4163,G__4164,G__4165,G__4166));
}
} else {
var h1055 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a1048,b1049,c1050,d1051,e1052,f1053,g1054,h1055);
} else {
var G__4167 = a1048;
var G__4168 = b1049;
var G__4169 = c1050;
var G__4170 = d1051;
var G__4171 = e1052;
var G__4172 = f1053;
var G__4173 = g1054;
var G__4174 = h1055;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__4167,G__4168,G__4169,G__4170,G__4171,G__4172,G__4173,G__4174) : f.call(null,G__4167,G__4168,G__4169,G__4170,G__4171,G__4172,G__4173,G__4174));
}
} else {
var i1056 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a1048,b1049,c1050,d1051,e1052,f1053,g1054,h1055,i1056);
} else {
var G__4175 = a1048;
var G__4176 = b1049;
var G__4177 = c1050;
var G__4178 = d1051;
var G__4179 = e1052;
var G__4180 = f1053;
var G__4181 = g1054;
var G__4182 = h1055;
var G__4183 = i1056;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__4175,G__4176,G__4177,G__4178,G__4179,G__4180,G__4181,G__4182,G__4183) : f.call(null,G__4175,G__4176,G__4177,G__4178,G__4179,G__4180,G__4181,G__4182,G__4183));
}
} else {
var j1057 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a1048,b1049,c1050,d1051,e1052,f1053,g1054,h1055,i1056,j1057);
} else {
var G__4184 = a1048;
var G__4185 = b1049;
var G__4186 = c1050;
var G__4187 = d1051;
var G__4188 = e1052;
var G__4189 = f1053;
var G__4190 = g1054;
var G__4191 = h1055;
var G__4192 = i1056;
var G__4193 = j1057;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__4184,G__4185,G__4186,G__4187,G__4188,G__4189,G__4190,G__4191,G__4192,G__4193) : f.call(null,G__4184,G__4185,G__4186,G__4187,G__4188,G__4189,G__4190,G__4191,G__4192,G__4193));
}
} else {
var k1058 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a1048,b1049,c1050,d1051,e1052,f1053,g1054,h1055,i1056,j1057,k1058);
} else {
var G__4194 = a1048;
var G__4195 = b1049;
var G__4196 = c1050;
var G__4197 = d1051;
var G__4198 = e1052;
var G__4199 = f1053;
var G__4200 = g1054;
var G__4201 = h1055;
var G__4202 = i1056;
var G__4203 = j1057;
var G__4204 = k1058;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__4194,G__4195,G__4196,G__4197,G__4198,G__4199,G__4200,G__4201,G__4202,G__4203,G__4204) : f.call(null,G__4194,G__4195,G__4196,G__4197,G__4198,G__4199,G__4200,G__4201,G__4202,G__4203,G__4204));
}
} else {
var l1059 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a1048,b1049,c1050,d1051,e1052,f1053,g1054,h1055,i1056,j1057,k1058,l1059);
} else {
var G__4205 = a1048;
var G__4206 = b1049;
var G__4207 = c1050;
var G__4208 = d1051;
var G__4209 = e1052;
var G__4210 = f1053;
var G__4211 = g1054;
var G__4212 = h1055;
var G__4213 = i1056;
var G__4214 = j1057;
var G__4215 = k1058;
var G__4216 = l1059;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__4205,G__4206,G__4207,G__4208,G__4209,G__4210,G__4211,G__4212,G__4213,G__4214,G__4215,G__4216) : f.call(null,G__4205,G__4206,G__4207,G__4208,G__4209,G__4210,G__4211,G__4212,G__4213,G__4214,G__4215,G__4216));
}
} else {
var m1060 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a1048,b1049,c1050,d1051,e1052,f1053,g1054,h1055,i1056,j1057,k1058,l1059,m1060);
} else {
var G__4217 = a1048;
var G__4218 = b1049;
var G__4219 = c1050;
var G__4220 = d1051;
var G__4221 = e1052;
var G__4222 = f1053;
var G__4223 = g1054;
var G__4224 = h1055;
var G__4225 = i1056;
var G__4226 = j1057;
var G__4227 = k1058;
var G__4228 = l1059;
var G__4229 = m1060;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__4217,G__4218,G__4219,G__4220,G__4221,G__4222,G__4223,G__4224,G__4225,G__4226,G__4227,G__4228,G__4229) : f.call(null,G__4217,G__4218,G__4219,G__4220,G__4221,G__4222,G__4223,G__4224,G__4225,G__4226,G__4227,G__4228,G__4229));
}
} else {
var n1061 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a1048,b1049,c1050,d1051,e1052,f1053,g1054,h1055,i1056,j1057,k1058,l1059,m1060,n1061);
} else {
var G__4230 = a1048;
var G__4231 = b1049;
var G__4232 = c1050;
var G__4233 = d1051;
var G__4234 = e1052;
var G__4235 = f1053;
var G__4236 = g1054;
var G__4237 = h1055;
var G__4238 = i1056;
var G__4239 = j1057;
var G__4240 = k1058;
var G__4241 = l1059;
var G__4242 = m1060;
var G__4243 = n1061;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__4230,G__4231,G__4232,G__4233,G__4234,G__4235,G__4236,G__4237,G__4238,G__4239,G__4240,G__4241,G__4242,G__4243) : f.call(null,G__4230,G__4231,G__4232,G__4233,G__4234,G__4235,G__4236,G__4237,G__4238,G__4239,G__4240,G__4241,G__4242,G__4243));
}
} else {
var o1062 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a1048,b1049,c1050,d1051,e1052,f1053,g1054,h1055,i1056,j1057,k1058,l1059,m1060,n1061,o1062);
} else {
var G__4244 = a1048;
var G__4245 = b1049;
var G__4246 = c1050;
var G__4247 = d1051;
var G__4248 = e1052;
var G__4249 = f1053;
var G__4250 = g1054;
var G__4251 = h1055;
var G__4252 = i1056;
var G__4253 = j1057;
var G__4254 = k1058;
var G__4255 = l1059;
var G__4256 = m1060;
var G__4257 = n1061;
var G__4258 = o1062;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__4244,G__4245,G__4246,G__4247,G__4248,G__4249,G__4250,G__4251,G__4252,G__4253,G__4254,G__4255,G__4256,G__4257,G__4258) : f.call(null,G__4244,G__4245,G__4246,G__4247,G__4248,G__4249,G__4250,G__4251,G__4252,G__4253,G__4254,G__4255,G__4256,G__4257,G__4258));
}
} else {
var p1063 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a1048,b1049,c1050,d1051,e1052,f1053,g1054,h1055,i1056,j1057,k1058,l1059,m1060,n1061,o1062,p1063);
} else {
var G__4259 = a1048;
var G__4260 = b1049;
var G__4261 = c1050;
var G__4262 = d1051;
var G__4263 = e1052;
var G__4264 = f1053;
var G__4265 = g1054;
var G__4266 = h1055;
var G__4267 = i1056;
var G__4268 = j1057;
var G__4269 = k1058;
var G__4270 = l1059;
var G__4271 = m1060;
var G__4272 = n1061;
var G__4273 = o1062;
var G__4274 = p1063;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__4259,G__4260,G__4261,G__4262,G__4263,G__4264,G__4265,G__4266,G__4267,G__4268,G__4269,G__4270,G__4271,G__4272,G__4273,G__4274) : f.call(null,G__4259,G__4260,G__4261,G__4262,G__4263,G__4264,G__4265,G__4266,G__4267,G__4268,G__4269,G__4270,G__4271,G__4272,G__4273,G__4274));
}
} else {
var q1064 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a1048,b1049,c1050,d1051,e1052,f1053,g1054,h1055,i1056,j1057,k1058,l1059,m1060,n1061,o1062,p1063,q1064);
} else {
var G__4275 = a1048;
var G__4276 = b1049;
var G__4277 = c1050;
var G__4278 = d1051;
var G__4279 = e1052;
var G__4280 = f1053;
var G__4281 = g1054;
var G__4282 = h1055;
var G__4283 = i1056;
var G__4284 = j1057;
var G__4285 = k1058;
var G__4286 = l1059;
var G__4287 = m1060;
var G__4288 = n1061;
var G__4289 = o1062;
var G__4290 = p1063;
var G__4291 = q1064;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__4275,G__4276,G__4277,G__4278,G__4279,G__4280,G__4281,G__4282,G__4283,G__4284,G__4285,G__4286,G__4287,G__4288,G__4289,G__4290,G__4291) : f.call(null,G__4275,G__4276,G__4277,G__4278,G__4279,G__4280,G__4281,G__4282,G__4283,G__4284,G__4285,G__4286,G__4287,G__4288,G__4289,G__4290,G__4291));
}
} else {
var r1065 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a1048,b1049,c1050,d1051,e1052,f1053,g1054,h1055,i1056,j1057,k1058,l1059,m1060,n1061,o1062,p1063,q1064,r1065);
} else {
var G__4292 = a1048;
var G__4293 = b1049;
var G__4294 = c1050;
var G__4295 = d1051;
var G__4296 = e1052;
var G__4297 = f1053;
var G__4298 = g1054;
var G__4299 = h1055;
var G__4300 = i1056;
var G__4301 = j1057;
var G__4302 = k1058;
var G__4303 = l1059;
var G__4304 = m1060;
var G__4305 = n1061;
var G__4306 = o1062;
var G__4307 = p1063;
var G__4308 = q1064;
var G__4309 = r1065;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__4292,G__4293,G__4294,G__4295,G__4296,G__4297,G__4298,G__4299,G__4300,G__4301,G__4302,G__4303,G__4304,G__4305,G__4306,G__4307,G__4308,G__4309) : f.call(null,G__4292,G__4293,G__4294,G__4295,G__4296,G__4297,G__4298,G__4299,G__4300,G__4301,G__4302,G__4303,G__4304,G__4305,G__4306,G__4307,G__4308,G__4309));
}
} else {
var s1066 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a1048,b1049,c1050,d1051,e1052,f1053,g1054,h1055,i1056,j1057,k1058,l1059,m1060,n1061,o1062,p1063,q1064,r1065,s1066);
} else {
var G__4310 = a1048;
var G__4311 = b1049;
var G__4312 = c1050;
var G__4313 = d1051;
var G__4314 = e1052;
var G__4315 = f1053;
var G__4316 = g1054;
var G__4317 = h1055;
var G__4318 = i1056;
var G__4319 = j1057;
var G__4320 = k1058;
var G__4321 = l1059;
var G__4322 = m1060;
var G__4323 = n1061;
var G__4324 = o1062;
var G__4325 = p1063;
var G__4326 = q1064;
var G__4327 = r1065;
var G__4328 = s1066;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__4310,G__4311,G__4312,G__4313,G__4314,G__4315,G__4316,G__4317,G__4318,G__4319,G__4320,G__4321,G__4322,G__4323,G__4324,G__4325,G__4326,G__4327,G__4328) : f.call(null,G__4310,G__4311,G__4312,G__4313,G__4314,G__4315,G__4316,G__4317,G__4318,G__4319,G__4320,G__4321,G__4322,G__4323,G__4324,G__4325,G__4326,G__4327,G__4328));
}
} else {
var t1067 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a1048,b1049,c1050,d1051,e1052,f1053,g1054,h1055,i1056,j1057,k1058,l1059,m1060,n1061,o1062,p1063,q1064,r1065,s1066,t1067);
} else {
var G__4329 = a1048;
var G__4330 = b1049;
var G__4331 = c1050;
var G__4332 = d1051;
var G__4333 = e1052;
var G__4334 = f1053;
var G__4335 = g1054;
var G__4336 = h1055;
var G__4337 = i1056;
var G__4338 = j1057;
var G__4339 = k1058;
var G__4340 = l1059;
var G__4341 = m1060;
var G__4342 = n1061;
var G__4343 = o1062;
var G__4344 = p1063;
var G__4345 = q1064;
var G__4346 = r1065;
var G__4347 = s1066;
var G__4348 = t1067;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__4329,G__4330,G__4331,G__4332,G__4333,G__4334,G__4335,G__4336,G__4337,G__4338,G__4339,G__4340,G__4341,G__4342,G__4343,G__4344,G__4345,G__4346,G__4347,G__4348) : f.call(null,G__4329,G__4330,G__4331,G__4332,G__4333,G__4334,G__4335,G__4336,G__4337,G__4338,G__4339,G__4340,G__4341,G__4342,G__4343,G__4344,G__4345,G__4346,G__4347,G__4348));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__4349__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__4349 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__4350__i = 0, G__4350__a = new Array(arguments.length -  5);
while (G__4350__i < G__4350__a.length) {G__4350__a[G__4350__i] = arguments[G__4350__i + 5]; ++G__4350__i;}
  args = new cljs.core.IndexedSeq(G__4350__a,0);
} 
return G__4349__delegate.call(this,f,a,b,c,d,args);};
G__4349.cljs$lang$maxFixedArity = 5;
G__4349.cljs$lang$applyTo = (function (arglist__4351){
var f = cljs.core.first(arglist__4351);
arglist__4351 = cljs.core.next(arglist__4351);
var a = cljs.core.first(arglist__4351);
arglist__4351 = cljs.core.next(arglist__4351);
var b = cljs.core.first(arglist__4351);
arglist__4351 = cljs.core.next(arglist__4351);
var c = cljs.core.first(arglist__4351);
arglist__4351 = cljs.core.next(arglist__4351);
var d = cljs.core.first(arglist__4351);
var args = cljs.core.rest(arglist__4351);
return G__4349__delegate(f,a,b,c,d,args);
});
G__4349.cljs$core$IFn$_invoke$arity$variadic = G__4349__delegate;
return G__4349;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__4352 = null;
if (arguments.length > 5) {
var G__4353__i = 0, G__4353__a = new Array(arguments.length -  5);
while (G__4353__i < G__4353__a.length) {G__4353__a[G__4353__i] = arguments[G__4353__i + 5]; ++G__4353__i;}
G__4352 = new cljs.core.IndexedSeq(G__4353__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__4352);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__4369 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4369) : f.call(null,G__4369));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__4370 = cljs.core.meta(obj);
var G__4371 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4370,G__4371) : f.call(null,G__4370,G__4371));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__4372 = cljs.core.meta(obj);
var G__4373 = a;
var G__4374 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4372,G__4373,G__4374) : f.call(null,G__4372,G__4373,G__4374));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__4375 = cljs.core.meta(obj);
var G__4376 = a;
var G__4377 = b;
var G__4378 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__4375,G__4376,G__4377,G__4378) : f.call(null,G__4375,G__4376,G__4377,G__4378));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__4379 = cljs.core.meta(obj);
var G__4380 = a;
var G__4381 = b;
var G__4382 = c;
var G__4383 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__4379,G__4380,G__4381,G__4382,G__4383) : f.call(null,G__4379,G__4380,G__4381,G__4382,G__4383));
})());
});
var vary_meta__7 = (function() { 
var G__4384__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__4384 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__4385__i = 0, G__4385__a = new Array(arguments.length -  6);
while (G__4385__i < G__4385__a.length) {G__4385__a[G__4385__i] = arguments[G__4385__i + 6]; ++G__4385__i;}
  args = new cljs.core.IndexedSeq(G__4385__a,0);
} 
return G__4384__delegate.call(this,obj,f,a,b,c,d,args);};
G__4384.cljs$lang$maxFixedArity = 6;
G__4384.cljs$lang$applyTo = (function (arglist__4386){
var obj = cljs.core.first(arglist__4386);
arglist__4386 = cljs.core.next(arglist__4386);
var f = cljs.core.first(arglist__4386);
arglist__4386 = cljs.core.next(arglist__4386);
var a = cljs.core.first(arglist__4386);
arglist__4386 = cljs.core.next(arglist__4386);
var b = cljs.core.first(arglist__4386);
arglist__4386 = cljs.core.next(arglist__4386);
var c = cljs.core.first(arglist__4386);
arglist__4386 = cljs.core.next(arglist__4386);
var d = cljs.core.first(arglist__4386);
var args = cljs.core.rest(arglist__4386);
return G__4384__delegate(obj,f,a,b,c,d,args);
});
G__4384.cljs$core$IFn$_invoke$arity$variadic = G__4384__delegate;
return G__4384;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__4387 = null;
if (arguments.length > 6) {
var G__4388__i = 0, G__4388__a = new Array(arguments.length -  6);
while (G__4388__i < G__4388__a.length) {G__4388__a[G__4388__i] = arguments[G__4388__i + 6]; ++G__4388__i;}
G__4387 = new cljs.core.IndexedSeq(G__4388__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__4387);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__4389__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__4389 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__4390__i = 0, G__4390__a = new Array(arguments.length -  2);
while (G__4390__i < G__4390__a.length) {G__4390__a[G__4390__i] = arguments[G__4390__i + 2]; ++G__4390__i;}
  more = new cljs.core.IndexedSeq(G__4390__a,0);
} 
return G__4389__delegate.call(this,x,y,more);};
G__4389.cljs$lang$maxFixedArity = 2;
G__4389.cljs$lang$applyTo = (function (arglist__4391){
var x = cljs.core.first(arglist__4391);
arglist__4391 = cljs.core.next(arglist__4391);
var y = cljs.core.first(arglist__4391);
var more = cljs.core.rest(arglist__4391);
return G__4389__delegate(x,y,more);
});
G__4389.cljs$core$IFn$_invoke$arity$variadic = G__4389__delegate;
return G__4389;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__4392 = null;
if (arguments.length > 2) {
var G__4393__i = 0, G__4393__a = new Array(arguments.length -  2);
while (G__4393__i < G__4393__a.length) {G__4393__a[G__4393__i] = arguments[G__4393__i + 2]; ++G__4393__i;}
G__4392 = new cljs.core.IndexedSeq(G__4393__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__4392);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t4397 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t4397 = (function (nil_iter,meta4398){
this.nil_iter = nil_iter;
this.meta4398 = meta4398;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t4397.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t4397.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t4397.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t4397.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_4399){
var self__ = this;
var _4399__$1 = this;
return self__.meta4398;
});

cljs.core.t4397.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_4399,meta4398__$1){
var self__ = this;
var _4399__$1 = this;
return (new cljs.core.t4397(self__.nil_iter,meta4398__$1));
});

cljs.core.t4397.cljs$lang$type = true;

cljs.core.t4397.cljs$lang$ctorStr = "cljs.core/t4397";

cljs.core.t4397.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/t4397");
});

cljs.core.__GT_t4397 = (function __GT_t4397(nil_iter__$1,meta4398){
return (new cljs.core.t4397(nil_iter__$1,meta4398));
});

}

return (new cljs.core.t4397(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3081__auto__ = !((lt.stepper == null));
if(and__3081__auto__){
return self__.iter.hasNext();
} else {
return and__3081__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__4400 = lt;
var G__4401 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__4400,G__4401) : self__.xform.call(null,G__4400,G__4401));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__4402 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__4402) : self__.xform.call(null,G__4402));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__4404 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__4404) : xform.call(null,G__4404));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__4406 = cljs.core.next(iters__$1);
iters__$1 = G__4406;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__3508__auto___4407 = self__.iters.length;
var i_4408 = (0);
while(true){
if((i_4408 < n__3508__auto___4407)){
(self__.nexts[i_4408] = (self__.iters[i_4408]).next());

var G__4409 = (i_4408 + (1));
i_4408 = G__4409;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3081__auto__ = !((lt.stepper == null));
if(and__3081__auto__){
return this$.hasNext();
} else {
return and__3081__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__4405 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__4405) : self__.xform.call(null,G__4405));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__4414 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__4414) : xform.call(null,G__4414));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__4415_4419 = cljs.core.seq(colls);
var chunk__4416_4420 = null;
var count__4417_4421 = (0);
var i__4418_4422 = (0);
while(true){
if((i__4418_4422 < count__4417_4421)){
var coll_4423 = chunk__4416_4420.cljs$core$IIndexed$_nth$arity$2(null,i__4418_4422);
iters.push(cljs.core.iter(coll_4423));

var G__4424 = seq__4415_4419;
var G__4425 = chunk__4416_4420;
var G__4426 = count__4417_4421;
var G__4427 = (i__4418_4422 + (1));
seq__4415_4419 = G__4424;
chunk__4416_4420 = G__4425;
count__4417_4421 = G__4426;
i__4418_4422 = G__4427;
continue;
} else {
var temp__4126__auto___4428 = cljs.core.seq(seq__4415_4419);
if(temp__4126__auto___4428){
var seq__4415_4429__$1 = temp__4126__auto___4428;
if(cljs.core.chunked_seq_QMARK_(seq__4415_4429__$1)){
var c__3456__auto___4430 = cljs.core.chunk_first(seq__4415_4429__$1);
var G__4431 = cljs.core.chunk_rest(seq__4415_4429__$1);
var G__4432 = c__3456__auto___4430;
var G__4433 = cljs.core.count(c__3456__auto___4430);
var G__4434 = (0);
seq__4415_4419 = G__4431;
chunk__4416_4420 = G__4432;
count__4417_4421 = G__4433;
i__4418_4422 = G__4434;
continue;
} else {
var coll_4435 = cljs.core.first(seq__4415_4429__$1);
iters.push(cljs.core.iter(coll_4435));

var G__4436 = cljs.core.next(seq__4415_4429__$1);
var G__4437 = null;
var G__4438 = (0);
var G__4439 = (0);
seq__4415_4419 = G__4436;
chunk__4416_4420 = G__4437;
count__4417_4421 = G__4438;
i__4418_4422 = G__4439;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3089__auto__ = cljs.core.seq(coll);
if(or__3089__auto__){
return or__3089__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__4440__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__4440 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__4441__i = 0, G__4441__a = new Array(arguments.length -  2);
while (G__4441__i < G__4441__a.length) {G__4441__a[G__4441__i] = arguments[G__4441__i + 2]; ++G__4441__i;}
  colls = new cljs.core.IndexedSeq(G__4441__a,0);
} 
return G__4440__delegate.call(this,xform,coll,colls);};
G__4440.cljs$lang$maxFixedArity = 2;
G__4440.cljs$lang$applyTo = (function (arglist__4442){
var xform = cljs.core.first(arglist__4442);
arglist__4442 = cljs.core.next(arglist__4442);
var coll = cljs.core.first(arglist__4442);
var colls = cljs.core.rest(arglist__4442);
return G__4440__delegate(xform,coll,colls);
});
G__4440.cljs$core$IFn$_invoke$arity$variadic = G__4440__delegate;
return G__4440;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__4443 = null;
if (arguments.length > 2) {
var G__4444__i = 0, G__4444__a = new Array(arguments.length -  2);
while (G__4444__i < G__4444__a.length) {G__4444__a[G__4444__i] = arguments[G__4444__i + 2]; ++G__4444__i;}
G__4443 = new cljs.core.IndexedSeq(G__4444__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__4443);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__4446 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__4446) : pred.call(null,G__4446));
})())){
var G__4447 = pred;
var G__4448 = cljs.core.next(coll);
pred = G__4447;
coll = G__4448;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3089__auto__ = (function (){var G__4452 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__4452) : pred.call(null,G__4452));
})();
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
var G__4453 = pred;
var G__4454 = cljs.core.next(coll);
pred = G__4453;
coll = G__4454;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__4461 = null;
var G__4461__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__4461__1 = (function (x){
return cljs.core.not((function (){var G__4458 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4458) : f.call(null,G__4458));
})());
});
var G__4461__2 = (function (x,y){
return cljs.core.not((function (){var G__4459 = x;
var G__4460 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4459,G__4460) : f.call(null,G__4459,G__4460));
})());
});
var G__4461__3 = (function() { 
var G__4462__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__4462 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__4463__i = 0, G__4463__a = new Array(arguments.length -  2);
while (G__4463__i < G__4463__a.length) {G__4463__a[G__4463__i] = arguments[G__4463__i + 2]; ++G__4463__i;}
  zs = new cljs.core.IndexedSeq(G__4463__a,0);
} 
return G__4462__delegate.call(this,x,y,zs);};
G__4462.cljs$lang$maxFixedArity = 2;
G__4462.cljs$lang$applyTo = (function (arglist__4464){
var x = cljs.core.first(arglist__4464);
arglist__4464 = cljs.core.next(arglist__4464);
var y = cljs.core.first(arglist__4464);
var zs = cljs.core.rest(arglist__4464);
return G__4462__delegate(x,y,zs);
});
G__4462.cljs$core$IFn$_invoke$arity$variadic = G__4462__delegate;
return G__4462;
})()
;
G__4461 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__4461__0.call(this);
case 1:
return G__4461__1.call(this,x);
case 2:
return G__4461__2.call(this,x,y);
default:
var G__4465 = null;
if (arguments.length > 2) {
var G__4466__i = 0, G__4466__a = new Array(arguments.length -  2);
while (G__4466__i < G__4466__a.length) {G__4466__a[G__4466__i] = arguments[G__4466__i + 2]; ++G__4466__i;}
G__4465 = new cljs.core.IndexedSeq(G__4466__a,0);
}
return G__4461__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__4465);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4461.cljs$lang$maxFixedArity = 2;
G__4461.cljs$lang$applyTo = G__4461__3.cljs$lang$applyTo;
G__4461.cljs$core$IFn$_invoke$arity$0 = G__4461__0;
G__4461.cljs$core$IFn$_invoke$arity$1 = G__4461__1;
G__4461.cljs$core$IFn$_invoke$arity$2 = G__4461__2;
G__4461.cljs$core$IFn$_invoke$arity$variadic = G__4461__3.cljs$core$IFn$_invoke$arity$variadic;
return G__4461;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__4467__delegate = function (args){
return x;
};
var G__4467 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__4468__i = 0, G__4468__a = new Array(arguments.length -  0);
while (G__4468__i < G__4468__a.length) {G__4468__a[G__4468__i] = arguments[G__4468__i + 0]; ++G__4468__i;}
  args = new cljs.core.IndexedSeq(G__4468__a,0);
} 
return G__4467__delegate.call(this,args);};
G__4467.cljs$lang$maxFixedArity = 0;
G__4467.cljs$lang$applyTo = (function (arglist__4469){
var args = cljs.core.seq(arglist__4469);
return G__4467__delegate(args);
});
G__4467.cljs$core$IFn$_invoke$arity$variadic = G__4467__delegate;
return G__4467;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__4524 = null;
var G__4524__0 = (function (){
var G__4497 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4497) : f.call(null,G__4497));
});
var G__4524__1 = (function (x){
var G__4498 = (function (){var G__4499 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__4499) : g.call(null,G__4499));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4498) : f.call(null,G__4498));
});
var G__4524__2 = (function (x,y){
var G__4500 = (function (){var G__4501 = x;
var G__4502 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__4501,G__4502) : g.call(null,G__4501,G__4502));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4500) : f.call(null,G__4500));
});
var G__4524__3 = (function (x,y,z){
var G__4503 = (function (){var G__4504 = x;
var G__4505 = y;
var G__4506 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__4504,G__4505,G__4506) : g.call(null,G__4504,G__4505,G__4506));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4503) : f.call(null,G__4503));
});
var G__4524__4 = (function() { 
var G__4525__delegate = function (x,y,z,args){
var G__4507 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4507) : f.call(null,G__4507));
};
var G__4525 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__4526__i = 0, G__4526__a = new Array(arguments.length -  3);
while (G__4526__i < G__4526__a.length) {G__4526__a[G__4526__i] = arguments[G__4526__i + 3]; ++G__4526__i;}
  args = new cljs.core.IndexedSeq(G__4526__a,0);
} 
return G__4525__delegate.call(this,x,y,z,args);};
G__4525.cljs$lang$maxFixedArity = 3;
G__4525.cljs$lang$applyTo = (function (arglist__4527){
var x = cljs.core.first(arglist__4527);
arglist__4527 = cljs.core.next(arglist__4527);
var y = cljs.core.first(arglist__4527);
arglist__4527 = cljs.core.next(arglist__4527);
var z = cljs.core.first(arglist__4527);
var args = cljs.core.rest(arglist__4527);
return G__4525__delegate(x,y,z,args);
});
G__4525.cljs$core$IFn$_invoke$arity$variadic = G__4525__delegate;
return G__4525;
})()
;
G__4524 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__4524__0.call(this);
case 1:
return G__4524__1.call(this,x);
case 2:
return G__4524__2.call(this,x,y);
case 3:
return G__4524__3.call(this,x,y,z);
default:
var G__4528 = null;
if (arguments.length > 3) {
var G__4529__i = 0, G__4529__a = new Array(arguments.length -  3);
while (G__4529__i < G__4529__a.length) {G__4529__a[G__4529__i] = arguments[G__4529__i + 3]; ++G__4529__i;}
G__4528 = new cljs.core.IndexedSeq(G__4529__a,0);
}
return G__4524__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__4528);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4524.cljs$lang$maxFixedArity = 3;
G__4524.cljs$lang$applyTo = G__4524__4.cljs$lang$applyTo;
G__4524.cljs$core$IFn$_invoke$arity$0 = G__4524__0;
G__4524.cljs$core$IFn$_invoke$arity$1 = G__4524__1;
G__4524.cljs$core$IFn$_invoke$arity$2 = G__4524__2;
G__4524.cljs$core$IFn$_invoke$arity$3 = G__4524__3;
G__4524.cljs$core$IFn$_invoke$arity$variadic = G__4524__4.cljs$core$IFn$_invoke$arity$variadic;
return G__4524;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__4530 = null;
var G__4530__0 = (function (){
var G__4508 = (function (){var G__4509 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__4509) : g.call(null,G__4509));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4508) : f.call(null,G__4508));
});
var G__4530__1 = (function (x){
var G__4510 = (function (){var G__4511 = (function (){var G__4512 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__4512) : h.call(null,G__4512));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__4511) : g.call(null,G__4511));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4510) : f.call(null,G__4510));
});
var G__4530__2 = (function (x,y){
var G__4513 = (function (){var G__4514 = (function (){var G__4515 = x;
var G__4516 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__4515,G__4516) : h.call(null,G__4515,G__4516));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__4514) : g.call(null,G__4514));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4513) : f.call(null,G__4513));
});
var G__4530__3 = (function (x,y,z){
var G__4517 = (function (){var G__4518 = (function (){var G__4519 = x;
var G__4520 = y;
var G__4521 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__4519,G__4520,G__4521) : h.call(null,G__4519,G__4520,G__4521));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__4518) : g.call(null,G__4518));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4517) : f.call(null,G__4517));
});
var G__4530__4 = (function() { 
var G__4531__delegate = function (x,y,z,args){
var G__4522 = (function (){var G__4523 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__4523) : g.call(null,G__4523));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4522) : f.call(null,G__4522));
};
var G__4531 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__4532__i = 0, G__4532__a = new Array(arguments.length -  3);
while (G__4532__i < G__4532__a.length) {G__4532__a[G__4532__i] = arguments[G__4532__i + 3]; ++G__4532__i;}
  args = new cljs.core.IndexedSeq(G__4532__a,0);
} 
return G__4531__delegate.call(this,x,y,z,args);};
G__4531.cljs$lang$maxFixedArity = 3;
G__4531.cljs$lang$applyTo = (function (arglist__4533){
var x = cljs.core.first(arglist__4533);
arglist__4533 = cljs.core.next(arglist__4533);
var y = cljs.core.first(arglist__4533);
arglist__4533 = cljs.core.next(arglist__4533);
var z = cljs.core.first(arglist__4533);
var args = cljs.core.rest(arglist__4533);
return G__4531__delegate(x,y,z,args);
});
G__4531.cljs$core$IFn$_invoke$arity$variadic = G__4531__delegate;
return G__4531;
})()
;
G__4530 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__4530__0.call(this);
case 1:
return G__4530__1.call(this,x);
case 2:
return G__4530__2.call(this,x,y);
case 3:
return G__4530__3.call(this,x,y,z);
default:
var G__4534 = null;
if (arguments.length > 3) {
var G__4535__i = 0, G__4535__a = new Array(arguments.length -  3);
while (G__4535__i < G__4535__a.length) {G__4535__a[G__4535__i] = arguments[G__4535__i + 3]; ++G__4535__i;}
G__4534 = new cljs.core.IndexedSeq(G__4535__a,0);
}
return G__4530__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__4534);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4530.cljs$lang$maxFixedArity = 3;
G__4530.cljs$lang$applyTo = G__4530__4.cljs$lang$applyTo;
G__4530.cljs$core$IFn$_invoke$arity$0 = G__4530__0;
G__4530.cljs$core$IFn$_invoke$arity$1 = G__4530__1;
G__4530.cljs$core$IFn$_invoke$arity$2 = G__4530__2;
G__4530.cljs$core$IFn$_invoke$arity$3 = G__4530__3;
G__4530.cljs$core$IFn$_invoke$arity$variadic = G__4530__4.cljs$core$IFn$_invoke$arity$variadic;
return G__4530;
})()
});
var comp__4 = (function() { 
var G__4536__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__4537__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__4538 = cljs.core.first(fs__$2).call(null,ret);
var G__4539 = cljs.core.next(fs__$2);
ret = G__4538;
fs__$2 = G__4539;
continue;
} else {
return ret;
}
break;
}
};
var G__4537 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__4540__i = 0, G__4540__a = new Array(arguments.length -  0);
while (G__4540__i < G__4540__a.length) {G__4540__a[G__4540__i] = arguments[G__4540__i + 0]; ++G__4540__i;}
  args = new cljs.core.IndexedSeq(G__4540__a,0);
} 
return G__4537__delegate.call(this,args);};
G__4537.cljs$lang$maxFixedArity = 0;
G__4537.cljs$lang$applyTo = (function (arglist__4541){
var args = cljs.core.seq(arglist__4541);
return G__4537__delegate(args);
});
G__4537.cljs$core$IFn$_invoke$arity$variadic = G__4537__delegate;
return G__4537;
})()
;
;})(fs__$1))
};
var G__4536 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__4542__i = 0, G__4542__a = new Array(arguments.length -  3);
while (G__4542__i < G__4542__a.length) {G__4542__a[G__4542__i] = arguments[G__4542__i + 3]; ++G__4542__i;}
  fs = new cljs.core.IndexedSeq(G__4542__a,0);
} 
return G__4536__delegate.call(this,f1,f2,f3,fs);};
G__4536.cljs$lang$maxFixedArity = 3;
G__4536.cljs$lang$applyTo = (function (arglist__4543){
var f1 = cljs.core.first(arglist__4543);
arglist__4543 = cljs.core.next(arglist__4543);
var f2 = cljs.core.first(arglist__4543);
arglist__4543 = cljs.core.next(arglist__4543);
var f3 = cljs.core.first(arglist__4543);
var fs = cljs.core.rest(arglist__4543);
return G__4536__delegate(f1,f2,f3,fs);
});
G__4536.cljs$core$IFn$_invoke$arity$variadic = G__4536__delegate;
return G__4536;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__4544 = null;
if (arguments.length > 3) {
var G__4545__i = 0, G__4545__a = new Array(arguments.length -  3);
while (G__4545__i < G__4545__a.length) {G__4545__a[G__4545__i] = arguments[G__4545__i + 3]; ++G__4545__i;}
G__4544 = new cljs.core.IndexedSeq(G__4545__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__4544);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__4630 = null;
var G__4630__0 = (function (){
var G__4588 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4588) : f.call(null,G__4588));
});
var G__4630__1 = (function (x){
var G__4589 = arg1;
var G__4590 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4589,G__4590) : f.call(null,G__4589,G__4590));
});
var G__4630__2 = (function (x,y){
var G__4591 = arg1;
var G__4592 = x;
var G__4593 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4591,G__4592,G__4593) : f.call(null,G__4591,G__4592,G__4593));
});
var G__4630__3 = (function (x,y,z){
var G__4594 = arg1;
var G__4595 = x;
var G__4596 = y;
var G__4597 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__4594,G__4595,G__4596,G__4597) : f.call(null,G__4594,G__4595,G__4596,G__4597));
});
var G__4630__4 = (function() { 
var G__4631__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__4631 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__4632__i = 0, G__4632__a = new Array(arguments.length -  3);
while (G__4632__i < G__4632__a.length) {G__4632__a[G__4632__i] = arguments[G__4632__i + 3]; ++G__4632__i;}
  args = new cljs.core.IndexedSeq(G__4632__a,0);
} 
return G__4631__delegate.call(this,x,y,z,args);};
G__4631.cljs$lang$maxFixedArity = 3;
G__4631.cljs$lang$applyTo = (function (arglist__4633){
var x = cljs.core.first(arglist__4633);
arglist__4633 = cljs.core.next(arglist__4633);
var y = cljs.core.first(arglist__4633);
arglist__4633 = cljs.core.next(arglist__4633);
var z = cljs.core.first(arglist__4633);
var args = cljs.core.rest(arglist__4633);
return G__4631__delegate(x,y,z,args);
});
G__4631.cljs$core$IFn$_invoke$arity$variadic = G__4631__delegate;
return G__4631;
})()
;
G__4630 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__4630__0.call(this);
case 1:
return G__4630__1.call(this,x);
case 2:
return G__4630__2.call(this,x,y);
case 3:
return G__4630__3.call(this,x,y,z);
default:
var G__4634 = null;
if (arguments.length > 3) {
var G__4635__i = 0, G__4635__a = new Array(arguments.length -  3);
while (G__4635__i < G__4635__a.length) {G__4635__a[G__4635__i] = arguments[G__4635__i + 3]; ++G__4635__i;}
G__4634 = new cljs.core.IndexedSeq(G__4635__a,0);
}
return G__4630__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__4634);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4630.cljs$lang$maxFixedArity = 3;
G__4630.cljs$lang$applyTo = G__4630__4.cljs$lang$applyTo;
G__4630.cljs$core$IFn$_invoke$arity$0 = G__4630__0;
G__4630.cljs$core$IFn$_invoke$arity$1 = G__4630__1;
G__4630.cljs$core$IFn$_invoke$arity$2 = G__4630__2;
G__4630.cljs$core$IFn$_invoke$arity$3 = G__4630__3;
G__4630.cljs$core$IFn$_invoke$arity$variadic = G__4630__4.cljs$core$IFn$_invoke$arity$variadic;
return G__4630;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__4636 = null;
var G__4636__0 = (function (){
var G__4598 = arg1;
var G__4599 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4598,G__4599) : f.call(null,G__4598,G__4599));
});
var G__4636__1 = (function (x){
var G__4600 = arg1;
var G__4601 = arg2;
var G__4602 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4600,G__4601,G__4602) : f.call(null,G__4600,G__4601,G__4602));
});
var G__4636__2 = (function (x,y){
var G__4603 = arg1;
var G__4604 = arg2;
var G__4605 = x;
var G__4606 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__4603,G__4604,G__4605,G__4606) : f.call(null,G__4603,G__4604,G__4605,G__4606));
});
var G__4636__3 = (function (x,y,z){
var G__4607 = arg1;
var G__4608 = arg2;
var G__4609 = x;
var G__4610 = y;
var G__4611 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__4607,G__4608,G__4609,G__4610,G__4611) : f.call(null,G__4607,G__4608,G__4609,G__4610,G__4611));
});
var G__4636__4 = (function() { 
var G__4637__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__4637 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__4638__i = 0, G__4638__a = new Array(arguments.length -  3);
while (G__4638__i < G__4638__a.length) {G__4638__a[G__4638__i] = arguments[G__4638__i + 3]; ++G__4638__i;}
  args = new cljs.core.IndexedSeq(G__4638__a,0);
} 
return G__4637__delegate.call(this,x,y,z,args);};
G__4637.cljs$lang$maxFixedArity = 3;
G__4637.cljs$lang$applyTo = (function (arglist__4639){
var x = cljs.core.first(arglist__4639);
arglist__4639 = cljs.core.next(arglist__4639);
var y = cljs.core.first(arglist__4639);
arglist__4639 = cljs.core.next(arglist__4639);
var z = cljs.core.first(arglist__4639);
var args = cljs.core.rest(arglist__4639);
return G__4637__delegate(x,y,z,args);
});
G__4637.cljs$core$IFn$_invoke$arity$variadic = G__4637__delegate;
return G__4637;
})()
;
G__4636 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__4636__0.call(this);
case 1:
return G__4636__1.call(this,x);
case 2:
return G__4636__2.call(this,x,y);
case 3:
return G__4636__3.call(this,x,y,z);
default:
var G__4640 = null;
if (arguments.length > 3) {
var G__4641__i = 0, G__4641__a = new Array(arguments.length -  3);
while (G__4641__i < G__4641__a.length) {G__4641__a[G__4641__i] = arguments[G__4641__i + 3]; ++G__4641__i;}
G__4640 = new cljs.core.IndexedSeq(G__4641__a,0);
}
return G__4636__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__4640);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4636.cljs$lang$maxFixedArity = 3;
G__4636.cljs$lang$applyTo = G__4636__4.cljs$lang$applyTo;
G__4636.cljs$core$IFn$_invoke$arity$0 = G__4636__0;
G__4636.cljs$core$IFn$_invoke$arity$1 = G__4636__1;
G__4636.cljs$core$IFn$_invoke$arity$2 = G__4636__2;
G__4636.cljs$core$IFn$_invoke$arity$3 = G__4636__3;
G__4636.cljs$core$IFn$_invoke$arity$variadic = G__4636__4.cljs$core$IFn$_invoke$arity$variadic;
return G__4636;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__4642 = null;
var G__4642__0 = (function (){
var G__4612 = arg1;
var G__4613 = arg2;
var G__4614 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4612,G__4613,G__4614) : f.call(null,G__4612,G__4613,G__4614));
});
var G__4642__1 = (function (x){
var G__4615 = arg1;
var G__4616 = arg2;
var G__4617 = arg3;
var G__4618 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__4615,G__4616,G__4617,G__4618) : f.call(null,G__4615,G__4616,G__4617,G__4618));
});
var G__4642__2 = (function (x,y){
var G__4619 = arg1;
var G__4620 = arg2;
var G__4621 = arg3;
var G__4622 = x;
var G__4623 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__4619,G__4620,G__4621,G__4622,G__4623) : f.call(null,G__4619,G__4620,G__4621,G__4622,G__4623));
});
var G__4642__3 = (function (x,y,z){
var G__4624 = arg1;
var G__4625 = arg2;
var G__4626 = arg3;
var G__4627 = x;
var G__4628 = y;
var G__4629 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__4624,G__4625,G__4626,G__4627,G__4628,G__4629) : f.call(null,G__4624,G__4625,G__4626,G__4627,G__4628,G__4629));
});
var G__4642__4 = (function() { 
var G__4643__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__4643 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__4644__i = 0, G__4644__a = new Array(arguments.length -  3);
while (G__4644__i < G__4644__a.length) {G__4644__a[G__4644__i] = arguments[G__4644__i + 3]; ++G__4644__i;}
  args = new cljs.core.IndexedSeq(G__4644__a,0);
} 
return G__4643__delegate.call(this,x,y,z,args);};
G__4643.cljs$lang$maxFixedArity = 3;
G__4643.cljs$lang$applyTo = (function (arglist__4645){
var x = cljs.core.first(arglist__4645);
arglist__4645 = cljs.core.next(arglist__4645);
var y = cljs.core.first(arglist__4645);
arglist__4645 = cljs.core.next(arglist__4645);
var z = cljs.core.first(arglist__4645);
var args = cljs.core.rest(arglist__4645);
return G__4643__delegate(x,y,z,args);
});
G__4643.cljs$core$IFn$_invoke$arity$variadic = G__4643__delegate;
return G__4643;
})()
;
G__4642 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__4642__0.call(this);
case 1:
return G__4642__1.call(this,x);
case 2:
return G__4642__2.call(this,x,y);
case 3:
return G__4642__3.call(this,x,y,z);
default:
var G__4646 = null;
if (arguments.length > 3) {
var G__4647__i = 0, G__4647__a = new Array(arguments.length -  3);
while (G__4647__i < G__4647__a.length) {G__4647__a[G__4647__i] = arguments[G__4647__i + 3]; ++G__4647__i;}
G__4646 = new cljs.core.IndexedSeq(G__4647__a,0);
}
return G__4642__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__4646);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4642.cljs$lang$maxFixedArity = 3;
G__4642.cljs$lang$applyTo = G__4642__4.cljs$lang$applyTo;
G__4642.cljs$core$IFn$_invoke$arity$0 = G__4642__0;
G__4642.cljs$core$IFn$_invoke$arity$1 = G__4642__1;
G__4642.cljs$core$IFn$_invoke$arity$2 = G__4642__2;
G__4642.cljs$core$IFn$_invoke$arity$3 = G__4642__3;
G__4642.cljs$core$IFn$_invoke$arity$variadic = G__4642__4.cljs$core$IFn$_invoke$arity$variadic;
return G__4642;
})()
});
var partial__5 = (function() { 
var G__4648__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__4649__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__4649 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__4650__i = 0, G__4650__a = new Array(arguments.length -  0);
while (G__4650__i < G__4650__a.length) {G__4650__a[G__4650__i] = arguments[G__4650__i + 0]; ++G__4650__i;}
  args = new cljs.core.IndexedSeq(G__4650__a,0);
} 
return G__4649__delegate.call(this,args);};
G__4649.cljs$lang$maxFixedArity = 0;
G__4649.cljs$lang$applyTo = (function (arglist__4651){
var args = cljs.core.seq(arglist__4651);
return G__4649__delegate(args);
});
G__4649.cljs$core$IFn$_invoke$arity$variadic = G__4649__delegate;
return G__4649;
})()
;
};
var G__4648 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__4652__i = 0, G__4652__a = new Array(arguments.length -  4);
while (G__4652__i < G__4652__a.length) {G__4652__a[G__4652__i] = arguments[G__4652__i + 4]; ++G__4652__i;}
  more = new cljs.core.IndexedSeq(G__4652__a,0);
} 
return G__4648__delegate.call(this,f,arg1,arg2,arg3,more);};
G__4648.cljs$lang$maxFixedArity = 4;
G__4648.cljs$lang$applyTo = (function (arglist__4653){
var f = cljs.core.first(arglist__4653);
arglist__4653 = cljs.core.next(arglist__4653);
var arg1 = cljs.core.first(arglist__4653);
arglist__4653 = cljs.core.next(arglist__4653);
var arg2 = cljs.core.first(arglist__4653);
arglist__4653 = cljs.core.next(arglist__4653);
var arg3 = cljs.core.first(arglist__4653);
var more = cljs.core.rest(arglist__4653);
return G__4648__delegate(f,arg1,arg2,arg3,more);
});
G__4648.cljs$core$IFn$_invoke$arity$variadic = G__4648__delegate;
return G__4648;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__4654 = null;
if (arguments.length > 4) {
var G__4655__i = 0, G__4655__a = new Array(arguments.length -  4);
while (G__4655__i < G__4655__a.length) {G__4655__a[G__4655__i] = arguments[G__4655__i + 4]; ++G__4655__i;}
G__4654 = new cljs.core.IndexedSeq(G__4655__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__4654);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__4688 = null;
var G__4688__1 = (function (a){
var G__4672 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4672) : f.call(null,G__4672));
});
var G__4688__2 = (function (a,b){
var G__4673 = (((a == null))?x:a);
var G__4674 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4673,G__4674) : f.call(null,G__4673,G__4674));
});
var G__4688__3 = (function (a,b,c){
var G__4675 = (((a == null))?x:a);
var G__4676 = b;
var G__4677 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4675,G__4676,G__4677) : f.call(null,G__4675,G__4676,G__4677));
});
var G__4688__4 = (function() { 
var G__4689__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__4689 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__4690__i = 0, G__4690__a = new Array(arguments.length -  3);
while (G__4690__i < G__4690__a.length) {G__4690__a[G__4690__i] = arguments[G__4690__i + 3]; ++G__4690__i;}
  ds = new cljs.core.IndexedSeq(G__4690__a,0);
} 
return G__4689__delegate.call(this,a,b,c,ds);};
G__4689.cljs$lang$maxFixedArity = 3;
G__4689.cljs$lang$applyTo = (function (arglist__4691){
var a = cljs.core.first(arglist__4691);
arglist__4691 = cljs.core.next(arglist__4691);
var b = cljs.core.first(arglist__4691);
arglist__4691 = cljs.core.next(arglist__4691);
var c = cljs.core.first(arglist__4691);
var ds = cljs.core.rest(arglist__4691);
return G__4689__delegate(a,b,c,ds);
});
G__4689.cljs$core$IFn$_invoke$arity$variadic = G__4689__delegate;
return G__4689;
})()
;
G__4688 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__4688__1.call(this,a);
case 2:
return G__4688__2.call(this,a,b);
case 3:
return G__4688__3.call(this,a,b,c);
default:
var G__4692 = null;
if (arguments.length > 3) {
var G__4693__i = 0, G__4693__a = new Array(arguments.length -  3);
while (G__4693__i < G__4693__a.length) {G__4693__a[G__4693__i] = arguments[G__4693__i + 3]; ++G__4693__i;}
G__4692 = new cljs.core.IndexedSeq(G__4693__a,0);
}
return G__4688__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__4692);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4688.cljs$lang$maxFixedArity = 3;
G__4688.cljs$lang$applyTo = G__4688__4.cljs$lang$applyTo;
G__4688.cljs$core$IFn$_invoke$arity$1 = G__4688__1;
G__4688.cljs$core$IFn$_invoke$arity$2 = G__4688__2;
G__4688.cljs$core$IFn$_invoke$arity$3 = G__4688__3;
G__4688.cljs$core$IFn$_invoke$arity$variadic = G__4688__4.cljs$core$IFn$_invoke$arity$variadic;
return G__4688;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__4694 = null;
var G__4694__2 = (function (a,b){
var G__4678 = (((a == null))?x:a);
var G__4679 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4678,G__4679) : f.call(null,G__4678,G__4679));
});
var G__4694__3 = (function (a,b,c){
var G__4680 = (((a == null))?x:a);
var G__4681 = (((b == null))?y:b);
var G__4682 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4680,G__4681,G__4682) : f.call(null,G__4680,G__4681,G__4682));
});
var G__4694__4 = (function() { 
var G__4695__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__4695 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__4696__i = 0, G__4696__a = new Array(arguments.length -  3);
while (G__4696__i < G__4696__a.length) {G__4696__a[G__4696__i] = arguments[G__4696__i + 3]; ++G__4696__i;}
  ds = new cljs.core.IndexedSeq(G__4696__a,0);
} 
return G__4695__delegate.call(this,a,b,c,ds);};
G__4695.cljs$lang$maxFixedArity = 3;
G__4695.cljs$lang$applyTo = (function (arglist__4697){
var a = cljs.core.first(arglist__4697);
arglist__4697 = cljs.core.next(arglist__4697);
var b = cljs.core.first(arglist__4697);
arglist__4697 = cljs.core.next(arglist__4697);
var c = cljs.core.first(arglist__4697);
var ds = cljs.core.rest(arglist__4697);
return G__4695__delegate(a,b,c,ds);
});
G__4695.cljs$core$IFn$_invoke$arity$variadic = G__4695__delegate;
return G__4695;
})()
;
G__4694 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__4694__2.call(this,a,b);
case 3:
return G__4694__3.call(this,a,b,c);
default:
var G__4698 = null;
if (arguments.length > 3) {
var G__4699__i = 0, G__4699__a = new Array(arguments.length -  3);
while (G__4699__i < G__4699__a.length) {G__4699__a[G__4699__i] = arguments[G__4699__i + 3]; ++G__4699__i;}
G__4698 = new cljs.core.IndexedSeq(G__4699__a,0);
}
return G__4694__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__4698);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4694.cljs$lang$maxFixedArity = 3;
G__4694.cljs$lang$applyTo = G__4694__4.cljs$lang$applyTo;
G__4694.cljs$core$IFn$_invoke$arity$2 = G__4694__2;
G__4694.cljs$core$IFn$_invoke$arity$3 = G__4694__3;
G__4694.cljs$core$IFn$_invoke$arity$variadic = G__4694__4.cljs$core$IFn$_invoke$arity$variadic;
return G__4694;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__4700 = null;
var G__4700__2 = (function (a,b){
var G__4683 = (((a == null))?x:a);
var G__4684 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4683,G__4684) : f.call(null,G__4683,G__4684));
});
var G__4700__3 = (function (a,b,c){
var G__4685 = (((a == null))?x:a);
var G__4686 = (((b == null))?y:b);
var G__4687 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4685,G__4686,G__4687) : f.call(null,G__4685,G__4686,G__4687));
});
var G__4700__4 = (function() { 
var G__4701__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__4701 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__4702__i = 0, G__4702__a = new Array(arguments.length -  3);
while (G__4702__i < G__4702__a.length) {G__4702__a[G__4702__i] = arguments[G__4702__i + 3]; ++G__4702__i;}
  ds = new cljs.core.IndexedSeq(G__4702__a,0);
} 
return G__4701__delegate.call(this,a,b,c,ds);};
G__4701.cljs$lang$maxFixedArity = 3;
G__4701.cljs$lang$applyTo = (function (arglist__4703){
var a = cljs.core.first(arglist__4703);
arglist__4703 = cljs.core.next(arglist__4703);
var b = cljs.core.first(arglist__4703);
arglist__4703 = cljs.core.next(arglist__4703);
var c = cljs.core.first(arglist__4703);
var ds = cljs.core.rest(arglist__4703);
return G__4701__delegate(a,b,c,ds);
});
G__4701.cljs$core$IFn$_invoke$arity$variadic = G__4701__delegate;
return G__4701;
})()
;
G__4700 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__4700__2.call(this,a,b);
case 3:
return G__4700__3.call(this,a,b,c);
default:
var G__4704 = null;
if (arguments.length > 3) {
var G__4705__i = 0, G__4705__a = new Array(arguments.length -  3);
while (G__4705__i < G__4705__a.length) {G__4705__a[G__4705__i] = arguments[G__4705__i + 3]; ++G__4705__i;}
G__4704 = new cljs.core.IndexedSeq(G__4705__a,0);
}
return G__4700__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__4704);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4700.cljs$lang$maxFixedArity = 3;
G__4700.cljs$lang$applyTo = G__4700__4.cljs$lang$applyTo;
G__4700.cljs$core$IFn$_invoke$arity$2 = G__4700__2;
G__4700.cljs$core$IFn$_invoke$arity$3 = G__4700__3;
G__4700.cljs$core$IFn$_invoke$arity$variadic = G__4700__4.cljs$core$IFn$_invoke$arity$variadic;
return G__4700;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__4736 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__4736) : cljs.core.volatile_BANG_.call(null,G__4736));
})();
return ((function (i){
return (function() {
var G__4766 = null;
var G__4766__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__4766__1 = (function (result){
var G__4737 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__4737) : rf.call(null,G__4737));
});
var G__4766__2 = (function (result,input){
var G__4738 = result;
var G__4739 = (function (){var G__4740 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__4741 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4740,G__4741) : f.call(null,G__4740,G__4741));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__4738,G__4739) : rf.call(null,G__4738,G__4739));
});
G__4766 = function(result,input){
switch(arguments.length){
case 0:
return G__4766__0.call(this);
case 1:
return G__4766__1.call(this,result);
case 2:
return G__4766__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4766.cljs$core$IFn$_invoke$arity$0 = G__4766__0;
G__4766.cljs$core$IFn$_invoke$arity$1 = G__4766__1;
G__4766.cljs$core$IFn$_invoke$arity$2 = G__4766__2;
return G__4766;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__3508__auto___4767 = size;
var i_4768 = (0);
while(true){
if((i_4768 < n__3508__auto___4767)){
cljs.core.chunk_append(b,(function (){var G__4762 = (idx + i_4768);
var G__4763 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_4768);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4762,G__4763) : f.call(null,G__4762,G__4763));
})());

var G__4769 = (i_4768 + (1));
i_4768 = G__4769;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__4764 = idx;
var G__4765 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4764,G__4765) : f.call(null,G__4764,G__4765));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__4788 = null;
var G__4788__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__4788__1 = (function (result){
var G__4782 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__4782) : rf.call(null,G__4782));
});
var G__4788__2 = (function (result,input){
var v = (function (){var G__4783 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4783) : f.call(null,G__4783));
})();
if((v == null)){
return result;
} else {
var G__4784 = result;
var G__4785 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__4784,G__4785) : rf.call(null,G__4784,G__4785));
}
});
G__4788 = function(result,input){
switch(arguments.length){
case 0:
return G__4788__0.call(this);
case 1:
return G__4788__1.call(this,result);
case 2:
return G__4788__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4788.cljs$core$IFn$_invoke$arity$0 = G__4788__0;
G__4788.cljs$core$IFn$_invoke$arity$1 = G__4788__1;
G__4788.cljs$core$IFn$_invoke$arity$2 = G__4788__2;
return G__4788;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__3508__auto___4789 = size;
var i_4790 = (0);
while(true){
if((i_4790 < n__3508__auto___4789)){
var x_4791 = (function (){var G__4786 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_4790);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4786) : f.call(null,G__4786));
})();
if((x_4791 == null)){
} else {
cljs.core.chunk_append(b,x_4791);
}

var G__4792 = (i_4790 + (1));
i_4790 = G__4792;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__4787 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4787) : f.call(null,G__4787));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__4793 = this$__$1;
return goog.getUid(G__4793);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__4794 = cljs.core.seq(self__.watches);
var chunk__4795 = null;
var count__4796 = (0);
var i__4797 = (0);
while(true){
if((i__4797 < count__4796)){
var vec__4798 = chunk__4795.cljs$core$IIndexed$_nth$arity$2(null,i__4797);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4798,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4798,(1),null);
var G__4799_4808 = key;
var G__4800_4809 = this$__$1;
var G__4801_4810 = oldval;
var G__4802_4811 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__4799_4808,G__4800_4809,G__4801_4810,G__4802_4811) : f.call(null,G__4799_4808,G__4800_4809,G__4801_4810,G__4802_4811));

var G__4812 = seq__4794;
var G__4813 = chunk__4795;
var G__4814 = count__4796;
var G__4815 = (i__4797 + (1));
seq__4794 = G__4812;
chunk__4795 = G__4813;
count__4796 = G__4814;
i__4797 = G__4815;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__4794);
if(temp__4126__auto__){
var seq__4794__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__4794__$1)){
var c__3456__auto__ = cljs.core.chunk_first(seq__4794__$1);
var G__4816 = cljs.core.chunk_rest(seq__4794__$1);
var G__4817 = c__3456__auto__;
var G__4818 = cljs.core.count(c__3456__auto__);
var G__4819 = (0);
seq__4794 = G__4816;
chunk__4795 = G__4817;
count__4796 = G__4818;
i__4797 = G__4819;
continue;
} else {
var vec__4803 = cljs.core.first(seq__4794__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4803,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4803,(1),null);
var G__4804_4820 = key;
var G__4805_4821 = this$__$1;
var G__4806_4822 = oldval;
var G__4807_4823 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__4804_4820,G__4805_4821,G__4806_4822,G__4807_4823) : f.call(null,G__4804_4820,G__4805_4821,G__4806_4822,G__4807_4823));

var G__4824 = cljs.core.next(seq__4794__$1);
var G__4825 = null;
var G__4826 = (0);
var G__4827 = (0);
seq__4794 = G__4824;
chunk__4795 = G__4825;
count__4796 = G__4826;
i__4797 = G__4827;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__4831__delegate = function (x,p__4828){
var map__4830 = p__4828;
var map__4830__$1 = ((cljs.core.seq_QMARK_(map__4830))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__4830):map__4830);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4830__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4830__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__4831 = function (x,var_args){
var p__4828 = null;
if (arguments.length > 1) {
var G__4832__i = 0, G__4832__a = new Array(arguments.length -  1);
while (G__4832__i < G__4832__a.length) {G__4832__a[G__4832__i] = arguments[G__4832__i + 1]; ++G__4832__i;}
  p__4828 = new cljs.core.IndexedSeq(G__4832__a,0);
} 
return G__4831__delegate.call(this,x,p__4828);};
G__4831.cljs$lang$maxFixedArity = 1;
G__4831.cljs$lang$applyTo = (function (arglist__4833){
var x = cljs.core.first(arglist__4833);
var p__4828 = cljs.core.rest(arglist__4833);
return G__4831__delegate(x,p__4828);
});
G__4831.cljs$core$IFn$_invoke$arity$variadic = G__4831__delegate;
return G__4831;
})()
;
atom = function(x,var_args){
var p__4828 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__4834 = null;
if (arguments.length > 1) {
var G__4835__i = 0, G__4835__a = new Array(arguments.length -  1);
while (G__4835__i < G__4835__a.length) {G__4835__a[G__4835__i] = arguments[G__4835__i + 1]; ++G__4835__i;}
G__4834 = new cljs.core.IndexedSeq(G__4835__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__4834);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__4838 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__4838) : validate.call(null,G__4838));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__4839 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__4839) : cljs.core.pr_str.call(null,G__4839));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__4846 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4846) : f.call(null,G__4846));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__4847 = a.state;
var G__4848 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4847,G__4848) : f.call(null,G__4847,G__4848));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__4849 = a.state;
var G__4850 = x;
var G__4851 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4849,G__4850,G__4851) : f.call(null,G__4849,G__4850,G__4851));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__4852__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__4852 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__4853__i = 0, G__4853__a = new Array(arguments.length -  4);
while (G__4853__i < G__4853__a.length) {G__4853__a[G__4853__i] = arguments[G__4853__i + 4]; ++G__4853__i;}
  more = new cljs.core.IndexedSeq(G__4853__a,0);
} 
return G__4852__delegate.call(this,a,f,x,y,more);};
G__4852.cljs$lang$maxFixedArity = 4;
G__4852.cljs$lang$applyTo = (function (arglist__4854){
var a = cljs.core.first(arglist__4854);
arglist__4854 = cljs.core.next(arglist__4854);
var f = cljs.core.first(arglist__4854);
arglist__4854 = cljs.core.next(arglist__4854);
var x = cljs.core.first(arglist__4854);
arglist__4854 = cljs.core.next(arglist__4854);
var y = cljs.core.first(arglist__4854);
var more = cljs.core.rest(arglist__4854);
return G__4852__delegate(a,f,x,y,more);
});
G__4852.cljs$core$IFn$_invoke$arity$variadic = G__4852__delegate;
return G__4852;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__4855 = null;
if (arguments.length > 4) {
var G__4856__i = 0, G__4856__a = new Array(arguments.length -  4);
while (G__4856__i < G__4856__a.length) {G__4856__a[G__4856__i] = arguments[G__4856__i + 4]; ++G__4856__i;}
G__4855 = new cljs.core.IndexedSeq(G__4856__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__4855);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__4923 = null;
var G__4923__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__4923__1 = (function (result){
var G__4890 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__4890) : rf.call(null,G__4890));
});
var G__4923__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__4891 = i;
var G__4892 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4891,G__4892) : f.call(null,G__4891,G__4892));
})();
if((v == null)){
return result;
} else {
var G__4893 = result;
var G__4894 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__4893,G__4894) : rf.call(null,G__4893,G__4894));
}
});
G__4923 = function(result,input){
switch(arguments.length){
case 0:
return G__4923__0.call(this);
case 1:
return G__4923__1.call(this,result);
case 2:
return G__4923__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4923.cljs$core$IFn$_invoke$arity$0 = G__4923__0;
G__4923.cljs$core$IFn$_invoke$arity$1 = G__4923__1;
G__4923.cljs$core$IFn$_invoke$arity$2 = G__4923__2;
return G__4923;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__3508__auto___4924 = size;
var i_4925 = (0);
while(true){
if((i_4925 < n__3508__auto___4924)){
var x_4926 = (function (){var G__4919 = (idx + i_4925);
var G__4920 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_4925);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4919,G__4920) : f.call(null,G__4919,G__4920));
})();
if((x_4926 == null)){
} else {
cljs.core.chunk_append(b,x_4926);
}

var G__4927 = (i_4925 + (1));
i_4925 = G__4927;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__4921 = idx;
var G__4922 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4921,G__4922) : f.call(null,G__4921,G__4922));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__5141 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__5141) : p.call(null,G__5141));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3081__auto__ = (function (){var G__5143 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__5143) : p.call(null,G__5143));
})();
if(cljs.core.truth_(and__3081__auto__)){
var G__5144 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__5144) : p.call(null,G__5144));
} else {
return and__3081__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3081__auto__ = (function (){var G__5146 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__5146) : p.call(null,G__5146));
})();
if(cljs.core.truth_(and__3081__auto__)){
var and__3081__auto____$1 = (function (){var G__5148 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__5148) : p.call(null,G__5148));
})();
if(cljs.core.truth_(and__3081__auto____$1)){
var G__5149 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__5149) : p.call(null,G__5149));
} else {
return and__3081__auto____$1;
}
} else {
return and__3081__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__5318__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__5318 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__5319__i = 0, G__5319__a = new Array(arguments.length -  3);
while (G__5319__i < G__5319__a.length) {G__5319__a[G__5319__i] = arguments[G__5319__i + 3]; ++G__5319__i;}
  args = new cljs.core.IndexedSeq(G__5319__a,0);
} 
return G__5318__delegate.call(this,x,y,z,args);};
G__5318.cljs$lang$maxFixedArity = 3;
G__5318.cljs$lang$applyTo = (function (arglist__5320){
var x = cljs.core.first(arglist__5320);
arglist__5320 = cljs.core.next(arglist__5320);
var y = cljs.core.first(arglist__5320);
arglist__5320 = cljs.core.next(arglist__5320);
var z = cljs.core.first(arglist__5320);
var args = cljs.core.rest(arglist__5320);
return G__5318__delegate(x,y,z,args);
});
G__5318.cljs$core$IFn$_invoke$arity$variadic = G__5318__delegate;
return G__5318;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__5321 = null;
if (arguments.length > 3) {
var G__5322__i = 0, G__5322__a = new Array(arguments.length -  3);
while (G__5322__i < G__5322__a.length) {G__5322__a[G__5322__i] = arguments[G__5322__i + 3]; ++G__5322__i;}
G__5321 = new cljs.core.IndexedSeq(G__5322__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__5321);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3081__auto__ = (function (){var G__5181 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5181) : p1.call(null,G__5181));
})();
if(cljs.core.truth_(and__3081__auto__)){
var G__5182 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5182) : p2.call(null,G__5182));
} else {
return and__3081__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3081__auto__ = (function (){var G__5184 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5184) : p1.call(null,G__5184));
})();
if(cljs.core.truth_(and__3081__auto__)){
var and__3081__auto____$1 = (function (){var G__5186 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5186) : p1.call(null,G__5186));
})();
if(cljs.core.truth_(and__3081__auto____$1)){
var and__3081__auto____$2 = (function (){var G__5188 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5188) : p2.call(null,G__5188));
})();
if(cljs.core.truth_(and__3081__auto____$2)){
var G__5189 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5189) : p2.call(null,G__5189));
} else {
return and__3081__auto____$2;
}
} else {
return and__3081__auto____$1;
}
} else {
return and__3081__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3081__auto__ = (function (){var G__5191 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5191) : p1.call(null,G__5191));
})();
if(cljs.core.truth_(and__3081__auto__)){
var and__3081__auto____$1 = (function (){var G__5193 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5193) : p1.call(null,G__5193));
})();
if(cljs.core.truth_(and__3081__auto____$1)){
var and__3081__auto____$2 = (function (){var G__5195 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5195) : p1.call(null,G__5195));
})();
if(cljs.core.truth_(and__3081__auto____$2)){
var and__3081__auto____$3 = (function (){var G__5197 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5197) : p2.call(null,G__5197));
})();
if(cljs.core.truth_(and__3081__auto____$3)){
var and__3081__auto____$4 = (function (){var G__5199 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5199) : p2.call(null,G__5199));
})();
if(cljs.core.truth_(and__3081__auto____$4)){
var G__5200 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5200) : p2.call(null,G__5200));
} else {
return and__3081__auto____$4;
}
} else {
return and__3081__auto____$3;
}
} else {
return and__3081__auto____$2;
}
} else {
return and__3081__auto____$1;
}
} else {
return and__3081__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__5323__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__4928_SHARP_){
var and__3081__auto__ = (function (){var G__5205 = p1__4928_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5205) : p1.call(null,G__5205));
})();
if(cljs.core.truth_(and__3081__auto__)){
var G__5206 = p1__4928_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5206) : p2.call(null,G__5206));
} else {
return and__3081__auto__;
}
}),args)));
};
var G__5323 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__5324__i = 0, G__5324__a = new Array(arguments.length -  3);
while (G__5324__i < G__5324__a.length) {G__5324__a[G__5324__i] = arguments[G__5324__i + 3]; ++G__5324__i;}
  args = new cljs.core.IndexedSeq(G__5324__a,0);
} 
return G__5323__delegate.call(this,x,y,z,args);};
G__5323.cljs$lang$maxFixedArity = 3;
G__5323.cljs$lang$applyTo = (function (arglist__5325){
var x = cljs.core.first(arglist__5325);
arglist__5325 = cljs.core.next(arglist__5325);
var y = cljs.core.first(arglist__5325);
arglist__5325 = cljs.core.next(arglist__5325);
var z = cljs.core.first(arglist__5325);
var args = cljs.core.rest(arglist__5325);
return G__5323__delegate(x,y,z,args);
});
G__5323.cljs$core$IFn$_invoke$arity$variadic = G__5323__delegate;
return G__5323;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__5326 = null;
if (arguments.length > 3) {
var G__5327__i = 0, G__5327__a = new Array(arguments.length -  3);
while (G__5327__i < G__5327__a.length) {G__5327__a[G__5327__i] = arguments[G__5327__i + 3]; ++G__5327__i;}
G__5326 = new cljs.core.IndexedSeq(G__5327__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__5326);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3081__auto__ = (function (){var G__5252 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5252) : p1.call(null,G__5252));
})();
if(cljs.core.truth_(and__3081__auto__)){
var and__3081__auto____$1 = (function (){var G__5254 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5254) : p2.call(null,G__5254));
})();
if(cljs.core.truth_(and__3081__auto____$1)){
var G__5255 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__5255) : p3.call(null,G__5255));
} else {
return and__3081__auto____$1;
}
} else {
return and__3081__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3081__auto__ = (function (){var G__5257 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5257) : p1.call(null,G__5257));
})();
if(cljs.core.truth_(and__3081__auto__)){
var and__3081__auto____$1 = (function (){var G__5259 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5259) : p2.call(null,G__5259));
})();
if(cljs.core.truth_(and__3081__auto____$1)){
var and__3081__auto____$2 = (function (){var G__5261 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__5261) : p3.call(null,G__5261));
})();
if(cljs.core.truth_(and__3081__auto____$2)){
var and__3081__auto____$3 = (function (){var G__5263 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5263) : p1.call(null,G__5263));
})();
if(cljs.core.truth_(and__3081__auto____$3)){
var and__3081__auto____$4 = (function (){var G__5265 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5265) : p2.call(null,G__5265));
})();
if(cljs.core.truth_(and__3081__auto____$4)){
var G__5266 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__5266) : p3.call(null,G__5266));
} else {
return and__3081__auto____$4;
}
} else {
return and__3081__auto____$3;
}
} else {
return and__3081__auto____$2;
}
} else {
return and__3081__auto____$1;
}
} else {
return and__3081__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3081__auto__ = (function (){var G__5268 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5268) : p1.call(null,G__5268));
})();
if(cljs.core.truth_(and__3081__auto__)){
var and__3081__auto____$1 = (function (){var G__5270 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5270) : p2.call(null,G__5270));
})();
if(cljs.core.truth_(and__3081__auto____$1)){
var and__3081__auto____$2 = (function (){var G__5272 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__5272) : p3.call(null,G__5272));
})();
if(cljs.core.truth_(and__3081__auto____$2)){
var and__3081__auto____$3 = (function (){var G__5274 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5274) : p1.call(null,G__5274));
})();
if(cljs.core.truth_(and__3081__auto____$3)){
var and__3081__auto____$4 = (function (){var G__5276 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5276) : p2.call(null,G__5276));
})();
if(cljs.core.truth_(and__3081__auto____$4)){
var and__3081__auto____$5 = (function (){var G__5278 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__5278) : p3.call(null,G__5278));
})();
if(cljs.core.truth_(and__3081__auto____$5)){
var and__3081__auto____$6 = (function (){var G__5280 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5280) : p1.call(null,G__5280));
})();
if(cljs.core.truth_(and__3081__auto____$6)){
var and__3081__auto____$7 = (function (){var G__5282 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5282) : p2.call(null,G__5282));
})();
if(cljs.core.truth_(and__3081__auto____$7)){
var G__5283 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__5283) : p3.call(null,G__5283));
} else {
return and__3081__auto____$7;
}
} else {
return and__3081__auto____$6;
}
} else {
return and__3081__auto____$5;
}
} else {
return and__3081__auto____$4;
}
} else {
return and__3081__auto____$3;
}
} else {
return and__3081__auto____$2;
}
} else {
return and__3081__auto____$1;
}
} else {
return and__3081__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__5328__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__4929_SHARP_){
var and__3081__auto__ = (function (){var G__5290 = p1__4929_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5290) : p1.call(null,G__5290));
})();
if(cljs.core.truth_(and__3081__auto__)){
var and__3081__auto____$1 = (function (){var G__5292 = p1__4929_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5292) : p2.call(null,G__5292));
})();
if(cljs.core.truth_(and__3081__auto____$1)){
var G__5293 = p1__4929_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__5293) : p3.call(null,G__5293));
} else {
return and__3081__auto____$1;
}
} else {
return and__3081__auto__;
}
}),args)));
};
var G__5328 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__5329__i = 0, G__5329__a = new Array(arguments.length -  3);
while (G__5329__i < G__5329__a.length) {G__5329__a[G__5329__i] = arguments[G__5329__i + 3]; ++G__5329__i;}
  args = new cljs.core.IndexedSeq(G__5329__a,0);
} 
return G__5328__delegate.call(this,x,y,z,args);};
G__5328.cljs$lang$maxFixedArity = 3;
G__5328.cljs$lang$applyTo = (function (arglist__5330){
var x = cljs.core.first(arglist__5330);
arglist__5330 = cljs.core.next(arglist__5330);
var y = cljs.core.first(arglist__5330);
arglist__5330 = cljs.core.next(arglist__5330);
var z = cljs.core.first(arglist__5330);
var args = cljs.core.rest(arglist__5330);
return G__5328__delegate(x,y,z,args);
});
G__5328.cljs$core$IFn$_invoke$arity$variadic = G__5328__delegate;
return G__5328;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__5331 = null;
if (arguments.length > 3) {
var G__5332__i = 0, G__5332__a = new Array(arguments.length -  3);
while (G__5332__i < G__5332__a.length) {G__5332__a[G__5332__i] = arguments[G__5332__i + 3]; ++G__5332__i;}
G__5331 = new cljs.core.IndexedSeq(G__5332__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__5331);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__5333__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__4930_SHARP_){
var G__5309 = x;
return (p1__4930_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__4930_SHARP_.cljs$core$IFn$_invoke$arity$1(G__5309) : p1__4930_SHARP_.call(null,G__5309));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__4931_SHARP_){
var and__3081__auto__ = (function (){var G__5311 = x;
return (p1__4931_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__4931_SHARP_.cljs$core$IFn$_invoke$arity$1(G__5311) : p1__4931_SHARP_.call(null,G__5311));
})();
if(cljs.core.truth_(and__3081__auto__)){
var G__5312 = y;
return (p1__4931_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__4931_SHARP_.cljs$core$IFn$_invoke$arity$1(G__5312) : p1__4931_SHARP_.call(null,G__5312));
} else {
return and__3081__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__4932_SHARP_){
var and__3081__auto__ = (function (){var G__5314 = x;
return (p1__4932_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__4932_SHARP_.cljs$core$IFn$_invoke$arity$1(G__5314) : p1__4932_SHARP_.call(null,G__5314));
})();
if(cljs.core.truth_(and__3081__auto__)){
var and__3081__auto____$1 = (function (){var G__5316 = y;
return (p1__4932_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__4932_SHARP_.cljs$core$IFn$_invoke$arity$1(G__5316) : p1__4932_SHARP_.call(null,G__5316));
})();
if(cljs.core.truth_(and__3081__auto____$1)){
var G__5317 = z;
return (p1__4932_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__4932_SHARP_.cljs$core$IFn$_invoke$arity$1(G__5317) : p1__4932_SHARP_.call(null,G__5317));
} else {
return and__3081__auto____$1;
}
} else {
return and__3081__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__5334__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__4933_SHARP_){
return cljs.core.every_QMARK_(p1__4933_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__5334 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__5335__i = 0, G__5335__a = new Array(arguments.length -  3);
while (G__5335__i < G__5335__a.length) {G__5335__a[G__5335__i] = arguments[G__5335__i + 3]; ++G__5335__i;}
  args = new cljs.core.IndexedSeq(G__5335__a,0);
} 
return G__5334__delegate.call(this,x,y,z,args);};
G__5334.cljs$lang$maxFixedArity = 3;
G__5334.cljs$lang$applyTo = (function (arglist__5336){
var x = cljs.core.first(arglist__5336);
arglist__5336 = cljs.core.next(arglist__5336);
var y = cljs.core.first(arglist__5336);
arglist__5336 = cljs.core.next(arglist__5336);
var z = cljs.core.first(arglist__5336);
var args = cljs.core.rest(arglist__5336);
return G__5334__delegate(x,y,z,args);
});
G__5334.cljs$core$IFn$_invoke$arity$variadic = G__5334__delegate;
return G__5334;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__5337 = null;
if (arguments.length > 3) {
var G__5338__i = 0, G__5338__a = new Array(arguments.length -  3);
while (G__5338__i < G__5338__a.length) {G__5338__a[G__5338__i] = arguments[G__5338__i + 3]; ++G__5338__i;}
G__5337 = new cljs.core.IndexedSeq(G__5338__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__5337);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__5333 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__5339__i = 0, G__5339__a = new Array(arguments.length -  3);
while (G__5339__i < G__5339__a.length) {G__5339__a[G__5339__i] = arguments[G__5339__i + 3]; ++G__5339__i;}
  ps = new cljs.core.IndexedSeq(G__5339__a,0);
} 
return G__5333__delegate.call(this,p1,p2,p3,ps);};
G__5333.cljs$lang$maxFixedArity = 3;
G__5333.cljs$lang$applyTo = (function (arglist__5340){
var p1 = cljs.core.first(arglist__5340);
arglist__5340 = cljs.core.next(arglist__5340);
var p2 = cljs.core.first(arglist__5340);
arglist__5340 = cljs.core.next(arglist__5340);
var p3 = cljs.core.first(arglist__5340);
var ps = cljs.core.rest(arglist__5340);
return G__5333__delegate(p1,p2,p3,ps);
});
G__5333.cljs$core$IFn$_invoke$arity$variadic = G__5333__delegate;
return G__5333;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__5341 = null;
if (arguments.length > 3) {
var G__5342__i = 0, G__5342__a = new Array(arguments.length -  3);
while (G__5342__i < G__5342__a.length) {G__5342__a[G__5342__i] = arguments[G__5342__i + 3]; ++G__5342__i;}
G__5341 = new cljs.core.IndexedSeq(G__5342__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__5341);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__5548 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__5548) : p.call(null,G__5548));
});
var sp1__2 = (function (x,y){
var or__3089__auto__ = (function (){var G__5550 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__5550) : p.call(null,G__5550));
})();
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
var G__5551 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__5551) : p.call(null,G__5551));
}
});
var sp1__3 = (function (x,y,z){
var or__3089__auto__ = (function (){var G__5553 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__5553) : p.call(null,G__5553));
})();
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (function (){var G__5555 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__5555) : p.call(null,G__5555));
})();
if(cljs.core.truth_(or__3089__auto____$1)){
return or__3089__auto____$1;
} else {
var G__5556 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__5556) : p.call(null,G__5556));
}
}
});
var sp1__4 = (function() { 
var G__5717__delegate = function (x,y,z,args){
var or__3089__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__5717 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__5718__i = 0, G__5718__a = new Array(arguments.length -  3);
while (G__5718__i < G__5718__a.length) {G__5718__a[G__5718__i] = arguments[G__5718__i + 3]; ++G__5718__i;}
  args = new cljs.core.IndexedSeq(G__5718__a,0);
} 
return G__5717__delegate.call(this,x,y,z,args);};
G__5717.cljs$lang$maxFixedArity = 3;
G__5717.cljs$lang$applyTo = (function (arglist__5719){
var x = cljs.core.first(arglist__5719);
arglist__5719 = cljs.core.next(arglist__5719);
var y = cljs.core.first(arglist__5719);
arglist__5719 = cljs.core.next(arglist__5719);
var z = cljs.core.first(arglist__5719);
var args = cljs.core.rest(arglist__5719);
return G__5717__delegate(x,y,z,args);
});
G__5717.cljs$core$IFn$_invoke$arity$variadic = G__5717__delegate;
return G__5717;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__5720 = null;
if (arguments.length > 3) {
var G__5721__i = 0, G__5721__a = new Array(arguments.length -  3);
while (G__5721__i < G__5721__a.length) {G__5721__a[G__5721__i] = arguments[G__5721__i + 3]; ++G__5721__i;}
G__5720 = new cljs.core.IndexedSeq(G__5721__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__5720);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3089__auto__ = (function (){var G__5588 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5588) : p1.call(null,G__5588));
})();
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
var G__5589 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5589) : p2.call(null,G__5589));
}
});
var sp2__2 = (function (x,y){
var or__3089__auto__ = (function (){var G__5591 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5591) : p1.call(null,G__5591));
})();
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (function (){var G__5593 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5593) : p1.call(null,G__5593));
})();
if(cljs.core.truth_(or__3089__auto____$1)){
return or__3089__auto____$1;
} else {
var or__3089__auto____$2 = (function (){var G__5595 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5595) : p2.call(null,G__5595));
})();
if(cljs.core.truth_(or__3089__auto____$2)){
return or__3089__auto____$2;
} else {
var G__5596 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5596) : p2.call(null,G__5596));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3089__auto__ = (function (){var G__5598 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5598) : p1.call(null,G__5598));
})();
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (function (){var G__5600 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5600) : p1.call(null,G__5600));
})();
if(cljs.core.truth_(or__3089__auto____$1)){
return or__3089__auto____$1;
} else {
var or__3089__auto____$2 = (function (){var G__5602 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5602) : p1.call(null,G__5602));
})();
if(cljs.core.truth_(or__3089__auto____$2)){
return or__3089__auto____$2;
} else {
var or__3089__auto____$3 = (function (){var G__5604 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5604) : p2.call(null,G__5604));
})();
if(cljs.core.truth_(or__3089__auto____$3)){
return or__3089__auto____$3;
} else {
var or__3089__auto____$4 = (function (){var G__5606 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5606) : p2.call(null,G__5606));
})();
if(cljs.core.truth_(or__3089__auto____$4)){
return or__3089__auto____$4;
} else {
var G__5607 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5607) : p2.call(null,G__5607));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__5722__delegate = function (x,y,z,args){
var or__3089__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
return cljs.core.some(((function (or__3089__auto__){
return (function (p1__5343_SHARP_){
var or__3089__auto____$1 = (function (){var G__5609 = p1__5343_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5609) : p1.call(null,G__5609));
})();
if(cljs.core.truth_(or__3089__auto____$1)){
return or__3089__auto____$1;
} else {
var G__5610 = p1__5343_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5610) : p2.call(null,G__5610));
}
});})(or__3089__auto__))
,args);
}
};
var G__5722 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__5723__i = 0, G__5723__a = new Array(arguments.length -  3);
while (G__5723__i < G__5723__a.length) {G__5723__a[G__5723__i] = arguments[G__5723__i + 3]; ++G__5723__i;}
  args = new cljs.core.IndexedSeq(G__5723__a,0);
} 
return G__5722__delegate.call(this,x,y,z,args);};
G__5722.cljs$lang$maxFixedArity = 3;
G__5722.cljs$lang$applyTo = (function (arglist__5724){
var x = cljs.core.first(arglist__5724);
arglist__5724 = cljs.core.next(arglist__5724);
var y = cljs.core.first(arglist__5724);
arglist__5724 = cljs.core.next(arglist__5724);
var z = cljs.core.first(arglist__5724);
var args = cljs.core.rest(arglist__5724);
return G__5722__delegate(x,y,z,args);
});
G__5722.cljs$core$IFn$_invoke$arity$variadic = G__5722__delegate;
return G__5722;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__5725 = null;
if (arguments.length > 3) {
var G__5726__i = 0, G__5726__a = new Array(arguments.length -  3);
while (G__5726__i < G__5726__a.length) {G__5726__a[G__5726__i] = arguments[G__5726__i + 3]; ++G__5726__i;}
G__5725 = new cljs.core.IndexedSeq(G__5726__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__5725);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3089__auto__ = (function (){var G__5656 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5656) : p1.call(null,G__5656));
})();
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (function (){var G__5658 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5658) : p2.call(null,G__5658));
})();
if(cljs.core.truth_(or__3089__auto____$1)){
return or__3089__auto____$1;
} else {
var G__5659 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__5659) : p3.call(null,G__5659));
}
}
});
var sp3__2 = (function (x,y){
var or__3089__auto__ = (function (){var G__5661 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5661) : p1.call(null,G__5661));
})();
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (function (){var G__5663 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5663) : p2.call(null,G__5663));
})();
if(cljs.core.truth_(or__3089__auto____$1)){
return or__3089__auto____$1;
} else {
var or__3089__auto____$2 = (function (){var G__5665 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__5665) : p3.call(null,G__5665));
})();
if(cljs.core.truth_(or__3089__auto____$2)){
return or__3089__auto____$2;
} else {
var or__3089__auto____$3 = (function (){var G__5667 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5667) : p1.call(null,G__5667));
})();
if(cljs.core.truth_(or__3089__auto____$3)){
return or__3089__auto____$3;
} else {
var or__3089__auto____$4 = (function (){var G__5669 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5669) : p2.call(null,G__5669));
})();
if(cljs.core.truth_(or__3089__auto____$4)){
return or__3089__auto____$4;
} else {
var G__5670 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__5670) : p3.call(null,G__5670));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3089__auto__ = (function (){var G__5672 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5672) : p1.call(null,G__5672));
})();
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (function (){var G__5674 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5674) : p2.call(null,G__5674));
})();
if(cljs.core.truth_(or__3089__auto____$1)){
return or__3089__auto____$1;
} else {
var or__3089__auto____$2 = (function (){var G__5676 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__5676) : p3.call(null,G__5676));
})();
if(cljs.core.truth_(or__3089__auto____$2)){
return or__3089__auto____$2;
} else {
var or__3089__auto____$3 = (function (){var G__5678 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5678) : p1.call(null,G__5678));
})();
if(cljs.core.truth_(or__3089__auto____$3)){
return or__3089__auto____$3;
} else {
var or__3089__auto____$4 = (function (){var G__5680 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5680) : p2.call(null,G__5680));
})();
if(cljs.core.truth_(or__3089__auto____$4)){
return or__3089__auto____$4;
} else {
var or__3089__auto____$5 = (function (){var G__5682 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__5682) : p3.call(null,G__5682));
})();
if(cljs.core.truth_(or__3089__auto____$5)){
return or__3089__auto____$5;
} else {
var or__3089__auto____$6 = (function (){var G__5684 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5684) : p1.call(null,G__5684));
})();
if(cljs.core.truth_(or__3089__auto____$6)){
return or__3089__auto____$6;
} else {
var or__3089__auto____$7 = (function (){var G__5686 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5686) : p2.call(null,G__5686));
})();
if(cljs.core.truth_(or__3089__auto____$7)){
return or__3089__auto____$7;
} else {
var G__5687 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__5687) : p3.call(null,G__5687));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__5727__delegate = function (x,y,z,args){
var or__3089__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
return cljs.core.some(((function (or__3089__auto__){
return (function (p1__5344_SHARP_){
var or__3089__auto____$1 = (function (){var G__5689 = p1__5344_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__5689) : p1.call(null,G__5689));
})();
if(cljs.core.truth_(or__3089__auto____$1)){
return or__3089__auto____$1;
} else {
var or__3089__auto____$2 = (function (){var G__5691 = p1__5344_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__5691) : p2.call(null,G__5691));
})();
if(cljs.core.truth_(or__3089__auto____$2)){
return or__3089__auto____$2;
} else {
var G__5692 = p1__5344_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__5692) : p3.call(null,G__5692));
}
}
});})(or__3089__auto__))
,args);
}
};
var G__5727 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__5728__i = 0, G__5728__a = new Array(arguments.length -  3);
while (G__5728__i < G__5728__a.length) {G__5728__a[G__5728__i] = arguments[G__5728__i + 3]; ++G__5728__i;}
  args = new cljs.core.IndexedSeq(G__5728__a,0);
} 
return G__5727__delegate.call(this,x,y,z,args);};
G__5727.cljs$lang$maxFixedArity = 3;
G__5727.cljs$lang$applyTo = (function (arglist__5729){
var x = cljs.core.first(arglist__5729);
arglist__5729 = cljs.core.next(arglist__5729);
var y = cljs.core.first(arglist__5729);
arglist__5729 = cljs.core.next(arglist__5729);
var z = cljs.core.first(arglist__5729);
var args = cljs.core.rest(arglist__5729);
return G__5727__delegate(x,y,z,args);
});
G__5727.cljs$core$IFn$_invoke$arity$variadic = G__5727__delegate;
return G__5727;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__5730 = null;
if (arguments.length > 3) {
var G__5731__i = 0, G__5731__a = new Array(arguments.length -  3);
while (G__5731__i < G__5731__a.length) {G__5731__a[G__5731__i] = arguments[G__5731__i + 3]; ++G__5731__i;}
G__5730 = new cljs.core.IndexedSeq(G__5731__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__5730);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__5732__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__5345_SHARP_){
var G__5708 = x;
return (p1__5345_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__5345_SHARP_.cljs$core$IFn$_invoke$arity$1(G__5708) : p1__5345_SHARP_.call(null,G__5708));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__5346_SHARP_){
var or__3089__auto__ = (function (){var G__5710 = x;
return (p1__5346_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__5346_SHARP_.cljs$core$IFn$_invoke$arity$1(G__5710) : p1__5346_SHARP_.call(null,G__5710));
})();
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
var G__5711 = y;
return (p1__5346_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__5346_SHARP_.cljs$core$IFn$_invoke$arity$1(G__5711) : p1__5346_SHARP_.call(null,G__5711));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__5347_SHARP_){
var or__3089__auto__ = (function (){var G__5713 = x;
return (p1__5347_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__5347_SHARP_.cljs$core$IFn$_invoke$arity$1(G__5713) : p1__5347_SHARP_.call(null,G__5713));
})();
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (function (){var G__5715 = y;
return (p1__5347_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__5347_SHARP_.cljs$core$IFn$_invoke$arity$1(G__5715) : p1__5347_SHARP_.call(null,G__5715));
})();
if(cljs.core.truth_(or__3089__auto____$1)){
return or__3089__auto____$1;
} else {
var G__5716 = z;
return (p1__5347_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__5347_SHARP_.cljs$core$IFn$_invoke$arity$1(G__5716) : p1__5347_SHARP_.call(null,G__5716));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__5733__delegate = function (x,y,z,args){
var or__3089__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
return cljs.core.some(((function (or__3089__auto__,ps__$1){
return (function (p1__5348_SHARP_){
return cljs.core.some(p1__5348_SHARP_,args);
});})(or__3089__auto__,ps__$1))
,ps__$1);
}
};
var G__5733 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__5734__i = 0, G__5734__a = new Array(arguments.length -  3);
while (G__5734__i < G__5734__a.length) {G__5734__a[G__5734__i] = arguments[G__5734__i + 3]; ++G__5734__i;}
  args = new cljs.core.IndexedSeq(G__5734__a,0);
} 
return G__5733__delegate.call(this,x,y,z,args);};
G__5733.cljs$lang$maxFixedArity = 3;
G__5733.cljs$lang$applyTo = (function (arglist__5735){
var x = cljs.core.first(arglist__5735);
arglist__5735 = cljs.core.next(arglist__5735);
var y = cljs.core.first(arglist__5735);
arglist__5735 = cljs.core.next(arglist__5735);
var z = cljs.core.first(arglist__5735);
var args = cljs.core.rest(arglist__5735);
return G__5733__delegate(x,y,z,args);
});
G__5733.cljs$core$IFn$_invoke$arity$variadic = G__5733__delegate;
return G__5733;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__5736 = null;
if (arguments.length > 3) {
var G__5737__i = 0, G__5737__a = new Array(arguments.length -  3);
while (G__5737__i < G__5737__a.length) {G__5737__a[G__5737__i] = arguments[G__5737__i + 3]; ++G__5737__i;}
G__5736 = new cljs.core.IndexedSeq(G__5737__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__5736);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__5732 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__5738__i = 0, G__5738__a = new Array(arguments.length -  3);
while (G__5738__i < G__5738__a.length) {G__5738__a[G__5738__i] = arguments[G__5738__i + 3]; ++G__5738__i;}
  ps = new cljs.core.IndexedSeq(G__5738__a,0);
} 
return G__5732__delegate.call(this,p1,p2,p3,ps);};
G__5732.cljs$lang$maxFixedArity = 3;
G__5732.cljs$lang$applyTo = (function (arglist__5739){
var p1 = cljs.core.first(arglist__5739);
arglist__5739 = cljs.core.next(arglist__5739);
var p2 = cljs.core.first(arglist__5739);
arglist__5739 = cljs.core.next(arglist__5739);
var p3 = cljs.core.first(arglist__5739);
var ps = cljs.core.rest(arglist__5739);
return G__5732__delegate(p1,p2,p3,ps);
});
G__5732.cljs$core$IFn$_invoke$arity$variadic = G__5732__delegate;
return G__5732;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__5740 = null;
if (arguments.length > 3) {
var G__5741__i = 0, G__5741__a = new Array(arguments.length -  3);
while (G__5741__i < G__5741__a.length) {G__5741__a[G__5741__i] = arguments[G__5741__i + 3]; ++G__5741__i;}
G__5740 = new cljs.core.IndexedSeq(G__5741__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__5740);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__5796 = null;
var G__5796__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__5796__1 = (function (result){
var G__5782 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__5782) : rf.call(null,G__5782));
});
var G__5796__2 = (function (result,input){
var G__5783 = result;
var G__5784 = (function (){var G__5785 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__5785) : f.call(null,G__5785));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__5783,G__5784) : rf.call(null,G__5783,G__5784));
});
var G__5796__3 = (function() { 
var G__5797__delegate = function (result,input,inputs){
var G__5786 = result;
var G__5787 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__5786,G__5787) : rf.call(null,G__5786,G__5787));
};
var G__5797 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__5798__i = 0, G__5798__a = new Array(arguments.length -  2);
while (G__5798__i < G__5798__a.length) {G__5798__a[G__5798__i] = arguments[G__5798__i + 2]; ++G__5798__i;}
  inputs = new cljs.core.IndexedSeq(G__5798__a,0);
} 
return G__5797__delegate.call(this,result,input,inputs);};
G__5797.cljs$lang$maxFixedArity = 2;
G__5797.cljs$lang$applyTo = (function (arglist__5799){
var result = cljs.core.first(arglist__5799);
arglist__5799 = cljs.core.next(arglist__5799);
var input = cljs.core.first(arglist__5799);
var inputs = cljs.core.rest(arglist__5799);
return G__5797__delegate(result,input,inputs);
});
G__5797.cljs$core$IFn$_invoke$arity$variadic = G__5797__delegate;
return G__5797;
})()
;
G__5796 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__5796__0.call(this);
case 1:
return G__5796__1.call(this,result);
case 2:
return G__5796__2.call(this,result,input);
default:
var G__5800 = null;
if (arguments.length > 2) {
var G__5801__i = 0, G__5801__a = new Array(arguments.length -  2);
while (G__5801__i < G__5801__a.length) {G__5801__a[G__5801__i] = arguments[G__5801__i + 2]; ++G__5801__i;}
G__5800 = new cljs.core.IndexedSeq(G__5801__a,0);
}
return G__5796__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__5800);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5796.cljs$lang$maxFixedArity = 2;
G__5796.cljs$lang$applyTo = G__5796__3.cljs$lang$applyTo;
G__5796.cljs$core$IFn$_invoke$arity$0 = G__5796__0;
G__5796.cljs$core$IFn$_invoke$arity$1 = G__5796__1;
G__5796.cljs$core$IFn$_invoke$arity$2 = G__5796__2;
G__5796.cljs$core$IFn$_invoke$arity$variadic = G__5796__3.cljs$core$IFn$_invoke$arity$variadic;
return G__5796;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__3508__auto___5802 = size;
var i_5803 = (0);
while(true){
if((i_5803 < n__3508__auto___5802)){
cljs.core.chunk_append(b,(function (){var G__5788 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_5803);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__5788) : f.call(null,G__5788));
})());

var G__5804 = (i_5803 + (1));
i_5803 = G__5804;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__5789 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__5789) : f.call(null,G__5789));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__5790 = cljs.core.first(s1);
var G__5791 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5790,G__5791) : f.call(null,G__5790,G__5791));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__5792 = cljs.core.first(s1);
var G__5793 = cljs.core.first(s2);
var G__5794 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__5792,G__5793,G__5794) : f.call(null,G__5792,G__5793,G__5794));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__5805__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__5742_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__5742_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__5805 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__5806__i = 0, G__5806__a = new Array(arguments.length -  4);
while (G__5806__i < G__5806__a.length) {G__5806__a[G__5806__i] = arguments[G__5806__i + 4]; ++G__5806__i;}
  colls = new cljs.core.IndexedSeq(G__5806__a,0);
} 
return G__5805__delegate.call(this,f,c1,c2,c3,colls);};
G__5805.cljs$lang$maxFixedArity = 4;
G__5805.cljs$lang$applyTo = (function (arglist__5807){
var f = cljs.core.first(arglist__5807);
arglist__5807 = cljs.core.next(arglist__5807);
var c1 = cljs.core.first(arglist__5807);
arglist__5807 = cljs.core.next(arglist__5807);
var c2 = cljs.core.first(arglist__5807);
arglist__5807 = cljs.core.next(arglist__5807);
var c3 = cljs.core.first(arglist__5807);
var colls = cljs.core.rest(arglist__5807);
return G__5805__delegate(f,c1,c2,c3,colls);
});
G__5805.cljs$core$IFn$_invoke$arity$variadic = G__5805__delegate;
return G__5805;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__5808 = null;
if (arguments.length > 4) {
var G__5809__i = 0, G__5809__a = new Array(arguments.length -  4);
while (G__5809__i < G__5809__a.length) {G__5809__a[G__5809__i] = arguments[G__5809__i + 4]; ++G__5809__i;}
G__5808 = new cljs.core.IndexedSeq(G__5809__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__5808);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__5818 = null;
var G__5818__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__5818__1 = (function (result){
var G__5815 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__5815) : rf.call(null,G__5815));
});
var G__5818__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__5816 = result;
var G__5817 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__5816,G__5817) : rf.call(null,G__5816,G__5817));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__5818 = function(result,input){
switch(arguments.length){
case 0:
return G__5818__0.call(this);
case 1:
return G__5818__1.call(this,result);
case 2:
return G__5818__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5818.cljs$core$IFn$_invoke$arity$0 = G__5818__0;
G__5818.cljs$core$IFn$_invoke$arity$1 = G__5818__1;
G__5818.cljs$core$IFn$_invoke$arity$2 = G__5818__2;
return G__5818;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__5825 = null;
var G__5825__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__5825__1 = (function (result){
var G__5822 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__5822) : rf.call(null,G__5822));
});
var G__5825__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__5823 = result;
var G__5824 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__5823,G__5824) : rf.call(null,G__5823,G__5824));
}
});
G__5825 = function(result,input){
switch(arguments.length){
case 0:
return G__5825__0.call(this);
case 1:
return G__5825__1.call(this,result);
case 2:
return G__5825__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5825.cljs$core$IFn$_invoke$arity$0 = G__5825__0;
G__5825.cljs$core$IFn$_invoke$arity$1 = G__5825__1;
G__5825.cljs$core$IFn$_invoke$arity$2 = G__5825__2;
return G__5825;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__5826 = (n__$1 - (1));
var G__5827 = cljs.core.rest(s);
n__$1 = G__5826;
coll__$1 = G__5827;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__5830 = cljs.core.next(s);
var G__5831 = cljs.core.next(lead);
s = G__5830;
lead = G__5831;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__5844 = null;
var G__5844__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__5844__1 = (function (result){
var G__5838 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__5838) : rf.call(null,G__5838));
});
var G__5844__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3081__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3081__auto__)){
var G__5839 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__5839) : pred.call(null,G__5839));
} else {
return and__3081__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__5840 = result;
var G__5841 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__5840,G__5841) : rf.call(null,G__5840,G__5841));
}
});
G__5844 = function(result,input){
switch(arguments.length){
case 0:
return G__5844__0.call(this);
case 1:
return G__5844__1.call(this,result);
case 2:
return G__5844__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5844.cljs$core$IFn$_invoke$arity$0 = G__5844__0;
G__5844.cljs$core$IFn$_invoke$arity$1 = G__5844__1;
G__5844.cljs$core$IFn$_invoke$arity$2 = G__5844__2;
return G__5844;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3081__auto__ = s;
if(and__3081__auto__){
var G__5843 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__5843) : pred__$1.call(null,G__5843));
} else {
return and__3081__auto__;
}
})())){
var G__5845 = pred__$1;
var G__5846 = cljs.core.rest(s);
pred__$1 = G__5845;
coll__$1 = G__5846;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__5855 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__5855) : f.call(null,G__5855));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__5858__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__5858 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__5859__i = 0, G__5859__a = new Array(arguments.length -  2);
while (G__5859__i < G__5859__a.length) {G__5859__a[G__5859__i] = arguments[G__5859__i + 2]; ++G__5859__i;}
  colls = new cljs.core.IndexedSeq(G__5859__a,0);
} 
return G__5858__delegate.call(this,c1,c2,colls);};
G__5858.cljs$lang$maxFixedArity = 2;
G__5858.cljs$lang$applyTo = (function (arglist__5860){
var c1 = cljs.core.first(arglist__5860);
arglist__5860 = cljs.core.next(arglist__5860);
var c2 = cljs.core.first(arglist__5860);
var colls = cljs.core.rest(arglist__5860);
return G__5858__delegate(c1,c2,colls);
});
G__5858.cljs$core$IFn$_invoke$arity$variadic = G__5858__delegate;
return G__5858;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__5861 = null;
if (arguments.length > 2) {
var G__5862__i = 0, G__5862__a = new Array(arguments.length -  2);
while (G__5862__i < G__5862__a.length) {G__5862__a[G__5862__i] = arguments[G__5862__i + 2]; ++G__5862__i;}
G__5861 = new cljs.core.IndexedSeq(G__5862__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__5861);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__5877 = null;
var G__5877__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__5877__1 = (function (result){
var G__5870 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__5870) : rf.call(null,G__5870));
});
var G__5877__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__5871 = result;
var G__5872 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__5871,G__5872) : rf.call(null,G__5871,G__5872));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__5873 = sepr;
var G__5874 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__5873,G__5874) : rf.call(null,G__5873,G__5874));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__5875 = result;
var G__5876 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__5875,G__5876) : rf.call(null,G__5875,G__5876));
}
});
G__5877 = function(result,input){
switch(arguments.length){
case 0:
return G__5877__0.call(this);
case 1:
return G__5877__1.call(this,result);
case 2:
return G__5877__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5877.cljs$core$IFn$_invoke$arity$0 = G__5877__0;
G__5877.cljs$core$IFn$_invoke$arity$1 = G__5877__1;
G__5877.cljs$core$IFn$_invoke$arity$2 = G__5877__2;
return G__5877;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__5886__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__5886 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__5887__i = 0, G__5887__a = new Array(arguments.length -  1);
while (G__5887__i < G__5887__a.length) {G__5887__a[G__5887__i] = arguments[G__5887__i + 1]; ++G__5887__i;}
  colls = new cljs.core.IndexedSeq(G__5887__a,0);
} 
return G__5886__delegate.call(this,f,colls);};
G__5886.cljs$lang$maxFixedArity = 1;
G__5886.cljs$lang$applyTo = (function (arglist__5888){
var f = cljs.core.first(arglist__5888);
var colls = cljs.core.rest(arglist__5888);
return G__5886__delegate(f,colls);
});
G__5886.cljs$core$IFn$_invoke$arity$variadic = G__5886__delegate;
return G__5886;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__5889 = null;
if (arguments.length > 1) {
var G__5890__i = 0, G__5890__a = new Array(arguments.length -  1);
while (G__5890__i < G__5890__a.length) {G__5890__a[G__5890__i] = arguments[G__5890__i + 1]; ++G__5890__i;}
G__5889 = new cljs.core.IndexedSeq(G__5890__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__5889);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__5909 = null;
var G__5909__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__5909__1 = (function (result){
var G__5903 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__5903) : rf.call(null,G__5903));
});
var G__5909__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__5904 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__5904) : pred.call(null,G__5904));
})())){
var G__5905 = result;
var G__5906 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__5905,G__5906) : rf.call(null,G__5905,G__5906));
} else {
return result;
}
});
G__5909 = function(result,input){
switch(arguments.length){
case 0:
return G__5909__0.call(this);
case 1:
return G__5909__1.call(this,result);
case 2:
return G__5909__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5909.cljs$core$IFn$_invoke$arity$0 = G__5909__0;
G__5909.cljs$core$IFn$_invoke$arity$1 = G__5909__1;
G__5909.cljs$core$IFn$_invoke$arity$2 = G__5909__2;
return G__5909;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__3508__auto___5910 = size;
var i_5911 = (0);
while(true){
if((i_5911 < n__3508__auto___5910)){
if(cljs.core.truth_((function (){var G__5907 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_5911);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__5907) : pred.call(null,G__5907));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_5911));
} else {
}

var G__5912 = (i_5911 + (1));
i_5911 = G__5912;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__5908 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__5908) : pred.call(null,G__5908));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__5919 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__5919) : branch_QMARK_.call(null,G__5919));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__5920 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__5920) : children.call(null,G__5920));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__5921_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__5921_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__5924 = to;
if(G__5924){
var bit__3383__auto__ = (G__5924.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__3383__auto__) || (G__5924.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__5925 = to;
if(G__5925){
var bit__3383__auto__ = (G__5925.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__3383__auto__) || (G__5925.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__5927 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__5927) : f.call(null,G__5927));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__5928__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__5928 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__5929__i = 0, G__5929__a = new Array(arguments.length -  4);
while (G__5929__i < G__5929__a.length) {G__5929__a[G__5929__i] = arguments[G__5929__i + 4]; ++G__5929__i;}
  colls = new cljs.core.IndexedSeq(G__5929__a,0);
} 
return G__5928__delegate.call(this,f,c1,c2,c3,colls);};
G__5928.cljs$lang$maxFixedArity = 4;
G__5928.cljs$lang$applyTo = (function (arglist__5930){
var f = cljs.core.first(arglist__5930);
arglist__5930 = cljs.core.next(arglist__5930);
var c1 = cljs.core.first(arglist__5930);
arglist__5930 = cljs.core.next(arglist__5930);
var c2 = cljs.core.first(arglist__5930);
arglist__5930 = cljs.core.next(arglist__5930);
var c3 = cljs.core.first(arglist__5930);
var colls = cljs.core.rest(arglist__5930);
return G__5928__delegate(f,c1,c2,c3,colls);
});
G__5928.cljs$core$IFn$_invoke$arity$variadic = G__5928__delegate;
return G__5928;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__5931 = null;
if (arguments.length > 4) {
var G__5932__i = 0, G__5932__a = new Array(arguments.length -  4);
while (G__5932__i < G__5932__a.length) {G__5932__a[G__5932__i] = arguments[G__5932__i + 4]; ++G__5932__i;}
G__5931 = new cljs.core.IndexedSeq(G__5932__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__5931);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__5934 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__5934) : pred.call(null,G__5934));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__5949 = m__$1;
if(G__5949){
var bit__3386__auto__ = (G__5949.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__3386__auto__) || (G__5949.cljs$core$ILookup$)){
return true;
} else {
if((!G__5949.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__5949);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__5949);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__5950 = sentinel;
var G__5951 = m__$2;
var G__5952 = cljs.core.next(ks__$1);
sentinel = G__5950;
m__$1 = G__5951;
ks__$1 = G__5952;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__5953,v){
var vec__5958 = p__5953;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5958,(0),null);
var ks = cljs.core.nthnext(vec__5958,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__5959,f){
var vec__5997 = p__5959;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5997,(0),null);
var ks = cljs.core.nthnext(vec__5997,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__5998 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__5998) : f.call(null,G__5998));
})());
}
});
var update_in__4 = (function (m,p__5960,f,a){
var vec__5999 = p__5960;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5999,(0),null);
var ks = cljs.core.nthnext(vec__5999,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__6000 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__6001 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6000,G__6001) : f.call(null,G__6000,G__6001));
})());
}
});
var update_in__5 = (function (m,p__5961,f,a,b){
var vec__6002 = p__5961;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6002,(0),null);
var ks = cljs.core.nthnext(vec__6002,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__6003 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__6004 = a;
var G__6005 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__6003,G__6004,G__6005) : f.call(null,G__6003,G__6004,G__6005));
})());
}
});
var update_in__6 = (function (m,p__5962,f,a,b,c){
var vec__6006 = p__5962;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6006,(0),null);
var ks = cljs.core.nthnext(vec__6006,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__6007 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__6008 = a;
var G__6009 = b;
var G__6010 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__6007,G__6008,G__6009,G__6010) : f.call(null,G__6007,G__6008,G__6009,G__6010));
})());
}
});
var update_in__7 = (function() { 
var G__6012__delegate = function (m,p__5963,f,a,b,c,args){
var vec__6011 = p__5963;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6011,(0),null);
var ks = cljs.core.nthnext(vec__6011,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__6012 = function (m,p__5963,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__6013__i = 0, G__6013__a = new Array(arguments.length -  6);
while (G__6013__i < G__6013__a.length) {G__6013__a[G__6013__i] = arguments[G__6013__i + 6]; ++G__6013__i;}
  args = new cljs.core.IndexedSeq(G__6013__a,0);
} 
return G__6012__delegate.call(this,m,p__5963,f,a,b,c,args);};
G__6012.cljs$lang$maxFixedArity = 6;
G__6012.cljs$lang$applyTo = (function (arglist__6014){
var m = cljs.core.first(arglist__6014);
arglist__6014 = cljs.core.next(arglist__6014);
var p__5963 = cljs.core.first(arglist__6014);
arglist__6014 = cljs.core.next(arglist__6014);
var f = cljs.core.first(arglist__6014);
arglist__6014 = cljs.core.next(arglist__6014);
var a = cljs.core.first(arglist__6014);
arglist__6014 = cljs.core.next(arglist__6014);
var b = cljs.core.first(arglist__6014);
arglist__6014 = cljs.core.next(arglist__6014);
var c = cljs.core.first(arglist__6014);
var args = cljs.core.rest(arglist__6014);
return G__6012__delegate(m,p__5963,f,a,b,c,args);
});
G__6012.cljs$core$IFn$_invoke$arity$variadic = G__6012__delegate;
return G__6012;
})()
;
update_in = function(m,p__5963,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__5963,f);
case 4:
return update_in__4.call(this,m,p__5963,f,a);
case 5:
return update_in__5.call(this,m,p__5963,f,a,b);
case 6:
return update_in__6.call(this,m,p__5963,f,a,b,c);
default:
var G__6015 = null;
if (arguments.length > 6) {
var G__6016__i = 0, G__6016__a = new Array(arguments.length -  6);
while (G__6016__i < G__6016__a.length) {G__6016__a[G__6016__i] = arguments[G__6016__i + 6]; ++G__6016__i;}
G__6015 = new cljs.core.IndexedSeq(G__6016__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__5963,f,a,b,c, G__6015);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__6027 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__6027) : f.call(null,G__6027));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__6028 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__6029 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6028,G__6029) : f.call(null,G__6028,G__6029));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__6030 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__6031 = x;
var G__6032 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__6030,G__6031,G__6032) : f.call(null,G__6030,G__6031,G__6032));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__6033 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__6034 = x;
var G__6035 = y;
var G__6036 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__6033,G__6034,G__6035,G__6036) : f.call(null,G__6033,G__6034,G__6035,G__6036));
})());
});
var update__7 = (function() { 
var G__6037__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__6037 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__6038__i = 0, G__6038__a = new Array(arguments.length -  6);
while (G__6038__i < G__6038__a.length) {G__6038__a[G__6038__i] = arguments[G__6038__i + 6]; ++G__6038__i;}
  more = new cljs.core.IndexedSeq(G__6038__a,0);
} 
return G__6037__delegate.call(this,m,k,f,x,y,z,more);};
G__6037.cljs$lang$maxFixedArity = 6;
G__6037.cljs$lang$applyTo = (function (arglist__6039){
var m = cljs.core.first(arglist__6039);
arglist__6039 = cljs.core.next(arglist__6039);
var k = cljs.core.first(arglist__6039);
arglist__6039 = cljs.core.next(arglist__6039);
var f = cljs.core.first(arglist__6039);
arglist__6039 = cljs.core.next(arglist__6039);
var x = cljs.core.first(arglist__6039);
arglist__6039 = cljs.core.next(arglist__6039);
var y = cljs.core.first(arglist__6039);
arglist__6039 = cljs.core.next(arglist__6039);
var z = cljs.core.first(arglist__6039);
var more = cljs.core.rest(arglist__6039);
return G__6037__delegate(m,k,f,x,y,z,more);
});
G__6037.cljs$core$IFn$_invoke$arity$variadic = G__6037__delegate;
return G__6037;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__6040 = null;
if (arguments.length > 6) {
var G__6041__i = 0, G__6041__a = new Array(arguments.length -  6);
while (G__6041__i < G__6041__a.length) {G__6041__a[G__6041__i] = arguments[G__6041__i + 6]; ++G__6041__i;}
G__6040 = new cljs.core.IndexedSeq(G__6041__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__6040);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__6042 = (ll - (5));
var G__6043 = r;
ll = G__6042;
ret = G__6043;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__6048 = cljs.core.pv_aget(node,(0));
var G__6049 = (level - (5));
node = G__6048;
level = G__6049;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__6050 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__6051 = (level - (5));
node = G__6050;
level = G__6051;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__6061 = init__$2;
var G__6062 = (j + i);
var G__6063 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__6061,G__6062,G__6063) : f.call(null,G__6061,G__6062,G__6063));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__6074 = (j + (1));
var G__6075 = init__$3;
j = G__6074;
init__$2 = G__6075;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__6064 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__6064) : cljs.core.deref.call(null,G__6064));
} else {
var G__6076 = (i + len);
var G__6077 = init__$2;
i = G__6076;
init__$1 = G__6077;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3182__auto__ = self__.__hash;
if(!((h__3182__auto__ == null))){
return h__3182__auto__;
} else {
var h__3182__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3182__auto____$1;

return h__3182__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__6065 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__6065) : cljs.core.tv_editable_root.call(null,G__6065));
})(),(function (){var G__6066 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__6066) : cljs.core.tv_editable_tail.call(null,G__6066));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__6067 = init__$2;
var G__6068 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6067,G__6068) : f.call(null,G__6067,G__6068));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__6078 = (j + (1));
var G__6079 = init__$3;
j = G__6078;
init__$2 = G__6079;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__6069 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__6069) : cljs.core.deref.call(null,G__6069));
} else {
var G__6080 = (i + len);
var G__6081 = init__$2;
i = G__6080;
init__$1 = G__6081;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__6070 = coll__$1;
var G__6071 = cljs.core.first_array_for_longvec(coll__$1);
var G__6072 = (0);
var G__6073 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__6070,G__6071,G__6072,G__6073) : cljs.core.chunked_seq.call(null,G__6070,G__6071,G__6072,G__6073));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__3508__auto___6082 = len;
var i_6083 = (0);
while(true){
if((i_6083 < n__3508__auto___6082)){
(new_tail[i_6083] = (self__.tail[i_6083]));

var G__6084 = (i_6083 + (1));
i_6083 = G__6084;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__6085 = null;
var G__6085__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__6085__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__6085 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__6085__2.call(this,self__,k);
case 3:
return G__6085__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6085.cljs$core$IFn$_invoke$arity$2 = G__6085__2;
G__6085.cljs$core$IFn$_invoke$arity$3 = G__6085__3;
return G__6085;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args6060){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6060)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__6086 = (i + (1));
var G__6087 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__6086;
out = G__6087;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__6088__i = 0, G__6088__a = new Array(arguments.length -  0);
while (G__6088__i < G__6088__a.length) {G__6088__a[G__6088__i] = arguments[G__6088__i + 0]; ++G__6088__i;}
  args = new cljs.core.IndexedSeq(G__6088__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__6089){
var args = cljs.core.seq(arglist__6089);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__6090 = self__.vec;
var G__6091 = self__.node;
var G__6092 = self__.i;
var G__6093 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__6090,G__6091,G__6092,G__6093) : cljs.core.chunked_seq.call(null,G__6090,G__6091,G__6092,G__6093));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3182__auto__ = self__.__hash;
if(!((h__3182__auto__ == null))){
return h__3182__auto__;
} else {
var h__3182__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3182__auto____$1;

return h__3182__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__6094 = self__.vec;
var G__6095 = (self__.i + self__.off);
var G__6096 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__6094,G__6095,G__6096) : cljs.core.subvec.call(null,G__6094,G__6095,G__6096));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__6097 = self__.vec;
var G__6098 = (self__.i + self__.off);
var G__6099 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__6097,G__6098,G__6099) : cljs.core.subvec.call(null,G__6097,G__6098,G__6099));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__6100 = self__.vec;
var G__6101 = self__.node;
var G__6102 = self__.i;
var G__6103 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__6100,G__6101,G__6102,G__6103) : cljs.core.chunked_seq.call(null,G__6100,G__6101,G__6102,G__6103));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__6104 = self__.vec;
var G__6105 = cljs.core.unchecked_array_for(self__.vec,end);
var G__6106 = end;
var G__6107 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__6104,G__6105,G__6106,G__6107) : cljs.core.chunked_seq.call(null,G__6104,G__6105,G__6106,G__6107));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__6108 = self__.vec;
var G__6109 = self__.node;
var G__6110 = self__.i;
var G__6111 = self__.off;
var G__6112 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__6108,G__6109,G__6110,G__6111,G__6112) : cljs.core.chunked_seq.call(null,G__6108,G__6109,G__6110,G__6111,G__6112));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__6113 = self__.vec;
var G__6114 = cljs.core.unchecked_array_for(self__.vec,end);
var G__6115 = end;
var G__6116 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__6113,G__6114,G__6115,G__6116) : cljs.core.chunked_seq.call(null,G__6113,G__6114,G__6115,G__6116));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__6118 = self__.meta;
var G__6119 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__6120 = self__.start;
var G__6121 = (function (){var x__3158__auto__ = self__.end;
var y__3159__auto__ = (v_pos + (1));
return ((x__3158__auto__ > y__3159__auto__) ? x__3158__auto__ : y__3159__auto__);
})();
var G__6122 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__6118,G__6119,G__6120,G__6121,G__6122) : cljs.core.build_subvec.call(null,G__6118,G__6119,G__6120,G__6121,G__6122));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__6123 = self__.meta;
var G__6124 = self__.v;
var G__6125 = self__.start;
var G__6126 = (self__.end - (1));
var G__6127 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__6123,G__6124,G__6125,G__6126,G__6127) : cljs.core.build_subvec.call(null,G__6123,G__6124,G__6125,G__6126,G__6127));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3182__auto__ = self__.__hash;
if(!((h__3182__auto__ == null))){
return h__3182__auto__;
} else {
var h__3182__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3182__auto____$1;

return h__3182__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__6129 = meta__$1;
var G__6130 = self__.v;
var G__6131 = self__.start;
var G__6132 = self__.end;
var G__6133 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__6129,G__6130,G__6131,G__6132,G__6133) : cljs.core.build_subvec.call(null,G__6129,G__6130,G__6131,G__6132,G__6133));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__6134 = self__.meta;
var G__6135 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__6136 = self__.start;
var G__6137 = (self__.end + (1));
var G__6138 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__6134,G__6135,G__6136,G__6137,G__6138) : cljs.core.build_subvec.call(null,G__6134,G__6135,G__6136,G__6137,G__6138));
});

cljs.core.Subvec.prototype.call = (function() {
var G__6139 = null;
var G__6139__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__6139__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__6139 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__6139__2.call(this,self__,k);
case 3:
return G__6139__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6139.cljs$core$IFn$_invoke$arity$2 = G__6139__2;
G__6139.cljs$core$IFn$_invoke$arity$3 = G__6139__3;
return G__6139;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args6117){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6117)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__6140 = meta;
var G__6141 = v.v;
var G__6142 = (v.start + start);
var G__6143 = (v.start + end);
var G__6144 = __hash;
meta = G__6140;
v = G__6141;
start = G__6142;
end = G__6143;
__hash = G__6144;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj6151 = {};
return obj6151;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__6159 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__6160 = (level - (5));
node = G__6159;
level = G__6160;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__6164 = null;
var G__6164__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__6164__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__6164 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__6164__2.call(this,self__,k);
case 3:
return G__6164__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6164.cljs$core$IFn$_invoke$arity$2 = G__6164__2;
G__6164.cljs$core$IFn$_invoke$arity$3 = G__6164__3;
return G__6164;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args6161){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6161)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3182__auto__ = self__.__hash;
if(!((h__3182__auto__ == null))){
return h__3182__auto__;
} else {
var h__3182__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3182__auto____$1;

return h__3182__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3182__auto__ = self__.__hash;
if(!((h__3182__auto__ == null))){
return h__3182__auto__;
} else {
var h__3182__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3182__auto____$1;

return h__3182__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3089__auto__ = self__.front;
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3089__auto__ = self__.rear;
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__6165 = (i + incr);
i = G__6165;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__6166 = (i + (1));
var G__6167 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__6166;
out = G__6167;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj6171 = {};
return obj6171;
})();
var l = ks.length;
var i_6172 = (0);
while(true){
if((i_6172 < l)){
var k_6173 = (ks[i_6172]);
(new_obj[k_6173] = (obj[k_6173]));

var G__6174 = (i_6172 + (1));
i_6172 = G__6174;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3081__auto__ = (function (){var G__6178 = k;
return goog.isString(G__6178);
})();
if(cljs.core.truth_(and__3081__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3081__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__6179 = init__$1;
var G__6180 = k;
var G__6181 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__6179,G__6180,G__6181) : f.call(null,G__6179,G__6180,G__6181));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__6182 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__6182) : cljs.core.deref.call(null,G__6182));
} else {
var G__6188 = cljs.core.rest(keys__$1);
var G__6189 = init__$2;
keys__$1 = G__6188;
init__$1 = G__6189;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3182__auto__ = self__.__hash;
if(!((h__3182__auto__ == null))){
return h__3182__auto__;
} else {
var h__3182__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3182__auto____$1;

return h__3182__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3081__auto__ = (function (){var G__6184 = k;
return goog.isString(G__6184);
})();
if(cljs.core.truth_(and__3081__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3081__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__6185 = k;
return goog.isString(G__6185);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3081__auto__ = (function (){var G__6187 = k;
return goog.isString(G__6187);
})();
if(cljs.core.truth_(and__3081__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3081__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__6175_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__6175_SHARP_,(self__.strobj[p1__6175_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__6190 = null;
var G__6190__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__6190__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__6190 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__6190__2.call(this,self__,k);
case 3:
return G__6190__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6190.cljs$core$IFn$_invoke$arity$2 = G__6190__2;
G__6190.cljs$core$IFn$_invoke$arity$3 = G__6190__3;
return G__6190;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args6176){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6176)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj6192 = {};
return obj6192;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__6193 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6193,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6193,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__6194 = (i + (2));
i = G__6194;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__6195 = (i + (2));
i = G__6195;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__6196 = (i + (2));
i = G__6196;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__6197 = (i + (2));
i = G__6197;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__6198 = (i + (2));
i = G__6198;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3089__auto__ = (function (){var G__6202 = k;
return goog.isString(G__6202);
})();
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_6203 = (0);
while(true){
if((i_6203 < l)){
(narr[i_6203] = (arr[i_6203]));

var G__6204 = (i_6203 + (1));
i_6203 = G__6204;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__6206 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__6206) : cljs.core.keys.call(null,G__6206));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__6207 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__6207) : cljs.core.vals.call(null,G__6207));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__6208 = cljs.core.seq(coll);
var chunk__6209 = null;
var count__6210 = (0);
var i__6211 = (0);
while(true){
if((i__6211 < count__6210)){
var vec__6212 = chunk__6209.cljs$core$IIndexed$_nth$arity$2(null,i__6211);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6212,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6212,(1),null);
var G__6213_6226 = v;
var G__6214_6227 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6213_6226,G__6214_6227) : f.call(null,G__6213_6226,G__6214_6227));

var G__6228 = seq__6208;
var G__6229 = chunk__6209;
var G__6230 = count__6210;
var G__6231 = (i__6211 + (1));
seq__6208 = G__6228;
chunk__6209 = G__6229;
count__6210 = G__6230;
i__6211 = G__6231;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__6208);
if(temp__4126__auto__){
var seq__6208__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__6208__$1)){
var c__3456__auto__ = cljs.core.chunk_first(seq__6208__$1);
var G__6232 = cljs.core.chunk_rest(seq__6208__$1);
var G__6233 = c__3456__auto__;
var G__6234 = cljs.core.count(c__3456__auto__);
var G__6235 = (0);
seq__6208 = G__6232;
chunk__6209 = G__6233;
count__6210 = G__6234;
i__6211 = G__6235;
continue;
} else {
var vec__6215 = cljs.core.first(seq__6208__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6215,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6215,(1),null);
var G__6216_6236 = v;
var G__6217_6237 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6216_6236,G__6217_6237) : f.call(null,G__6216_6236,G__6217_6237));

var G__6238 = cljs.core.next(seq__6208__$1);
var G__6239 = null;
var G__6240 = (0);
var G__6241 = (0);
seq__6208 = G__6238;
chunk__6209 = G__6239;
count__6210 = G__6240;
i__6211 = G__6241;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__6218 = init__$1;
var G__6219 = (self__.arr[i]);
var G__6220 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__6218,G__6219,G__6220) : f.call(null,G__6218,G__6219,G__6220));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__6221 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__6221) : cljs.core.deref.call(null,G__6221));
} else {
var G__6242 = (i + (2));
var G__6243 = init__$2;
i = G__6242;
init__$1 = G__6243;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3182__auto__ = self__.__hash;
if(!((h__3182__auto__ == null))){
return h__3182__auto__;
} else {
var h__3182__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3182__auto____$1;

return h__3182__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__6222 = other;
if(G__6222){
var bit__3383__auto__ = (G__6222.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__3383__auto__) || (G__6222.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__6244 = (i + (2));
i = G__6244;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj6224 = {};
return obj6224;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__6245 = (s + (2));
var G__6246 = d;
s = G__6245;
d = G__6246;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__6247 = (s + (2));
var G__6248 = (d + (2));
s = G__6247;
d = G__6248;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__6225 = cljs.core.aclone(self__.arr);
(G__6225[(idx + (1))] = v);

return G__6225;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__6249 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__6250 = cljs.core.next(es);
ret = G__6249;
es = G__6250;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__6251 = null;
var G__6251__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__6251__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__6251 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__6251__2.call(this,self__,k);
case 3:
return G__6251__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6251.cljs$core$IFn$_invoke$arity$2 = G__6251__2;
G__6251.cljs$core$IFn$_invoke$arity$3 = G__6251__3;
return G__6251;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args6205){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6205)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__6252 = (i + (2));
var G__6253 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__6252;
ret = G__6253;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__6254_6262 = self__.arr;
G__6254_6262.pop();

G__6254_6262.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__6255 = self__.len;
var G__6256 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__6255,G__6256) : cljs.core.array__GT_transient_hash_map.call(null,G__6255,G__6256));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__6257 = o;
if(G__6257){
var bit__3386__auto__ = (G__6257.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__3386__auto__) || (G__6257.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__6257.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__6257);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__6257);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__6258 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__6258) : cljs.core.key.call(null,G__6258));
})(),(function (){var G__6259 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__6259) : cljs.core.val.call(null,G__6259));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__6263 = cljs.core.next(es);
var G__6264 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__6260 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__6260) : cljs.core.key.call(null,G__6260));
})(),(function (){var G__6261 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__6261) : cljs.core.val.call(null,G__6261));
})());
es = G__6263;
tcoll__$2 = G__6264;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__6265 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__6266 = (i + (2));
out = G__6265;
i = G__6266;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__6269 = cljs.core.aclone(arr);
(G__6269[i] = a);

return G__6269;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__6270 = cljs.core.aclone(arr);
(G__6270[i] = a);

(G__6270[j] = b);

return G__6270;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__6275 = init__$1;
var G__6276 = k;
var G__6277 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__6275,G__6276,G__6277) : f.call(null,G__6275,G__6276,G__6277));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__6278 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__6278) : cljs.core.deref.call(null,G__6278));
} else {
var G__6279 = (i + (2));
var G__6280 = init__$2;
i = G__6279;
init__$1 = G__6280;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__6281 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__6281) : cljs.core.create_inode_seq.call(null,G__6281));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_6295 = (0);
var j_6296 = (0);
while(true){
if((i_6295 < (32))){
if((((self__.bitmap >>> i_6295) & (1)) === (0))){
var G__6297 = (i_6295 + (1));
var G__6298 = j_6296;
i_6295 = G__6297;
j_6296 = G__6298;
continue;
} else {
(nodes[i_6295] = ((!(((self__.arr[j_6296]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_6296])),(self__.arr[j_6296]),(self__.arr[(j_6296 + (1))]),added_leaf_QMARK_):(self__.arr[(j_6296 + (1))])));

var G__6299 = (i_6295 + (1));
var G__6300 = (j_6296 + (2));
i_6295 = G__6299;
j_6296 = G__6300;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__6282 = edit__$1;
var G__6283 = (shift + (5));
var G__6284 = key_or_nil;
var G__6285 = val_or_node;
var G__6286 = hash;
var G__6287 = key;
var G__6288 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__6282,G__6283,G__6284,G__6285,G__6286,G__6287,G__6288) : cljs.core.create_node.call(null,G__6282,G__6283,G__6284,G__6285,G__6286,G__6287,G__6288));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_6301 = (0);
var j_6302 = (0);
while(true){
if((i_6301 < (32))){
if((((self__.bitmap >>> i_6301) & (1)) === (0))){
var G__6303 = (i_6301 + (1));
var G__6304 = j_6302;
i_6301 = G__6303;
j_6302 = G__6304;
continue;
} else {
(nodes[i_6301] = ((!(((self__.arr[j_6302]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_6302])),(self__.arr[j_6302]),(self__.arr[(j_6302 + (1))]),added_leaf_QMARK_):(self__.arr[(j_6302 + (1))])));

var G__6305 = (i_6301 + (1));
var G__6306 = (j_6302 + (2));
i_6301 = G__6305;
j_6302 = G__6306;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__6289 = (shift + (5));
var G__6290 = key_or_nil;
var G__6291 = val_or_node;
var G__6292 = hash;
var G__6293 = key;
var G__6294 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__6289,G__6290,G__6291,G__6292,G__6293,G__6294) : cljs.core.create_node.call(null,G__6289,G__6290,G__6291,G__6292,G__6293,G__6294));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__6307 = (i + (1));
var G__6308 = (j + (2));
var G__6309 = (bitmap | ((1) << i));
i = G__6307;
j = G__6308;
bitmap = G__6309;
continue;
} else {
var G__6310 = (i + (1));
var G__6311 = j;
var G__6312 = bitmap;
i = G__6310;
j = G__6311;
bitmap = G__6312;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__6313 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__6313) : cljs.core.create_array_node_seq.call(null,G__6313));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__6314 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__6314) : cljs.core.deref.call(null,G__6314));
} else {
var G__6315 = (i + (1));
var G__6316 = init__$2;
i = G__6315;
init__$1 = G__6316;
continue;
}
} else {
var G__6317 = (i + (1));
var G__6318 = init__$1;
i = G__6317;
init__$1 = G__6318;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__6319 = (i + (2));
i = G__6319;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__6320 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__6320) : cljs.core.create_inode_seq.call(null,G__6320));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3182__auto__ = self__.__hash;
if(!((h__3182__auto__ == null))){
return h__3182__auto__;
} else {
var h__3182__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3182__auto____$1;

return h__3182__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__6321 = self__.nodes;
var G__6322 = (self__.i + (2));
var G__6323 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__6321,G__6322,G__6323) : cljs.core.create_inode_seq.call(null,G__6321,G__6322,G__6323));
} else {
var G__6324 = self__.nodes;
var G__6325 = self__.i;
var G__6326 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__6324,G__6325,G__6326) : cljs.core.create_inode_seq.call(null,G__6324,G__6325,G__6326));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__6330 = (j + (2));
j = G__6330;
continue;
}
} else {
var G__6331 = (j + (2));
j = G__6331;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3182__auto__ = self__.__hash;
if(!((h__3182__auto__ == null))){
return h__3182__auto__;
} else {
var h__3182__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3182__auto____$1;

return h__3182__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__6332 = null;
var G__6333 = self__.nodes;
var G__6334 = self__.i;
var G__6335 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__6332,G__6333,G__6334,G__6335) : cljs.core.create_array_node_seq.call(null,G__6332,G__6333,G__6334,G__6335));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__6340 = (j + (1));
j = G__6340;
continue;
}
} else {
var G__6341 = (j + (1));
j = G__6341;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__6343 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__6343) : cljs.core.keys.call(null,G__6343));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__6344 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__6344) : cljs.core.vals.call(null,G__6344));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__6345 = cljs.core.seq(coll);
var chunk__6346 = null;
var count__6347 = (0);
var i__6348 = (0);
while(true){
if((i__6348 < count__6347)){
var vec__6349 = chunk__6346.cljs$core$IIndexed$_nth$arity$2(null,i__6348);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6349,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6349,(1),null);
var G__6350_6361 = v;
var G__6351_6362 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6350_6361,G__6351_6362) : f.call(null,G__6350_6361,G__6351_6362));

var G__6363 = seq__6345;
var G__6364 = chunk__6346;
var G__6365 = count__6347;
var G__6366 = (i__6348 + (1));
seq__6345 = G__6363;
chunk__6346 = G__6364;
count__6347 = G__6365;
i__6348 = G__6366;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__6345);
if(temp__4126__auto__){
var seq__6345__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__6345__$1)){
var c__3456__auto__ = cljs.core.chunk_first(seq__6345__$1);
var G__6367 = cljs.core.chunk_rest(seq__6345__$1);
var G__6368 = c__3456__auto__;
var G__6369 = cljs.core.count(c__3456__auto__);
var G__6370 = (0);
seq__6345 = G__6367;
chunk__6346 = G__6368;
count__6347 = G__6369;
i__6348 = G__6370;
continue;
} else {
var vec__6352 = cljs.core.first(seq__6345__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6352,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6352,(1),null);
var G__6353_6371 = v;
var G__6354_6372 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6353_6371,G__6354_6372) : f.call(null,G__6353_6371,G__6354_6372));

var G__6373 = cljs.core.next(seq__6345__$1);
var G__6374 = null;
var G__6375 = (0);
var G__6376 = (0);
seq__6345 = G__6373;
chunk__6346 = G__6374;
count__6347 = G__6375;
i__6348 = G__6376;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__6355 = init;
var G__6356 = null;
var G__6357 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__6355,G__6356,G__6357) : f.call(null,G__6355,G__6356,G__6357));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__6358 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__6358) : cljs.core.deref.call(null,G__6358));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3182__auto__ = self__.__hash;
if(!((h__3182__auto__ == null))){
return h__3182__auto__;
} else {
var h__3182__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3182__auto____$1;

return h__3182__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj6360 = {};
return obj6360;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__6377 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__6378 = cljs.core.next(es);
ret = G__6377;
es = G__6378;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__6379 = null;
var G__6379__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__6379__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__6379 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__6379__2.call(this,self__,k);
case 3:
return G__6379__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6379.cljs$core$IFn$_invoke$arity$2 = G__6379__2;
G__6379.cljs$core$IFn$_invoke$arity$3 = G__6379__3;
return G__6379;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args6342){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6342)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__6380 = (i + (2));
var G__6381 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__6380;
ret = G__6381;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__6382 = (i + (1));
var G__6383 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__6382;
out = G__6383;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__6384 = o;
if(G__6384){
var bit__3386__auto__ = (G__6384.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__3386__auto__) || (G__6384.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__6384.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__6384);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__6384);
}
})()){
return tcoll.assoc_BANG_((function (){var G__6385 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__6385) : cljs.core.key.call(null,G__6385));
})(),(function (){var G__6386 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__6386) : cljs.core.val.call(null,G__6386));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__6389 = cljs.core.next(es);
var G__6390 = tcoll__$1.assoc_BANG_((function (){var G__6387 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__6387) : cljs.core.key.call(null,G__6387));
})(),(function (){var G__6388 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__6388) : cljs.core.val.call(null,G__6388));
})());
es = G__6389;
tcoll__$1 = G__6390;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__6391 = ((ascending_QMARK_)?t.left:t.right);
var G__6392 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__6391;
stack__$1 = G__6392;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3182__auto__ = self__.__hash;
if(!((h__3182__auto__ == null))){
return h__3182__auto__;
} else {
var h__3182__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3182__auto____$1;

return h__3182__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__6405 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__6405) : cljs.core.deref.call(null,G__6405));
} else {
var init__$2 = (function (){var G__6406 = init__$1;
var G__6407 = node.key;
var G__6408 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__6406,G__6407,G__6408) : f.call(null,G__6406,G__6407,G__6408));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__6409 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__6409) : cljs.core.deref.call(null,G__6409));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__6410 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__6410) : cljs.core.deref.call(null,G__6410));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3182__auto__ = self__.__hash;
if(!((h__3182__auto__ == null))){
return h__3182__auto__;
} else {
var h__3182__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3182__auto____$1;

return h__3182__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__6412 = null;
var G__6412__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__6412__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__6412 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__6412__2.call(this,self__,k);
case 3:
return G__6412__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6412.cljs$core$IFn$_invoke$arity$2 = G__6412__2;
G__6412.cljs$core$IFn$_invoke$arity$3 = G__6412__3;
return G__6412;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args6411){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6411)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3182__auto__ = self__.__hash;
if(!((h__3182__auto__ == null))){
return h__3182__auto__;
} else {
var h__3182__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3182__auto____$1;

return h__3182__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__6414 = null;
var G__6414__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__6414__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__6414 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__6414__2.call(this,self__,k);
case 3:
return G__6414__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6414.cljs$core$IFn$_invoke$arity$2 = G__6414__2;
G__6414.cljs$core$IFn$_invoke$arity$3 = G__6414__3;
return G__6414;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args6413){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6413)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__6427 = k;
var G__6428 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__6427,G__6428) : comp.call(null,G__6427,G__6428));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__6447 = k;
var G__6448 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__6447,G__6448) : comp.call(null,G__6447,G__6448));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__6459 = k;
var G__6460 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__6459,G__6460) : comp.call(null,G__6459,G__6460));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__6462 = cljs.core.seq(coll);
var chunk__6463 = null;
var count__6464 = (0);
var i__6465 = (0);
while(true){
if((i__6465 < count__6464)){
var vec__6466 = chunk__6463.cljs$core$IIndexed$_nth$arity$2(null,i__6465);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6466,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6466,(1),null);
var G__6467_6479 = v;
var G__6468_6480 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6467_6479,G__6468_6480) : f.call(null,G__6467_6479,G__6468_6480));

var G__6481 = seq__6462;
var G__6482 = chunk__6463;
var G__6483 = count__6464;
var G__6484 = (i__6465 + (1));
seq__6462 = G__6481;
chunk__6463 = G__6482;
count__6464 = G__6483;
i__6465 = G__6484;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__6462);
if(temp__4126__auto__){
var seq__6462__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__6462__$1)){
var c__3456__auto__ = cljs.core.chunk_first(seq__6462__$1);
var G__6485 = cljs.core.chunk_rest(seq__6462__$1);
var G__6486 = c__3456__auto__;
var G__6487 = cljs.core.count(c__3456__auto__);
var G__6488 = (0);
seq__6462 = G__6485;
chunk__6463 = G__6486;
count__6464 = G__6487;
i__6465 = G__6488;
continue;
} else {
var vec__6469 = cljs.core.first(seq__6462__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6469,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6469,(1),null);
var G__6470_6489 = v;
var G__6471_6490 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6470_6489,G__6471_6490) : f.call(null,G__6470_6489,G__6471_6490));

var G__6491 = cljs.core.next(seq__6462__$1);
var G__6492 = null;
var G__6493 = (0);
var G__6494 = (0);
seq__6462 = G__6491;
chunk__6463 = G__6492;
count__6464 = G__6493;
i__6465 = G__6494;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__6472 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__6472) : cljs.core.keys.call(null,G__6472));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__6473 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__6473) : cljs.core.vals.call(null,G__6473));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__6474 = k;
var G__6475 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__6474,G__6475) : self__.comp.call(null,G__6474,G__6475));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__6495 = t.left;
t = G__6495;
continue;
} else {
var G__6496 = t.right;
t = G__6496;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3182__auto__ = self__.__hash;
if(!((h__3182__auto__ == null))){
return h__3182__auto__;
} else {
var h__3182__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3182__auto____$1;

return h__3182__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__6497 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__6498 = cljs.core.next(es);
ret = G__6497;
es = G__6498;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__6499 = null;
var G__6499__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__6499__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__6499 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__6499__2.call(this,self__,k);
case 3:
return G__6499__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6499.cljs$core$IFn$_invoke$arity$2 = G__6499__2;
G__6499.cljs$core$IFn$_invoke$arity$3 = G__6499__3;
return G__6499;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args6461){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6461)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__6476 = k;
var G__6477 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__6476,G__6477) : self__.comp.call(null,G__6476,G__6477));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__6500 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__6501 = t.left;
stack = G__6500;
t = G__6501;
continue;
} else {
var G__6502 = stack;
var G__6503 = t.right;
stack = G__6502;
t = G__6503;
continue;
}
} else {
if((c > (0))){
var G__6504 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__6505 = t.right;
stack = G__6504;
t = G__6505;
continue;
} else {
var G__6506 = stack;
var G__6507 = t.left;
stack = G__6506;
t = G__6507;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__6478 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__6478) : cljs.core.key.call(null,G__6478));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__6508 = cljs.core.nnext(in$);
var G__6509 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__6508;
out = G__6509;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__6510__i = 0, G__6510__a = new Array(arguments.length -  0);
while (G__6510__i < G__6510__a.length) {G__6510__a[G__6510__i] = arguments[G__6510__i + 0]; ++G__6510__i;}
  keyvals = new cljs.core.IndexedSeq(G__6510__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__6511){
var keyvals = cljs.core.seq(arglist__6511);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__6512__i = 0, G__6512__a = new Array(arguments.length -  0);
while (G__6512__i < G__6512__a.length) {G__6512__a[G__6512__i] = arguments[G__6512__i + 0]; ++G__6512__i;}
  keyvals = new cljs.core.IndexedSeq(G__6512__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__6513){
var keyvals = cljs.core.seq(arglist__6513);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj6517 = {};
return obj6517;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__6518 = cljs.core.nnext(kvs);
kvs = G__6518;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__6519__i = 0, G__6519__a = new Array(arguments.length -  0);
while (G__6519__i < G__6519__a.length) {G__6519__a[G__6519__i] = arguments[G__6519__i + 0]; ++G__6519__i;}
  keyvals = new cljs.core.IndexedSeq(G__6519__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__6520){
var keyvals = cljs.core.seq(arglist__6520);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__6521 = cljs.core.nnext(in$);
var G__6522 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__6521;
out = G__6522;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__6523__i = 0, G__6523__a = new Array(arguments.length -  0);
while (G__6523__i < G__6523__a.length) {G__6523__a[G__6523__i] = arguments[G__6523__i + 0]; ++G__6523__i;}
  keyvals = new cljs.core.IndexedSeq(G__6523__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__6524){
var keyvals = cljs.core.seq(arglist__6524);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__6525 = cljs.core.nnext(in$);
var G__6526 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__6525;
out = G__6526;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__6527__i = 0, G__6527__a = new Array(arguments.length -  1);
while (G__6527__i < G__6527__a.length) {G__6527__a[G__6527__i] = arguments[G__6527__i + 1]; ++G__6527__i;}
  keyvals = new cljs.core.IndexedSeq(G__6527__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__6528){
var comparator = cljs.core.first(arglist__6528);
var keyvals = cljs.core.rest(arglist__6528);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__6529 = self__.mseq;
if(G__6529){
var bit__3386__auto__ = (G__6529.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__3386__auto__) || (G__6529.cljs$core$INext$)){
return true;
} else {
if((!G__6529.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__6529);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__6529);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__6530 = self__.mseq;
if(G__6530){
var bit__3386__auto__ = (G__6530.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__3386__auto__) || (G__6530.cljs$core$INext$)){
return true;
} else {
if((!G__6530.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__6530);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__6530);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__6531 = self__.mseq;
if(G__6531){
var bit__3386__auto__ = (G__6531.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__3386__auto__) || (G__6531.cljs$core$INext$)){
return true;
} else {
if((!G__6531.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__6531);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__6531);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__6532 = self__.mseq;
if(G__6532){
var bit__3386__auto__ = (G__6532.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__3386__auto__) || (G__6532.cljs$core$INext$)){
return true;
} else {
if((!G__6532.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__6532);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__6532);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__6533_SHARP_,p2__6534_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3089__auto__ = p1__6533_SHARP_;
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__6534_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__6535__i = 0, G__6535__a = new Array(arguments.length -  0);
while (G__6535__i < G__6535__a.length) {G__6535__a[G__6535__i] = arguments[G__6535__i + 0]; ++G__6535__i;}
  maps = new cljs.core.IndexedSeq(G__6535__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__6536){
var maps = cljs.core.seq(arglist__6536);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__6539 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__6540 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6539,G__6540) : f.call(null,G__6539,G__6540));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3089__auto__ = m1;
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__6541__i = 0, G__6541__a = new Array(arguments.length -  1);
while (G__6541__i < G__6541__a.length) {G__6541__a[G__6541__i] = arguments[G__6541__i + 1]; ++G__6541__i;}
  maps = new cljs.core.IndexedSeq(G__6541__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__6542){
var f = cljs.core.first(arglist__6542);
var maps = cljs.core.rest(arglist__6542);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__6543 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__6544 = cljs.core.next(keys);
ret = G__6543;
keys = G__6544;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__6547 = cljs.core.seq(coll);
var chunk__6548 = null;
var count__6549 = (0);
var i__6550 = (0);
while(true){
if((i__6550 < count__6549)){
var vec__6551 = chunk__6548.cljs$core$IIndexed$_nth$arity$2(null,i__6550);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6551,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6551,(1),null);
var G__6552_6557 = v;
var G__6553_6558 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6552_6557,G__6553_6558) : f.call(null,G__6552_6557,G__6553_6558));

var G__6559 = seq__6547;
var G__6560 = chunk__6548;
var G__6561 = count__6549;
var G__6562 = (i__6550 + (1));
seq__6547 = G__6559;
chunk__6548 = G__6560;
count__6549 = G__6561;
i__6550 = G__6562;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__6547);
if(temp__4126__auto__){
var seq__6547__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__6547__$1)){
var c__3456__auto__ = cljs.core.chunk_first(seq__6547__$1);
var G__6563 = cljs.core.chunk_rest(seq__6547__$1);
var G__6564 = c__3456__auto__;
var G__6565 = cljs.core.count(c__3456__auto__);
var G__6566 = (0);
seq__6547 = G__6563;
chunk__6548 = G__6564;
count__6549 = G__6565;
i__6550 = G__6566;
continue;
} else {
var vec__6554 = cljs.core.first(seq__6547__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6554,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6554,(1),null);
var G__6555_6567 = v;
var G__6556_6568 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6555_6567,G__6556_6568) : f.call(null,G__6555_6567,G__6556_6568));

var G__6569 = cljs.core.next(seq__6547__$1);
var G__6570 = null;
var G__6571 = (0);
var G__6572 = (0);
seq__6547 = G__6569;
chunk__6548 = G__6570;
count__6549 = G__6571;
i__6550 = G__6572;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3182__auto__ = self__.__hash;
if(!((h__3182__auto__ == null))){
return h__3182__auto__;
} else {
var h__3182__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3182__auto____$1;

return h__3182__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__6545_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__6545_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__6573 = null;
var G__6573__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__6573__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__6573 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__6573__2.call(this,self__,k);
case 3:
return G__6573__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6573.cljs$core$IFn$_invoke$arity$2 = G__6573__2;
G__6573.cljs$core$IFn$_invoke$arity$3 = G__6573__3;
return G__6573;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args6546){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6546)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__6574 = (i + (1));
var G__6575 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__6574;
out = G__6575;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__6576 = (i + (1));
var G__6577 = cljs.core._conj_BANG_(out,(items[i]));
i = G__6576;
out = G__6577;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__6579 = null;
var G__6579__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__6579__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__6579 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__6579__2.call(this,self__,k);
case 3:
return G__6579__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6579.cljs$core$IFn$_invoke$arity$2 = G__6579__2;
G__6579.cljs$core$IFn$_invoke$arity$3 = G__6579__3;
return G__6579;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args6578){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6578)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__6582 = cljs.core.seq(coll);
var chunk__6583 = null;
var count__6584 = (0);
var i__6585 = (0);
while(true){
if((i__6585 < count__6584)){
var vec__6586 = chunk__6583.cljs$core$IIndexed$_nth$arity$2(null,i__6585);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6586,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6586,(1),null);
var G__6587_6592 = v;
var G__6588_6593 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6587_6592,G__6588_6593) : f.call(null,G__6587_6592,G__6588_6593));

var G__6594 = seq__6582;
var G__6595 = chunk__6583;
var G__6596 = count__6584;
var G__6597 = (i__6585 + (1));
seq__6582 = G__6594;
chunk__6583 = G__6595;
count__6584 = G__6596;
i__6585 = G__6597;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__6582);
if(temp__4126__auto__){
var seq__6582__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__6582__$1)){
var c__3456__auto__ = cljs.core.chunk_first(seq__6582__$1);
var G__6598 = cljs.core.chunk_rest(seq__6582__$1);
var G__6599 = c__3456__auto__;
var G__6600 = cljs.core.count(c__3456__auto__);
var G__6601 = (0);
seq__6582 = G__6598;
chunk__6583 = G__6599;
count__6584 = G__6600;
i__6585 = G__6601;
continue;
} else {
var vec__6589 = cljs.core.first(seq__6582__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6589,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6589,(1),null);
var G__6590_6602 = v;
var G__6591_6603 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6590_6602,G__6591_6603) : f.call(null,G__6590_6602,G__6591_6603));

var G__6604 = cljs.core.next(seq__6582__$1);
var G__6605 = null;
var G__6606 = (0);
var G__6607 = (0);
seq__6582 = G__6604;
chunk__6583 = G__6605;
count__6584 = G__6606;
i__6585 = G__6607;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3182__auto__ = self__.__hash;
if(!((h__3182__auto__ == null))){
return h__3182__auto__;
} else {
var h__3182__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3182__auto____$1;

return h__3182__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__6580_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__6580_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__6608 = null;
var G__6608__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__6608__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__6608 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__6608__2.call(this,self__,k);
case 3:
return G__6608__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6608.cljs$core$IFn$_invoke$arity$2 = G__6608__2;
G__6608.cljs$core$IFn$_invoke$arity$3 = G__6608__3;
return G__6608;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args6581){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6581)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__3506__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__3506__auto__.length)){
var G__6609 = (i + (1));
var G__6610 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__6609;
res = G__6610;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__6611 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__6612 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__6611;
out = G__6612;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__6613__delegate = function (keys){
return cljs.core.set(keys);
};
var G__6613 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__6614__i = 0, G__6614__a = new Array(arguments.length -  0);
while (G__6614__i < G__6614__a.length) {G__6614__a[G__6614__i] = arguments[G__6614__i + 0]; ++G__6614__i;}
  keys = new cljs.core.IndexedSeq(G__6614__a,0);
} 
return G__6613__delegate.call(this,keys);};
G__6613.cljs$lang$maxFixedArity = 0;
G__6613.cljs$lang$applyTo = (function (arglist__6615){
var keys = cljs.core.seq(arglist__6615);
return G__6613__delegate(keys);
});
G__6613.cljs$core$IFn$_invoke$arity$variadic = G__6613__delegate;
return G__6613;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__6616 = null;
if (arguments.length > 0) {
var G__6617__i = 0, G__6617__a = new Array(arguments.length -  0);
while (G__6617__i < G__6617__a.length) {G__6617__a[G__6617__i] = arguments[G__6617__i + 0]; ++G__6617__i;}
G__6616 = new cljs.core.IndexedSeq(G__6617__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__6616);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__6618__i = 0, G__6618__a = new Array(arguments.length -  0);
while (G__6618__i < G__6618__a.length) {G__6618__a[G__6618__i] = arguments[G__6618__i + 0]; ++G__6618__i;}
  keys = new cljs.core.IndexedSeq(G__6618__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__6619){
var keys = cljs.core.seq(arglist__6619);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__6620__i = 0, G__6620__a = new Array(arguments.length -  1);
while (G__6620__i < G__6620__a.length) {G__6620__a[G__6620__i] = arguments[G__6620__i + 1]; ++G__6620__i;}
  keys = new cljs.core.IndexedSeq(G__6620__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__6621){
var comparator = cljs.core.first(arglist__6621);
var keys = cljs.core.rest(arglist__6621);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__6622_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__6622_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__6622_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__6623_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__6623_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__6623_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__6644 = null;
var G__6644__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__6644__1 = (function (result){
var G__6634 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__6634) : rf.call(null,G__6634));
});
var G__6644__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__6635 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__6635) : cljs.core.deref.call(null,G__6635));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__6636 = result;
var G__6637 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__6636,G__6637) : rf.call(null,G__6636,G__6637));
}
});
G__6644 = function(result,input){
switch(arguments.length){
case 0:
return G__6644__0.call(this);
case 1:
return G__6644__1.call(this,result);
case 2:
return G__6644__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6644.cljs$core$IFn$_invoke$arity$0 = G__6644__0;
G__6644.cljs$core$IFn$_invoke$arity$1 = G__6644__1;
G__6644.cljs$core$IFn$_invoke$arity$2 = G__6644__2;
return G__6644;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__6642,seen__$1){
while(true){
var vec__6643 = p__6642;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6643,(0),null);
var xs__$1 = vec__6643;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__6645 = cljs.core.rest(s);
var G__6646 = seen__$1;
p__6642 = G__6645;
seen__$1 = G__6646;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__6647 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__6648 = cljs.core.next(s__$1);
ret = G__6647;
s__$1 = G__6648;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__6650 = x;
if(G__6650){
var bit__3383__auto__ = (G__6650.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__3383__auto__) || (G__6650.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__6651 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__6652 = cljs.core.next(ks);
var G__6653 = cljs.core.next(vs);
map = G__6651;
ks = G__6652;
vs = G__6653;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__6664 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__6664) : k.call(null,G__6664));
})() > (function (){var G__6665 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__6665) : k.call(null,G__6665));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__6666__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__6654_SHARP_,p2__6655_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__6654_SHARP_,p2__6655_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__6666 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__6667__i = 0, G__6667__a = new Array(arguments.length -  3);
while (G__6667__i < G__6667__a.length) {G__6667__a[G__6667__i] = arguments[G__6667__i + 3]; ++G__6667__i;}
  more = new cljs.core.IndexedSeq(G__6667__a,0);
} 
return G__6666__delegate.call(this,k,x,y,more);};
G__6666.cljs$lang$maxFixedArity = 3;
G__6666.cljs$lang$applyTo = (function (arglist__6668){
var k = cljs.core.first(arglist__6668);
arglist__6668 = cljs.core.next(arglist__6668);
var x = cljs.core.first(arglist__6668);
arglist__6668 = cljs.core.next(arglist__6668);
var y = cljs.core.first(arglist__6668);
var more = cljs.core.rest(arglist__6668);
return G__6666__delegate(k,x,y,more);
});
G__6666.cljs$core$IFn$_invoke$arity$variadic = G__6666__delegate;
return G__6666;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__6669 = null;
if (arguments.length > 3) {
var G__6670__i = 0, G__6670__a = new Array(arguments.length -  3);
while (G__6670__i < G__6670__a.length) {G__6670__a[G__6670__i] = arguments[G__6670__i + 3]; ++G__6670__i;}
G__6669 = new cljs.core.IndexedSeq(G__6670__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__6669);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__6681 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__6681) : k.call(null,G__6681));
})() < (function (){var G__6682 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__6682) : k.call(null,G__6682));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__6683__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__6671_SHARP_,p2__6672_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__6671_SHARP_,p2__6672_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__6683 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__6684__i = 0, G__6684__a = new Array(arguments.length -  3);
while (G__6684__i < G__6684__a.length) {G__6684__a[G__6684__i] = arguments[G__6684__i + 3]; ++G__6684__i;}
  more = new cljs.core.IndexedSeq(G__6684__a,0);
} 
return G__6683__delegate.call(this,k,x,y,more);};
G__6683.cljs$lang$maxFixedArity = 3;
G__6683.cljs$lang$applyTo = (function (arglist__6685){
var k = cljs.core.first(arglist__6685);
arglist__6685 = cljs.core.next(arglist__6685);
var x = cljs.core.first(arglist__6685);
arglist__6685 = cljs.core.next(arglist__6685);
var y = cljs.core.first(arglist__6685);
var more = cljs.core.rest(arglist__6685);
return G__6683__delegate(k,x,y,more);
});
G__6683.cljs$core$IFn$_invoke$arity$variadic = G__6683__delegate;
return G__6683;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__6686 = null;
if (arguments.length > 3) {
var G__6687__i = 0, G__6687__a = new Array(arguments.length -  3);
while (G__6687__i < G__6687__a.length) {G__6687__a[G__6687__i] = arguments[G__6687__i + 3]; ++G__6687__i;}
G__6686 = new cljs.core.IndexedSeq(G__6687__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__6686);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__6704 = null;
var G__6704__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__6704__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__6699 = result;
var G__6700 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__6699,G__6700) : rf.call(null,G__6699,G__6700));
})());
})());
var G__6701 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__6701) : rf.call(null,G__6701));
});
var G__6704__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__6702 = result;
var G__6703 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__6702,G__6703) : rf.call(null,G__6702,G__6703));
} else {
return result;
}
});
G__6704 = function(result,input){
switch(arguments.length){
case 0:
return G__6704__0.call(this);
case 1:
return G__6704__1.call(this,result);
case 2:
return G__6704__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6704.cljs$core$IFn$_invoke$arity$0 = G__6704__0;
G__6704.cljs$core$IFn$_invoke$arity$1 = G__6704__1;
G__6704.cljs$core$IFn$_invoke$arity$2 = G__6704__2;
return G__6704;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__6717 = null;
var G__6717__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__6717__1 = (function (result){
var G__6712 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__6712) : rf.call(null,G__6712));
});
var G__6717__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__6713 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__6713) : pred.call(null,G__6713));
})())){
var G__6714 = result;
var G__6715 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__6714,G__6715) : rf.call(null,G__6714,G__6715));
} else {
return cljs.core.reduced(result);
}
});
G__6717 = function(result,input){
switch(arguments.length){
case 0:
return G__6717__0.call(this);
case 1:
return G__6717__1.call(this,result);
case 2:
return G__6717__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6717.cljs$core$IFn$_invoke$arity$0 = G__6717__0;
G__6717.cljs$core$IFn$_invoke$arity$1 = G__6717__1;
G__6717.cljs$core$IFn$_invoke$arity$2 = G__6717__2;
return G__6717;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__6716 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__6716) : pred.call(null,G__6716));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__6722 = (function (){var G__6724 = cljs.core._entry_key(sc,e);
var G__6725 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__6724,G__6725) : comp.call(null,G__6724,G__6725));
})();
var G__6723 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__6722,G__6723) : test.call(null,G__6722,G__6723));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__6729 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6729,(0),null);
var s = vec__6729;
if(cljs.core.truth_((function (){var G__6730 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__6730) : include.call(null,G__6730));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__6731 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6731,(0),null);
var s = vec__6731;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__6735 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6735,(0),null);
var s = vec__6735;
if(cljs.core.truth_((function (){var G__6736 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__6736) : include.call(null,G__6736));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__6737 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6737,(0),null);
var s = vec__6737;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__6738 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__6738) : Math.ceil.call(null,G__6738));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__3182__auto__ = self__.__hash;
if(!((h__3182__auto__ == null))){
return h__3182__auto__;
} else {
var h__3182__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__3182__auto____$1;

return h__3182__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__6739 = ret;
var G__6740 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6739,G__6740) : f.call(null,G__6739,G__6740));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__6741 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__6741) : cljs.core.deref.call(null,G__6741));
} else {
var G__6742 = (i + self__.step);
var G__6743 = ret__$1;
i = G__6742;
ret = G__6743;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__6761 = null;
var G__6761__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__6761__1 = (function (result){
var G__6758 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__6758) : rf.call(null,G__6758));
});
var G__6761__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__6759 = result;
var G__6760 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__6759,G__6760) : rf.call(null,G__6759,G__6760));
} else {
return result;
}
});
G__6761 = function(result,input){
switch(arguments.length){
case 0:
return G__6761__0.call(this);
case 1:
return G__6761__1.call(this,result);
case 2:
return G__6761__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6761.cljs$core$IFn$_invoke$arity$0 = G__6761__0;
G__6761.cljs$core$IFn$_invoke$arity$1 = G__6761__1;
G__6761.cljs$core$IFn$_invoke$arity$2 = G__6761__2;
return G__6761;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__6783 = null;
var G__6783__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__6783__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__6774 = result;
var G__6775 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__6774,G__6775) : rf.call(null,G__6774,G__6775));
})());
})());
var G__6776 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__6776) : rf.call(null,G__6776));
});
var G__6783__2 = (function (result,input){
var pval = (function (){var G__6777 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__6777) : cljs.core.deref.call(null,G__6777));
})();
var val = (function (){var G__6778 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__6778) : f.call(null,G__6778));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__6779 = result;
var G__6780 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__6779,G__6780) : rf.call(null,G__6779,G__6780));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__6783 = function(result,input){
switch(arguments.length){
case 0:
return G__6783__0.call(this);
case 1:
return G__6783__1.call(this,result);
case 2:
return G__6783__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6783.cljs$core$IFn$_invoke$arity$0 = G__6783__0;
G__6783.cljs$core$IFn$_invoke$arity$1 = G__6783__1;
G__6783.cljs$core$IFn$_invoke$arity$2 = G__6783__2;
return G__6783;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__6781 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__6781) : f.call(null,G__6781));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__6762_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__6782 = p1__6762_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__6782) : f.call(null,G__6782));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__6792 = init;
var G__6793 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6792,G__6793) : f.call(null,G__6792,G__6793));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__6888 = null;
var G__6888__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__6888__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__6846 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__6846) : f.call(null,G__6846));
})()],null));
});
var G__6888__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__6847 = x;
var G__6848 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6847,G__6848) : f.call(null,G__6847,G__6848));
})()],null));
});
var G__6888__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__6849 = x;
var G__6850 = y;
var G__6851 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__6849,G__6850,G__6851) : f.call(null,G__6849,G__6850,G__6851));
})()],null));
});
var G__6888__4 = (function() { 
var G__6889__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__6889 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__6890__i = 0, G__6890__a = new Array(arguments.length -  3);
while (G__6890__i < G__6890__a.length) {G__6890__a[G__6890__i] = arguments[G__6890__i + 3]; ++G__6890__i;}
  args = new cljs.core.IndexedSeq(G__6890__a,0);
} 
return G__6889__delegate.call(this,x,y,z,args);};
G__6889.cljs$lang$maxFixedArity = 3;
G__6889.cljs$lang$applyTo = (function (arglist__6891){
var x = cljs.core.first(arglist__6891);
arglist__6891 = cljs.core.next(arglist__6891);
var y = cljs.core.first(arglist__6891);
arglist__6891 = cljs.core.next(arglist__6891);
var z = cljs.core.first(arglist__6891);
var args = cljs.core.rest(arglist__6891);
return G__6889__delegate(x,y,z,args);
});
G__6889.cljs$core$IFn$_invoke$arity$variadic = G__6889__delegate;
return G__6889;
})()
;
G__6888 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__6888__0.call(this);
case 1:
return G__6888__1.call(this,x);
case 2:
return G__6888__2.call(this,x,y);
case 3:
return G__6888__3.call(this,x,y,z);
default:
var G__6892 = null;
if (arguments.length > 3) {
var G__6893__i = 0, G__6893__a = new Array(arguments.length -  3);
while (G__6893__i < G__6893__a.length) {G__6893__a[G__6893__i] = arguments[G__6893__i + 3]; ++G__6893__i;}
G__6892 = new cljs.core.IndexedSeq(G__6893__a,0);
}
return G__6888__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__6892);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6888.cljs$lang$maxFixedArity = 3;
G__6888.cljs$lang$applyTo = G__6888__4.cljs$lang$applyTo;
G__6888.cljs$core$IFn$_invoke$arity$0 = G__6888__0;
G__6888.cljs$core$IFn$_invoke$arity$1 = G__6888__1;
G__6888.cljs$core$IFn$_invoke$arity$2 = G__6888__2;
G__6888.cljs$core$IFn$_invoke$arity$3 = G__6888__3;
G__6888.cljs$core$IFn$_invoke$arity$variadic = G__6888__4.cljs$core$IFn$_invoke$arity$variadic;
return G__6888;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__6894 = null;
var G__6894__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__6894__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__6852 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__6852) : f.call(null,G__6852));
})(),(function (){var G__6853 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__6853) : g.call(null,G__6853));
})()],null));
});
var G__6894__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__6854 = x;
var G__6855 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6854,G__6855) : f.call(null,G__6854,G__6855));
})(),(function (){var G__6856 = x;
var G__6857 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__6856,G__6857) : g.call(null,G__6856,G__6857));
})()],null));
});
var G__6894__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__6858 = x;
var G__6859 = y;
var G__6860 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__6858,G__6859,G__6860) : f.call(null,G__6858,G__6859,G__6860));
})(),(function (){var G__6861 = x;
var G__6862 = y;
var G__6863 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__6861,G__6862,G__6863) : g.call(null,G__6861,G__6862,G__6863));
})()],null));
});
var G__6894__4 = (function() { 
var G__6895__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__6895 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__6896__i = 0, G__6896__a = new Array(arguments.length -  3);
while (G__6896__i < G__6896__a.length) {G__6896__a[G__6896__i] = arguments[G__6896__i + 3]; ++G__6896__i;}
  args = new cljs.core.IndexedSeq(G__6896__a,0);
} 
return G__6895__delegate.call(this,x,y,z,args);};
G__6895.cljs$lang$maxFixedArity = 3;
G__6895.cljs$lang$applyTo = (function (arglist__6897){
var x = cljs.core.first(arglist__6897);
arglist__6897 = cljs.core.next(arglist__6897);
var y = cljs.core.first(arglist__6897);
arglist__6897 = cljs.core.next(arglist__6897);
var z = cljs.core.first(arglist__6897);
var args = cljs.core.rest(arglist__6897);
return G__6895__delegate(x,y,z,args);
});
G__6895.cljs$core$IFn$_invoke$arity$variadic = G__6895__delegate;
return G__6895;
})()
;
G__6894 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__6894__0.call(this);
case 1:
return G__6894__1.call(this,x);
case 2:
return G__6894__2.call(this,x,y);
case 3:
return G__6894__3.call(this,x,y,z);
default:
var G__6898 = null;
if (arguments.length > 3) {
var G__6899__i = 0, G__6899__a = new Array(arguments.length -  3);
while (G__6899__i < G__6899__a.length) {G__6899__a[G__6899__i] = arguments[G__6899__i + 3]; ++G__6899__i;}
G__6898 = new cljs.core.IndexedSeq(G__6899__a,0);
}
return G__6894__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__6898);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6894.cljs$lang$maxFixedArity = 3;
G__6894.cljs$lang$applyTo = G__6894__4.cljs$lang$applyTo;
G__6894.cljs$core$IFn$_invoke$arity$0 = G__6894__0;
G__6894.cljs$core$IFn$_invoke$arity$1 = G__6894__1;
G__6894.cljs$core$IFn$_invoke$arity$2 = G__6894__2;
G__6894.cljs$core$IFn$_invoke$arity$3 = G__6894__3;
G__6894.cljs$core$IFn$_invoke$arity$variadic = G__6894__4.cljs$core$IFn$_invoke$arity$variadic;
return G__6894;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__6900 = null;
var G__6900__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__6900__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__6864 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__6864) : f.call(null,G__6864));
})(),(function (){var G__6865 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__6865) : g.call(null,G__6865));
})(),(function (){var G__6866 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__6866) : h.call(null,G__6866));
})()],null));
});
var G__6900__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__6867 = x;
var G__6868 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6867,G__6868) : f.call(null,G__6867,G__6868));
})(),(function (){var G__6869 = x;
var G__6870 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__6869,G__6870) : g.call(null,G__6869,G__6870));
})(),(function (){var G__6871 = x;
var G__6872 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__6871,G__6872) : h.call(null,G__6871,G__6872));
})()],null));
});
var G__6900__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__6873 = x;
var G__6874 = y;
var G__6875 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__6873,G__6874,G__6875) : f.call(null,G__6873,G__6874,G__6875));
})(),(function (){var G__6876 = x;
var G__6877 = y;
var G__6878 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__6876,G__6877,G__6878) : g.call(null,G__6876,G__6877,G__6878));
})(),(function (){var G__6879 = x;
var G__6880 = y;
var G__6881 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__6879,G__6880,G__6881) : h.call(null,G__6879,G__6880,G__6881));
})()],null));
});
var G__6900__4 = (function() { 
var G__6901__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__6901 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__6902__i = 0, G__6902__a = new Array(arguments.length -  3);
while (G__6902__i < G__6902__a.length) {G__6902__a[G__6902__i] = arguments[G__6902__i + 3]; ++G__6902__i;}
  args = new cljs.core.IndexedSeq(G__6902__a,0);
} 
return G__6901__delegate.call(this,x,y,z,args);};
G__6901.cljs$lang$maxFixedArity = 3;
G__6901.cljs$lang$applyTo = (function (arglist__6903){
var x = cljs.core.first(arglist__6903);
arglist__6903 = cljs.core.next(arglist__6903);
var y = cljs.core.first(arglist__6903);
arglist__6903 = cljs.core.next(arglist__6903);
var z = cljs.core.first(arglist__6903);
var args = cljs.core.rest(arglist__6903);
return G__6901__delegate(x,y,z,args);
});
G__6901.cljs$core$IFn$_invoke$arity$variadic = G__6901__delegate;
return G__6901;
})()
;
G__6900 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__6900__0.call(this);
case 1:
return G__6900__1.call(this,x);
case 2:
return G__6900__2.call(this,x,y);
case 3:
return G__6900__3.call(this,x,y,z);
default:
var G__6904 = null;
if (arguments.length > 3) {
var G__6905__i = 0, G__6905__a = new Array(arguments.length -  3);
while (G__6905__i < G__6905__a.length) {G__6905__a[G__6905__i] = arguments[G__6905__i + 3]; ++G__6905__i;}
G__6904 = new cljs.core.IndexedSeq(G__6905__a,0);
}
return G__6900__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__6904);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6900.cljs$lang$maxFixedArity = 3;
G__6900.cljs$lang$applyTo = G__6900__4.cljs$lang$applyTo;
G__6900.cljs$core$IFn$_invoke$arity$0 = G__6900__0;
G__6900.cljs$core$IFn$_invoke$arity$1 = G__6900__1;
G__6900.cljs$core$IFn$_invoke$arity$2 = G__6900__2;
G__6900.cljs$core$IFn$_invoke$arity$3 = G__6900__3;
G__6900.cljs$core$IFn$_invoke$arity$variadic = G__6900__4.cljs$core$IFn$_invoke$arity$variadic;
return G__6900;
})()
});
var juxt__4 = (function() { 
var G__6906__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__6907 = null;
var G__6907__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__6794_SHARP_,p2__6795_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__6794_SHARP_,(function (){return (p2__6795_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__6795_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__6795_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__6907__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__6796_SHARP_,p2__6797_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__6796_SHARP_,(function (){var G__6882 = x;
return (p2__6797_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__6797_SHARP_.cljs$core$IFn$_invoke$arity$1(G__6882) : p2__6797_SHARP_.call(null,G__6882));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__6907__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__6798_SHARP_,p2__6799_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__6798_SHARP_,(function (){var G__6883 = x;
var G__6884 = y;
return (p2__6799_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__6799_SHARP_.cljs$core$IFn$_invoke$arity$2(G__6883,G__6884) : p2__6799_SHARP_.call(null,G__6883,G__6884));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__6907__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__6800_SHARP_,p2__6801_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__6800_SHARP_,(function (){var G__6885 = x;
var G__6886 = y;
var G__6887 = z;
return (p2__6801_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__6801_SHARP_.cljs$core$IFn$_invoke$arity$3(G__6885,G__6886,G__6887) : p2__6801_SHARP_.call(null,G__6885,G__6886,G__6887));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__6907__4 = (function() { 
var G__6908__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__6802_SHARP_,p2__6803_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__6802_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__6803_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__6908 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__6909__i = 0, G__6909__a = new Array(arguments.length -  3);
while (G__6909__i < G__6909__a.length) {G__6909__a[G__6909__i] = arguments[G__6909__i + 3]; ++G__6909__i;}
  args = new cljs.core.IndexedSeq(G__6909__a,0);
} 
return G__6908__delegate.call(this,x,y,z,args);};
G__6908.cljs$lang$maxFixedArity = 3;
G__6908.cljs$lang$applyTo = (function (arglist__6910){
var x = cljs.core.first(arglist__6910);
arglist__6910 = cljs.core.next(arglist__6910);
var y = cljs.core.first(arglist__6910);
arglist__6910 = cljs.core.next(arglist__6910);
var z = cljs.core.first(arglist__6910);
var args = cljs.core.rest(arglist__6910);
return G__6908__delegate(x,y,z,args);
});
G__6908.cljs$core$IFn$_invoke$arity$variadic = G__6908__delegate;
return G__6908;
})()
;
G__6907 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__6907__0.call(this);
case 1:
return G__6907__1.call(this,x);
case 2:
return G__6907__2.call(this,x,y);
case 3:
return G__6907__3.call(this,x,y,z);
default:
var G__6911 = null;
if (arguments.length > 3) {
var G__6912__i = 0, G__6912__a = new Array(arguments.length -  3);
while (G__6912__i < G__6912__a.length) {G__6912__a[G__6912__i] = arguments[G__6912__i + 3]; ++G__6912__i;}
G__6911 = new cljs.core.IndexedSeq(G__6912__a,0);
}
return G__6907__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__6911);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6907.cljs$lang$maxFixedArity = 3;
G__6907.cljs$lang$applyTo = G__6907__4.cljs$lang$applyTo;
G__6907.cljs$core$IFn$_invoke$arity$0 = G__6907__0;
G__6907.cljs$core$IFn$_invoke$arity$1 = G__6907__1;
G__6907.cljs$core$IFn$_invoke$arity$2 = G__6907__2;
G__6907.cljs$core$IFn$_invoke$arity$3 = G__6907__3;
G__6907.cljs$core$IFn$_invoke$arity$variadic = G__6907__4.cljs$core$IFn$_invoke$arity$variadic;
return G__6907;
})()
;})(fs__$1))
};
var G__6906 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__6913__i = 0, G__6913__a = new Array(arguments.length -  3);
while (G__6913__i < G__6913__a.length) {G__6913__a[G__6913__i] = arguments[G__6913__i + 3]; ++G__6913__i;}
  fs = new cljs.core.IndexedSeq(G__6913__a,0);
} 
return G__6906__delegate.call(this,f,g,h,fs);};
G__6906.cljs$lang$maxFixedArity = 3;
G__6906.cljs$lang$applyTo = (function (arglist__6914){
var f = cljs.core.first(arglist__6914);
arglist__6914 = cljs.core.next(arglist__6914);
var g = cljs.core.first(arglist__6914);
arglist__6914 = cljs.core.next(arglist__6914);
var h = cljs.core.first(arglist__6914);
var fs = cljs.core.rest(arglist__6914);
return G__6906__delegate(f,g,h,fs);
});
G__6906.cljs$core$IFn$_invoke$arity$variadic = G__6906__delegate;
return G__6906;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__6915 = null;
if (arguments.length > 3) {
var G__6916__i = 0, G__6916__a = new Array(arguments.length -  3);
while (G__6916__i < G__6916__a.length) {G__6916__a[G__6916__i] = arguments[G__6916__i + 3]; ++G__6916__i;}
G__6915 = new cljs.core.IndexedSeq(G__6916__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__6915);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__6917 = cljs.core.next(coll);
coll = G__6917;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__6918 = (n - (1));
var G__6919 = cljs.core.next(coll);
n = G__6918;
coll = G__6919;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__6923 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6923,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6923,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6923,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_6931 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__3089__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__6932_6938 = cljs.core.first(coll);
var G__6933_6939 = writer;
var G__6934_6940 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__6932_6938,G__6933_6939,G__6934_6940) : print_one.call(null,G__6932_6938,G__6933_6939,G__6934_6940));
} else {
}

var coll_6941__$1 = cljs.core.next(coll);
var n_6942 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_6941__$1) && (((n_6942 == null)) || (!((n_6942 === (0)))))){
cljs.core._write(writer,sep);

var G__6935_6943 = cljs.core.first(coll_6941__$1);
var G__6936_6944 = writer;
var G__6937_6945 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__6935_6943,G__6936_6944,G__6937_6945) : print_one.call(null,G__6935_6943,G__6936_6944,G__6937_6945));

var G__6946 = cljs.core.next(coll_6941__$1);
var G__6947 = (n_6942 - (1));
coll_6941__$1 = G__6946;
n_6942 = G__6947;
continue;
} else {
if((cljs.core.seq(coll_6941__$1)) && ((n_6942 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__3089__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_6931;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__6952 = cljs.core.seq(ss);
var chunk__6953 = null;
var count__6954 = (0);
var i__6955 = (0);
while(true){
if((i__6955 < count__6954)){
var s = chunk__6953.cljs$core$IIndexed$_nth$arity$2(null,i__6955);
cljs.core._write(writer,s);

var G__6956 = seq__6952;
var G__6957 = chunk__6953;
var G__6958 = count__6954;
var G__6959 = (i__6955 + (1));
seq__6952 = G__6956;
chunk__6953 = G__6957;
count__6954 = G__6958;
i__6955 = G__6959;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__6952);
if(temp__4126__auto__){
var seq__6952__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__6952__$1)){
var c__3456__auto__ = cljs.core.chunk_first(seq__6952__$1);
var G__6960 = cljs.core.chunk_rest(seq__6952__$1);
var G__6961 = c__3456__auto__;
var G__6962 = cljs.core.count(c__3456__auto__);
var G__6963 = (0);
seq__6952 = G__6960;
chunk__6953 = G__6961;
count__6954 = G__6962;
i__6955 = G__6963;
continue;
} else {
var s = cljs.core.first(seq__6952__$1);
cljs.core._write(writer,s);

var G__6964 = cljs.core.next(seq__6952__$1);
var G__6965 = null;
var G__6966 = (0);
var G__6967 = (0);
seq__6952 = G__6964;
chunk__6953 = G__6965;
count__6954 = G__6966;
i__6955 = G__6967;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__6968__i = 0, G__6968__a = new Array(arguments.length -  1);
while (G__6968__i < G__6968__a.length) {G__6968__a[G__6968__i] = arguments[G__6968__i + 1]; ++G__6968__i;}
  ss = new cljs.core.IndexedSeq(G__6968__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__6969){
var writer = cljs.core.first(arglist__6969);
var ss = cljs.core.rest(arglist__6969);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj6971 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj6971;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__6974 = "[\\\\\"\b\f\n\r\t]";
var G__6975 = "g";
return RegExp(G__6974,G__6975);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3081__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3081__auto__)){
var and__3081__auto____$1 = (function (){var G__6989 = obj;
if(G__6989){
var bit__3386__auto__ = (G__6989.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__3386__auto__) || (G__6989.cljs$core$IMeta$)){
return true;
} else {
if((!G__6989.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__6989);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__6989);
}
})();
if(and__3081__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3081__auto____$1;
}
} else {
return and__3081__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__6990_7000 = cljs.core.meta(obj);
var G__6991_7001 = writer;
var G__6992_7002 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__6990_7000,G__6991_7001,G__6992_7002) : cljs.core.pr_writer.call(null,G__6990_7000,G__6991_7001,G__6992_7002));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__6993 = obj;
if(G__6993){
var bit__3383__auto__ = (G__6993.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__3383__auto__) || (G__6993.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__6994 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__6995 = cljs.core.pr_writer;
var G__6996 = writer;
var G__6997 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__6994,G__6995,G__6996,G__6997) : cljs.core.print_map.call(null,G__6994,G__6995,G__6996,G__6997));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__6998 = obj;
return goog.isString(G__6998);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__7003 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__7003;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__6999 = obj;
if(G__6999){
var bit__3386__auto__ = (G__6999.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__3386__auto__) || (G__6999.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__6999.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__6999);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__6999);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__7007 = obj;
var G__7008 = writer;
var G__7009 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__7007,G__7008,G__7009) : alt_impl.call(null,G__7007,G__7008,G__7009));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__7014 = cljs.core.seq(cljs.core.next(objs));
var chunk__7015 = null;
var count__7016 = (0);
var i__7017 = (0);
while(true){
if((i__7017 < count__7016)){
var obj = chunk__7015.cljs$core$IIndexed$_nth$arity$2(null,i__7017);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__7018 = seq__7014;
var G__7019 = chunk__7015;
var G__7020 = count__7016;
var G__7021 = (i__7017 + (1));
seq__7014 = G__7018;
chunk__7015 = G__7019;
count__7016 = G__7020;
i__7017 = G__7021;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__7014);
if(temp__4126__auto__){
var seq__7014__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__7014__$1)){
var c__3456__auto__ = cljs.core.chunk_first(seq__7014__$1);
var G__7022 = cljs.core.chunk_rest(seq__7014__$1);
var G__7023 = c__3456__auto__;
var G__7024 = cljs.core.count(c__3456__auto__);
var G__7025 = (0);
seq__7014 = G__7022;
chunk__7015 = G__7023;
count__7016 = G__7024;
i__7017 = G__7025;
continue;
} else {
var obj = cljs.core.first(seq__7014__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__7026 = cljs.core.next(seq__7014__$1);
var G__7027 = null;
var G__7028 = (0);
var G__7029 = (0);
seq__7014 = G__7026;
chunk__7015 = G__7027;
count__7016 = G__7028;
i__7017 = G__7029;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__7030__i = 0, G__7030__a = new Array(arguments.length -  0);
while (G__7030__i < G__7030__a.length) {G__7030__a[G__7030__i] = arguments[G__7030__i + 0]; ++G__7030__i;}
  objs = new cljs.core.IndexedSeq(G__7030__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__7031){
var objs = cljs.core.seq(arglist__7031);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__7032__i = 0, G__7032__a = new Array(arguments.length -  0);
while (G__7032__i < G__7032__a.length) {G__7032__a[G__7032__i] = arguments[G__7032__i + 0]; ++G__7032__i;}
  objs = new cljs.core.IndexedSeq(G__7032__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__7033){
var objs = cljs.core.seq(arglist__7033);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__7034__i = 0, G__7034__a = new Array(arguments.length -  0);
while (G__7034__i < G__7034__a.length) {G__7034__a[G__7034__i] = arguments[G__7034__i + 0]; ++G__7034__i;}
  objs = new cljs.core.IndexedSeq(G__7034__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__7035){
var objs = cljs.core.seq(arglist__7035);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__7036__i = 0, G__7036__a = new Array(arguments.length -  0);
while (G__7036__i < G__7036__a.length) {G__7036__a[G__7036__i] = arguments[G__7036__i + 0]; ++G__7036__i;}
  objs = new cljs.core.IndexedSeq(G__7036__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__7037){
var objs = cljs.core.seq(arglist__7037);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__7038__i = 0, G__7038__a = new Array(arguments.length -  0);
while (G__7038__i < G__7038__a.length) {G__7038__a[G__7038__i] = arguments[G__7038__i + 0]; ++G__7038__i;}
  objs = new cljs.core.IndexedSeq(G__7038__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__7039){
var objs = cljs.core.seq(arglist__7039);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__7040__i = 0, G__7040__a = new Array(arguments.length -  0);
while (G__7040__i < G__7040__a.length) {G__7040__a[G__7040__i] = arguments[G__7040__i + 0]; ++G__7040__i;}
  objs = new cljs.core.IndexedSeq(G__7040__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__7041){
var objs = cljs.core.seq(arglist__7041);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__7042__i = 0, G__7042__a = new Array(arguments.length -  0);
while (G__7042__i < G__7042__a.length) {G__7042__a[G__7042__i] = arguments[G__7042__i + 0]; ++G__7042__i;}
  objs = new cljs.core.IndexedSeq(G__7042__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__7043){
var objs = cljs.core.seq(arglist__7043);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__7044__i = 0, G__7044__a = new Array(arguments.length -  0);
while (G__7044__i < G__7044__a.length) {G__7044__a[G__7044__i] = arguments[G__7044__i + 0]; ++G__7044__i;}
  objs = new cljs.core.IndexedSeq(G__7044__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__7045){
var objs = cljs.core.seq(arglist__7045);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__7052_7058 = cljs.core.key(e);
var G__7053_7059 = w;
var G__7054_7060 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__7052_7058,G__7053_7059,G__7054_7060) : print_one.call(null,G__7052_7058,G__7053_7059,G__7054_7060));

cljs.core._write(w," ");

var G__7055 = cljs.core.val(e);
var G__7056 = w;
var G__7057 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__7055,G__7056,G__7057) : print_one.call(null,G__7055,G__7056,G__7057));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__7061__i = 0, G__7061__a = new Array(arguments.length -  2);
while (G__7061__i < G__7061__a.length) {G__7061__a[G__7061__i] = arguments[G__7061__i + 2]; ++G__7061__i;}
  args = new cljs.core.IndexedSeq(G__7061__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__7062){
var iref = cljs.core.first(arglist__7062);
arglist__7062 = cljs.core.next(arglist__7062);
var f = cljs.core.first(arglist__7062);
var args = cljs.core.rest(arglist__7062);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__7065 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__7065) : cljs.core.atom.call(null,G__7065));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__7067 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7067) : cljs.core.deref.call(null,G__7067));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__7068_SHARP_,p2__7069_SHARP_){
var ret = (function (){var G__7072 = p1__7068_SHARP_;
var G__7073 = p2__7069_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7072,G__7073) : rf.call(null,G__7072,G__7073));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__7076 = null;
var G__7076__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__7076__1 = (function (result){
var G__7075 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7075) : rf.call(null,G__7075));
});
var G__7076__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__7076 = function(result,input){
switch(arguments.length){
case 0:
return G__7076__0.call(this);
case 1:
return G__7076__1.call(this,result);
case 2:
return G__7076__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7076.cljs$core$IFn$_invoke$arity$0 = G__7076__0;
G__7076.cljs$core$IFn$_invoke$arity$1 = G__7076__1;
G__7076.cljs$core$IFn$_invoke$arity$2 = G__7076__2;
return G__7076;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__7085 = null;
var G__7085__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__7085__1 = (function (result){
var G__7081 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7081) : rf.call(null,G__7081));
});
var G__7085__2 = (function (result,input){
var prior = (function (){var G__7082 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7082) : cljs.core.deref.call(null,G__7082));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__7083 = result;
var G__7084 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7083,G__7084) : rf.call(null,G__7083,G__7084));
}
});
G__7085 = function(result,input){
switch(arguments.length){
case 0:
return G__7085__0.call(this);
case 1:
return G__7085__1.call(this,result);
case 2:
return G__7085__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7085.cljs$core$IFn$_invoke$arity$0 = G__7085__0;
G__7085.cljs$core$IFn$_invoke$arity$1 = G__7085__1;
G__7085.cljs$core$IFn$_invoke$arity$2 = G__7085__2;
return G__7085;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3563__auto__ = this;
return cljs.core.es6_iterator(this__3563__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__7087_SHARP_,p2__7086_SHARP_){
var G__7089 = p2__7086_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__7089) : proc.call(null,G__7089));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj7091 = {};
return obj7091;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3081__auto__ = x;
if(and__3081__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3081__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__3357__auto__ = (((x == null))?null:x);
return (function (){var or__3089__auto__ = (cljs.core._clj__GT_js[(function (){var G__7095 = x__3357__auto__;
return goog.typeOf(G__7095);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3081__auto__ = x;
if(and__3081__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3081__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__3357__auto__ = (((x == null))?null:x);
return (function (){var or__3089__auto__ = (cljs.core._key__GT_js[(function (){var G__7099 = x__3357__auto__;
return goog.typeOf(G__7099);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__7102 = k;
if(G__7102){
var bit__3386__auto__ = null;
if(cljs.core.truth_((function (){var or__3089__auto__ = bit__3386__auto__;
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
return G__7102.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__7102.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__7102);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__7102);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__7103 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__7103) : cljs.core.clj__GT_js.call(null,G__7103));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__7119 = x;
if(G__7119){
var bit__3386__auto__ = null;
if(cljs.core.truth_((function (){var or__3089__auto__ = bit__3386__auto__;
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
return G__7119.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__7119.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__7119);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__7119);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj7121 = {};
return obj7121;
})();
var seq__7122_7132 = cljs.core.seq(x);
var chunk__7123_7133 = null;
var count__7124_7134 = (0);
var i__7125_7135 = (0);
while(true){
if((i__7125_7135 < count__7124_7134)){
var vec__7126_7136 = chunk__7123_7133.cljs$core$IIndexed$_nth$arity$2(null,i__7125_7135);
var k_7137 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7126_7136,(0),null);
var v_7138 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7126_7136,(1),null);
(m[cljs.core.key__GT_js(k_7137)] = clj__GT_js(v_7138));

var G__7139 = seq__7122_7132;
var G__7140 = chunk__7123_7133;
var G__7141 = count__7124_7134;
var G__7142 = (i__7125_7135 + (1));
seq__7122_7132 = G__7139;
chunk__7123_7133 = G__7140;
count__7124_7134 = G__7141;
i__7125_7135 = G__7142;
continue;
} else {
var temp__4126__auto___7143 = cljs.core.seq(seq__7122_7132);
if(temp__4126__auto___7143){
var seq__7122_7144__$1 = temp__4126__auto___7143;
if(cljs.core.chunked_seq_QMARK_(seq__7122_7144__$1)){
var c__3456__auto___7145 = cljs.core.chunk_first(seq__7122_7144__$1);
var G__7146 = cljs.core.chunk_rest(seq__7122_7144__$1);
var G__7147 = c__3456__auto___7145;
var G__7148 = cljs.core.count(c__3456__auto___7145);
var G__7149 = (0);
seq__7122_7132 = G__7146;
chunk__7123_7133 = G__7147;
count__7124_7134 = G__7148;
i__7125_7135 = G__7149;
continue;
} else {
var vec__7127_7150 = cljs.core.first(seq__7122_7144__$1);
var k_7151 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7127_7150,(0),null);
var v_7152 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7127_7150,(1),null);
(m[cljs.core.key__GT_js(k_7151)] = clj__GT_js(v_7152));

var G__7153 = cljs.core.next(seq__7122_7144__$1);
var G__7154 = null;
var G__7155 = (0);
var G__7156 = (0);
seq__7122_7132 = G__7153;
chunk__7123_7133 = G__7154;
count__7124_7134 = G__7155;
i__7125_7135 = G__7156;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__7128_7157 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__7129_7158 = null;
var count__7130_7159 = (0);
var i__7131_7160 = (0);
while(true){
if((i__7131_7160 < count__7130_7159)){
var x_7161__$1 = chunk__7129_7158.cljs$core$IIndexed$_nth$arity$2(null,i__7131_7160);
arr.push(x_7161__$1);

var G__7162 = seq__7128_7157;
var G__7163 = chunk__7129_7158;
var G__7164 = count__7130_7159;
var G__7165 = (i__7131_7160 + (1));
seq__7128_7157 = G__7162;
chunk__7129_7158 = G__7163;
count__7130_7159 = G__7164;
i__7131_7160 = G__7165;
continue;
} else {
var temp__4126__auto___7166 = cljs.core.seq(seq__7128_7157);
if(temp__4126__auto___7166){
var seq__7128_7167__$1 = temp__4126__auto___7166;
if(cljs.core.chunked_seq_QMARK_(seq__7128_7167__$1)){
var c__3456__auto___7168 = cljs.core.chunk_first(seq__7128_7167__$1);
var G__7169 = cljs.core.chunk_rest(seq__7128_7167__$1);
var G__7170 = c__3456__auto___7168;
var G__7171 = cljs.core.count(c__3456__auto___7168);
var G__7172 = (0);
seq__7128_7157 = G__7169;
chunk__7129_7158 = G__7170;
count__7130_7159 = G__7171;
i__7131_7160 = G__7172;
continue;
} else {
var x_7173__$1 = cljs.core.first(seq__7128_7167__$1);
arr.push(x_7173__$1);

var G__7174 = cljs.core.next(seq__7128_7167__$1);
var G__7175 = null;
var G__7176 = (0);
var G__7177 = (0);
seq__7128_7157 = G__7174;
chunk__7129_7158 = G__7175;
count__7130_7159 = G__7176;
i__7131_7160 = G__7177;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj7179 = {};
return obj7179;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3081__auto__ = x;
if(and__3081__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3081__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__3357__auto__ = (((x == null))?null:x);
return (function (){var or__3089__auto__ = (cljs.core._js__GT_clj[(function (){var G__7183 = x__3357__auto__;
return goog.typeOf(G__7183);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__7240__delegate = function (x,opts){
var map__7213 = opts;
var map__7213__$1 = ((cljs.core.seq_QMARK_(map__7213))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__7213):map__7213);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7213__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__7213,map__7213__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__7229 = x__$1;
if(G__7229){
var bit__3386__auto__ = null;
if(cljs.core.truth_((function (){var or__3089__auto__ = bit__3386__auto__;
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
return G__7229.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__7229.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__7229);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__7229);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__3429__auto__ = ((function (map__7213,map__7213__$1,keywordize_keys,keyfn){
return (function iter__7230(s__7231){
return (new cljs.core.LazySeq(null,((function (map__7213,map__7213__$1,keywordize_keys,keyfn){
return (function (){
var s__7231__$1 = s__7231;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__7231__$1);
if(temp__4126__auto__){
var s__7231__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__7231__$2)){
var c__3427__auto__ = cljs.core.chunk_first(s__7231__$2);
var size__3428__auto__ = cljs.core.count(c__3427__auto__);
var b__7233 = cljs.core.chunk_buffer(size__3428__auto__);
if((function (){var i__7232 = (0);
while(true){
if((i__7232 < size__3428__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__3427__auto__,i__7232);
cljs.core.chunk_append(b__7233,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__7238 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__7238) : keyfn.call(null,G__7238));
})(),thisfn((x__$1[k]))], null));

var G__7241 = (i__7232 + (1));
i__7232 = G__7241;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__7233),iter__7230(cljs.core.chunk_rest(s__7231__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__7233),null);
}
} else {
var k = cljs.core.first(s__7231__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__7239 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__7239) : keyfn.call(null,G__7239));
})(),thisfn((x__$1[k]))], null),iter__7230(cljs.core.rest(s__7231__$2)));
}
} else {
return null;
}
break;
}
});})(map__7213,map__7213__$1,keywordize_keys,keyfn))
,null,null));
});})(map__7213,map__7213__$1,keywordize_keys,keyfn))
;
return iter__3429__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__7213,map__7213__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__7240 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__7242__i = 0, G__7242__a = new Array(arguments.length -  1);
while (G__7242__i < G__7242__a.length) {G__7242__a[G__7242__i] = arguments[G__7242__i + 1]; ++G__7242__i;}
  opts = new cljs.core.IndexedSeq(G__7242__a,0);
} 
return G__7240__delegate.call(this,x,opts);};
G__7240.cljs$lang$maxFixedArity = 1;
G__7240.cljs$lang$applyTo = (function (arglist__7243){
var x = cljs.core.first(arglist__7243);
var opts = cljs.core.rest(arglist__7243);
return G__7240__delegate(x,opts);
});
G__7240.cljs$core$IFn$_invoke$arity$variadic = G__7240__delegate;
return G__7240;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__7244 = null;
if (arguments.length > 1) {
var G__7245__i = 0, G__7245__a = new Array(arguments.length -  1);
while (G__7245__i < G__7245__a.length) {G__7245__a[G__7245__i] = arguments[G__7245__i + 1]; ++G__7245__i;}
G__7244 = new cljs.core.IndexedSeq(G__7245__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__7244);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__7248 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__7248) : cljs.core.atom.call(null,G__7248));
})();
return ((function (mem){
return (function() { 
var G__7250__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__7249 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7249) : cljs.core.deref.call(null,G__7249));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__7250 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7251__i = 0, G__7251__a = new Array(arguments.length -  0);
while (G__7251__i < G__7251__a.length) {G__7251__a[G__7251__i] = arguments[G__7251__i + 0]; ++G__7251__i;}
  args = new cljs.core.IndexedSeq(G__7251__a,0);
} 
return G__7250__delegate.call(this,args);};
G__7250.cljs$lang$maxFixedArity = 0;
G__7250.cljs$lang$applyTo = (function (arglist__7252){
var args = cljs.core.seq(arglist__7252);
return G__7250__delegate(args);
});
G__7250.cljs$core$IFn$_invoke$arity$variadic = G__7250__delegate;
return G__7250;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__7254 = ret;
f = G__7254;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__7255__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__7255 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__7256__i = 0, G__7256__a = new Array(arguments.length -  1);
while (G__7256__i < G__7256__a.length) {G__7256__a[G__7256__i] = arguments[G__7256__i + 1]; ++G__7256__i;}
  args = new cljs.core.IndexedSeq(G__7256__a,0);
} 
return G__7255__delegate.call(this,f,args);};
G__7255.cljs$lang$maxFixedArity = 1;
G__7255.cljs$lang$applyTo = (function (arglist__7257){
var f = cljs.core.first(arglist__7257);
var args = cljs.core.rest(arglist__7257);
return G__7255__delegate(f,args);
});
G__7255.cljs$core$IFn$_invoke$arity$variadic = G__7255__delegate;
return G__7255;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__7258 = null;
if (arguments.length > 1) {
var G__7259__i = 0, G__7259__a = new Array(arguments.length -  1);
while (G__7259__i < G__7259__a.length) {G__7259__a[G__7259__i] = arguments[G__7259__i + 1]; ++G__7259__i;}
G__7258 = new cljs.core.IndexedSeq(G__7259__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__7258);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__7262 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__7262) : Math.floor.call(null,G__7262));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__7264 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7264) : f.call(null,G__7264));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__7266 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__7266) : cljs.core.atom.call(null,G__7266));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__7267__i = 0, G__7267__a = new Array(arguments.length -  1);
while (G__7267__i < G__7267__a.length) {G__7267__a[G__7267__i] = arguments[G__7267__i + 1]; ++G__7267__i;}
  args = new cljs.core.IndexedSeq(G__7267__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__7268){
var f = cljs.core.first(arglist__7268);
var args = cljs.core.rest(arglist__7268);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__7333 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7333) : cljs.core.deref.call(null,G__7333));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3089__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
var and__3081__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3081__auto__){
var and__3081__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3081__auto____$1){
var and__3081__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3081__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__7358 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__7356 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__7356) : child.call(null,G__7356));
})(),(function (){var G__7357 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__7357) : parent.call(null,G__7357));
})());
var G__7359 = (i + (1));
ret = G__7358;
i = G__7359;
continue;
}
break;
}
} else {
return and__3081__auto____$2;
}
} else {
return and__3081__auto____$1;
}
} else {
return and__3081__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__7363 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7363) : cljs.core.deref.call(null,G__7363));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__7367 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7367) : cljs.core.deref.call(null,G__7367));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__7371 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7371) : cljs.core.deref.call(null,G__7371));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__7380 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__7380) : targets.call(null,G__7380));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__7381 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__7381) : sources.call(null,G__7381));
})()));
});})(tp,td,ta))
;
var or__3089__auto__ = ((cljs.core.contains_QMARK_((function (){var G__7385 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__7385) : tp.call(null,G__7385));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__7386 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__7386) : ta.call(null,G__7386));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__7387 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__7387) : ta.call(null,G__7387));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__7394 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__7394) : parentMap.call(null,G__7394));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__7395 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__7395) : parentMap.call(null,G__7395));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__7388_SHARP_){
return cljs.core.cons(cljs.core.first(p1__7388_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__7388_SHARP_),cljs.core.second(p1__7388_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__7396 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__7396) : parentMap.call(null,G__7396));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__7389_SHARP_,p2__7390_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__7389_SHARP_,p2__7390_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__7399 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7399) : cljs.core.deref.call(null,G__7399));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__7400 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7400) : cljs.core.deref.call(null,G__7400));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__7416 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7416) : cljs.core.deref.call(null,G__7416));
})().call(null,x);
var or__3089__auto__ = (cljs.core.truth_((function (){var and__3081__auto__ = xprefs;
if(cljs.core.truth_(and__3081__auto__)){
var G__7418 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__7418) : xprefs.call(null,G__7418));
} else {
return and__3081__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__7419 = cljs.core.rest(ps);
ps = G__7419;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3089__auto____$1)){
return or__3089__auto____$1;
} else {
var or__3089__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__7420 = cljs.core.rest(ps);
ps = G__7420;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3089__auto____$2)){
return or__3089__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3089__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3089__auto__)){
return or__3089__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__7434){
var vec__7435 = p__7434;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7435,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7435,(1),null);
var e = vec__7435;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__7436 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7436) : cljs.core.deref.call(null,G__7436));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3089__auto__ = (be == null);
if(or__3089__auto__){
return or__3089__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__7437 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7437) : cljs.core.deref.call(null,G__7437));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__7438 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7438) : cljs.core.deref.call(null,G__7438));
})(),(function (){var G__7439 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7439) : cljs.core.deref.call(null,G__7439));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj7441 = {};
return obj7441;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3081__auto__ = mf;
if(and__3081__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3081__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__3357__auto__ = (((mf == null))?null:mf);
return (function (){var or__3089__auto__ = (cljs.core._reset[(function (){var G__7445 = x__3357__auto__;
return goog.typeOf(G__7445);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._reset["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3081__auto__ = mf;
if(and__3081__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3081__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__3357__auto__ = (((mf == null))?null:mf);
return (function (){var or__3089__auto__ = (cljs.core._add_method[(function (){var G__7449 = x__3357__auto__;
return goog.typeOf(G__7449);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._add_method["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3081__auto__ = mf;
if(and__3081__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3081__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__3357__auto__ = (((mf == null))?null:mf);
return (function (){var or__3089__auto__ = (cljs.core._remove_method[(function (){var G__7453 = x__3357__auto__;
return goog.typeOf(G__7453);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3081__auto__ = mf;
if(and__3081__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3081__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__3357__auto__ = (((mf == null))?null:mf);
return (function (){var or__3089__auto__ = (cljs.core._prefer_method[(function (){var G__7457 = x__3357__auto__;
return goog.typeOf(G__7457);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3081__auto__ = mf;
if(and__3081__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3081__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__3357__auto__ = (((mf == null))?null:mf);
return (function (){var or__3089__auto__ = (cljs.core._get_method[(function (){var G__7461 = x__3357__auto__;
return goog.typeOf(G__7461);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._get_method["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3081__auto__ = mf;
if(and__3081__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3081__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__3357__auto__ = (((mf == null))?null:mf);
return (function (){var or__3089__auto__ = (cljs.core._methods[(function (){var G__7465 = x__3357__auto__;
return goog.typeOf(G__7465);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._methods["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3081__auto__ = mf;
if(and__3081__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3081__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__3357__auto__ = (((mf == null))?null:mf);
return (function (){var or__3089__auto__ = (cljs.core._prefers[(function (){var G__7469 = x__3357__auto__;
return goog.typeOf(G__7469);
})()]);
if(or__3089__auto__){
return or__3089__auto__;
} else {
var or__3089__auto____$1 = (cljs.core._prefers["_"]);
if(or__3089__auto____$1){
return or__3089__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__7471 = this$__$1;
return goog.getUid(G__7471);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__7472 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7472) : cljs.core.deref.call(null,G__7472));
})(),(function (){var G__7473 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7473) : cljs.core.deref.call(null,G__7473));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__7474 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7474) : cljs.core.deref.call(null,G__7474));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__7475 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7475) : cljs.core.deref.call(null,G__7475));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__7476 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7476) : cljs.core.deref.call(null,G__7476));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__7477 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7477) : cljs.core.deref.call(null,G__7477));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__8318 = null;
var G__8318__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__8318__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__7478 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__7478) : self__.dispatch_fn.call(null,G__7478));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7479 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__7479) : target_fn.call(null,G__7479));
});
var G__8318__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__7480 = a;
var G__7481 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__7480,G__7481) : self__.dispatch_fn.call(null,G__7480,G__7481));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7482 = a;
var G__7483 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__7482,G__7483) : target_fn.call(null,G__7482,G__7483));
});
var G__8318__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__7484 = a;
var G__7485 = b;
var G__7486 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__7484,G__7485,G__7486) : self__.dispatch_fn.call(null,G__7484,G__7485,G__7486));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7487 = a;
var G__7488 = b;
var G__7489 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__7487,G__7488,G__7489) : target_fn.call(null,G__7487,G__7488,G__7489));
});
var G__8318__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__7490 = a;
var G__7491 = b;
var G__7492 = c;
var G__7493 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__7490,G__7491,G__7492,G__7493) : self__.dispatch_fn.call(null,G__7490,G__7491,G__7492,G__7493));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7494 = a;
var G__7495 = b;
var G__7496 = c;
var G__7497 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__7494,G__7495,G__7496,G__7497) : target_fn.call(null,G__7494,G__7495,G__7496,G__7497));
});
var G__8318__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__7498 = a;
var G__7499 = b;
var G__7500 = c;
var G__7501 = d;
var G__7502 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__7498,G__7499,G__7500,G__7501,G__7502) : self__.dispatch_fn.call(null,G__7498,G__7499,G__7500,G__7501,G__7502));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7503 = a;
var G__7504 = b;
var G__7505 = c;
var G__7506 = d;
var G__7507 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__7503,G__7504,G__7505,G__7506,G__7507) : target_fn.call(null,G__7503,G__7504,G__7505,G__7506,G__7507));
});
var G__8318__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__7508 = a;
var G__7509 = b;
var G__7510 = c;
var G__7511 = d;
var G__7512 = e;
var G__7513 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__7508,G__7509,G__7510,G__7511,G__7512,G__7513) : self__.dispatch_fn.call(null,G__7508,G__7509,G__7510,G__7511,G__7512,G__7513));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7514 = a;
var G__7515 = b;
var G__7516 = c;
var G__7517 = d;
var G__7518 = e;
var G__7519 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__7514,G__7515,G__7516,G__7517,G__7518,G__7519) : target_fn.call(null,G__7514,G__7515,G__7516,G__7517,G__7518,G__7519));
});
var G__8318__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__7520 = a;
var G__7521 = b;
var G__7522 = c;
var G__7523 = d;
var G__7524 = e;
var G__7525 = f;
var G__7526 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__7520,G__7521,G__7522,G__7523,G__7524,G__7525,G__7526) : self__.dispatch_fn.call(null,G__7520,G__7521,G__7522,G__7523,G__7524,G__7525,G__7526));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7527 = a;
var G__7528 = b;
var G__7529 = c;
var G__7530 = d;
var G__7531 = e;
var G__7532 = f;
var G__7533 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__7527,G__7528,G__7529,G__7530,G__7531,G__7532,G__7533) : target_fn.call(null,G__7527,G__7528,G__7529,G__7530,G__7531,G__7532,G__7533));
});
var G__8318__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__7534 = a;
var G__7535 = b;
var G__7536 = c;
var G__7537 = d;
var G__7538 = e;
var G__7539 = f;
var G__7540 = g;
var G__7541 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__7534,G__7535,G__7536,G__7537,G__7538,G__7539,G__7540,G__7541) : self__.dispatch_fn.call(null,G__7534,G__7535,G__7536,G__7537,G__7538,G__7539,G__7540,G__7541));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7542 = a;
var G__7543 = b;
var G__7544 = c;
var G__7545 = d;
var G__7546 = e;
var G__7547 = f;
var G__7548 = g;
var G__7549 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__7542,G__7543,G__7544,G__7545,G__7546,G__7547,G__7548,G__7549) : target_fn.call(null,G__7542,G__7543,G__7544,G__7545,G__7546,G__7547,G__7548,G__7549));
});
var G__8318__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__7550 = a;
var G__7551 = b;
var G__7552 = c;
var G__7553 = d;
var G__7554 = e;
var G__7555 = f;
var G__7556 = g;
var G__7557 = h;
var G__7558 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__7550,G__7551,G__7552,G__7553,G__7554,G__7555,G__7556,G__7557,G__7558) : self__.dispatch_fn.call(null,G__7550,G__7551,G__7552,G__7553,G__7554,G__7555,G__7556,G__7557,G__7558));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7559 = a;
var G__7560 = b;
var G__7561 = c;
var G__7562 = d;
var G__7563 = e;
var G__7564 = f;
var G__7565 = g;
var G__7566 = h;
var G__7567 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__7559,G__7560,G__7561,G__7562,G__7563,G__7564,G__7565,G__7566,G__7567) : target_fn.call(null,G__7559,G__7560,G__7561,G__7562,G__7563,G__7564,G__7565,G__7566,G__7567));
});
var G__8318__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__7568 = a;
var G__7569 = b;
var G__7570 = c;
var G__7571 = d;
var G__7572 = e;
var G__7573 = f;
var G__7574 = g;
var G__7575 = h;
var G__7576 = i;
var G__7577 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__7568,G__7569,G__7570,G__7571,G__7572,G__7573,G__7574,G__7575,G__7576,G__7577) : self__.dispatch_fn.call(null,G__7568,G__7569,G__7570,G__7571,G__7572,G__7573,G__7574,G__7575,G__7576,G__7577));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7578 = a;
var G__7579 = b;
var G__7580 = c;
var G__7581 = d;
var G__7582 = e;
var G__7583 = f;
var G__7584 = g;
var G__7585 = h;
var G__7586 = i;
var G__7587 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__7578,G__7579,G__7580,G__7581,G__7582,G__7583,G__7584,G__7585,G__7586,G__7587) : target_fn.call(null,G__7578,G__7579,G__7580,G__7581,G__7582,G__7583,G__7584,G__7585,G__7586,G__7587));
});
var G__8318__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__7588 = a;
var G__7589 = b;
var G__7590 = c;
var G__7591 = d;
var G__7592 = e;
var G__7593 = f;
var G__7594 = g;
var G__7595 = h;
var G__7596 = i;
var G__7597 = j;
var G__7598 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__7588,G__7589,G__7590,G__7591,G__7592,G__7593,G__7594,G__7595,G__7596,G__7597,G__7598) : self__.dispatch_fn.call(null,G__7588,G__7589,G__7590,G__7591,G__7592,G__7593,G__7594,G__7595,G__7596,G__7597,G__7598));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7599 = a;
var G__7600 = b;
var G__7601 = c;
var G__7602 = d;
var G__7603 = e;
var G__7604 = f;
var G__7605 = g;
var G__7606 = h;
var G__7607 = i;
var G__7608 = j;
var G__7609 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__7599,G__7600,G__7601,G__7602,G__7603,G__7604,G__7605,G__7606,G__7607,G__7608,G__7609) : target_fn.call(null,G__7599,G__7600,G__7601,G__7602,G__7603,G__7604,G__7605,G__7606,G__7607,G__7608,G__7609));
});
var G__8318__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__7610 = a;
var G__7611 = b;
var G__7612 = c;
var G__7613 = d;
var G__7614 = e;
var G__7615 = f;
var G__7616 = g;
var G__7617 = h;
var G__7618 = i;
var G__7619 = j;
var G__7620 = k;
var G__7621 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__7610,G__7611,G__7612,G__7613,G__7614,G__7615,G__7616,G__7617,G__7618,G__7619,G__7620,G__7621) : self__.dispatch_fn.call(null,G__7610,G__7611,G__7612,G__7613,G__7614,G__7615,G__7616,G__7617,G__7618,G__7619,G__7620,G__7621));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7622 = a;
var G__7623 = b;
var G__7624 = c;
var G__7625 = d;
var G__7626 = e;
var G__7627 = f;
var G__7628 = g;
var G__7629 = h;
var G__7630 = i;
var G__7631 = j;
var G__7632 = k;
var G__7633 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__7622,G__7623,G__7624,G__7625,G__7626,G__7627,G__7628,G__7629,G__7630,G__7631,G__7632,G__7633) : target_fn.call(null,G__7622,G__7623,G__7624,G__7625,G__7626,G__7627,G__7628,G__7629,G__7630,G__7631,G__7632,G__7633));
});
var G__8318__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__7634 = a;
var G__7635 = b;
var G__7636 = c;
var G__7637 = d;
var G__7638 = e;
var G__7639 = f;
var G__7640 = g;
var G__7641 = h;
var G__7642 = i;
var G__7643 = j;
var G__7644 = k;
var G__7645 = l;
var G__7646 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__7634,G__7635,G__7636,G__7637,G__7638,G__7639,G__7640,G__7641,G__7642,G__7643,G__7644,G__7645,G__7646) : self__.dispatch_fn.call(null,G__7634,G__7635,G__7636,G__7637,G__7638,G__7639,G__7640,G__7641,G__7642,G__7643,G__7644,G__7645,G__7646));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7647 = a;
var G__7648 = b;
var G__7649 = c;
var G__7650 = d;
var G__7651 = e;
var G__7652 = f;
var G__7653 = g;
var G__7654 = h;
var G__7655 = i;
var G__7656 = j;
var G__7657 = k;
var G__7658 = l;
var G__7659 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__7647,G__7648,G__7649,G__7650,G__7651,G__7652,G__7653,G__7654,G__7655,G__7656,G__7657,G__7658,G__7659) : target_fn.call(null,G__7647,G__7648,G__7649,G__7650,G__7651,G__7652,G__7653,G__7654,G__7655,G__7656,G__7657,G__7658,G__7659));
});
var G__8318__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__7660 = a;
var G__7661 = b;
var G__7662 = c;
var G__7663 = d;
var G__7664 = e;
var G__7665 = f;
var G__7666 = g;
var G__7667 = h;
var G__7668 = i;
var G__7669 = j;
var G__7670 = k;
var G__7671 = l;
var G__7672 = m;
var G__7673 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__7660,G__7661,G__7662,G__7663,G__7664,G__7665,G__7666,G__7667,G__7668,G__7669,G__7670,G__7671,G__7672,G__7673) : self__.dispatch_fn.call(null,G__7660,G__7661,G__7662,G__7663,G__7664,G__7665,G__7666,G__7667,G__7668,G__7669,G__7670,G__7671,G__7672,G__7673));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7674 = a;
var G__7675 = b;
var G__7676 = c;
var G__7677 = d;
var G__7678 = e;
var G__7679 = f;
var G__7680 = g;
var G__7681 = h;
var G__7682 = i;
var G__7683 = j;
var G__7684 = k;
var G__7685 = l;
var G__7686 = m;
var G__7687 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__7674,G__7675,G__7676,G__7677,G__7678,G__7679,G__7680,G__7681,G__7682,G__7683,G__7684,G__7685,G__7686,G__7687) : target_fn.call(null,G__7674,G__7675,G__7676,G__7677,G__7678,G__7679,G__7680,G__7681,G__7682,G__7683,G__7684,G__7685,G__7686,G__7687));
});
var G__8318__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__7688 = a;
var G__7689 = b;
var G__7690 = c;
var G__7691 = d;
var G__7692 = e;
var G__7693 = f;
var G__7694 = g;
var G__7695 = h;
var G__7696 = i;
var G__7697 = j;
var G__7698 = k;
var G__7699 = l;
var G__7700 = m;
var G__7701 = n;
var G__7702 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__7688,G__7689,G__7690,G__7691,G__7692,G__7693,G__7694,G__7695,G__7696,G__7697,G__7698,G__7699,G__7700,G__7701,G__7702) : self__.dispatch_fn.call(null,G__7688,G__7689,G__7690,G__7691,G__7692,G__7693,G__7694,G__7695,G__7696,G__7697,G__7698,G__7699,G__7700,G__7701,G__7702));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7703 = a;
var G__7704 = b;
var G__7705 = c;
var G__7706 = d;
var G__7707 = e;
var G__7708 = f;
var G__7709 = g;
var G__7710 = h;
var G__7711 = i;
var G__7712 = j;
var G__7713 = k;
var G__7714 = l;
var G__7715 = m;
var G__7716 = n;
var G__7717 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__7703,G__7704,G__7705,G__7706,G__7707,G__7708,G__7709,G__7710,G__7711,G__7712,G__7713,G__7714,G__7715,G__7716,G__7717) : target_fn.call(null,G__7703,G__7704,G__7705,G__7706,G__7707,G__7708,G__7709,G__7710,G__7711,G__7712,G__7713,G__7714,G__7715,G__7716,G__7717));
});
var G__8318__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__7718 = a;
var G__7719 = b;
var G__7720 = c;
var G__7721 = d;
var G__7722 = e;
var G__7723 = f;
var G__7724 = g;
var G__7725 = h;
var G__7726 = i;
var G__7727 = j;
var G__7728 = k;
var G__7729 = l;
var G__7730 = m;
var G__7731 = n;
var G__7732 = o;
var G__7733 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__7718,G__7719,G__7720,G__7721,G__7722,G__7723,G__7724,G__7725,G__7726,G__7727,G__7728,G__7729,G__7730,G__7731,G__7732,G__7733) : self__.dispatch_fn.call(null,G__7718,G__7719,G__7720,G__7721,G__7722,G__7723,G__7724,G__7725,G__7726,G__7727,G__7728,G__7729,G__7730,G__7731,G__7732,G__7733));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7734 = a;
var G__7735 = b;
var G__7736 = c;
var G__7737 = d;
var G__7738 = e;
var G__7739 = f;
var G__7740 = g;
var G__7741 = h;
var G__7742 = i;
var G__7743 = j;
var G__7744 = k;
var G__7745 = l;
var G__7746 = m;
var G__7747 = n;
var G__7748 = o;
var G__7749 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__7734,G__7735,G__7736,G__7737,G__7738,G__7739,G__7740,G__7741,G__7742,G__7743,G__7744,G__7745,G__7746,G__7747,G__7748,G__7749) : target_fn.call(null,G__7734,G__7735,G__7736,G__7737,G__7738,G__7739,G__7740,G__7741,G__7742,G__7743,G__7744,G__7745,G__7746,G__7747,G__7748,G__7749));
});
var G__8318__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__7750 = a;
var G__7751 = b;
var G__7752 = c;
var G__7753 = d;
var G__7754 = e;
var G__7755 = f;
var G__7756 = g;
var G__7757 = h;
var G__7758 = i;
var G__7759 = j;
var G__7760 = k;
var G__7761 = l;
var G__7762 = m;
var G__7763 = n;
var G__7764 = o;
var G__7765 = p;
var G__7766 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__7750,G__7751,G__7752,G__7753,G__7754,G__7755,G__7756,G__7757,G__7758,G__7759,G__7760,G__7761,G__7762,G__7763,G__7764,G__7765,G__7766) : self__.dispatch_fn.call(null,G__7750,G__7751,G__7752,G__7753,G__7754,G__7755,G__7756,G__7757,G__7758,G__7759,G__7760,G__7761,G__7762,G__7763,G__7764,G__7765,G__7766));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7767 = a;
var G__7768 = b;
var G__7769 = c;
var G__7770 = d;
var G__7771 = e;
var G__7772 = f;
var G__7773 = g;
var G__7774 = h;
var G__7775 = i;
var G__7776 = j;
var G__7777 = k;
var G__7778 = l;
var G__7779 = m;
var G__7780 = n;
var G__7781 = o;
var G__7782 = p;
var G__7783 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__7767,G__7768,G__7769,G__7770,G__7771,G__7772,G__7773,G__7774,G__7775,G__7776,G__7777,G__7778,G__7779,G__7780,G__7781,G__7782,G__7783) : target_fn.call(null,G__7767,G__7768,G__7769,G__7770,G__7771,G__7772,G__7773,G__7774,G__7775,G__7776,G__7777,G__7778,G__7779,G__7780,G__7781,G__7782,G__7783));
});
var G__8318__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__7784 = a;
var G__7785 = b;
var G__7786 = c;
var G__7787 = d;
var G__7788 = e;
var G__7789 = f;
var G__7790 = g;
var G__7791 = h;
var G__7792 = i;
var G__7793 = j;
var G__7794 = k;
var G__7795 = l;
var G__7796 = m;
var G__7797 = n;
var G__7798 = o;
var G__7799 = p;
var G__7800 = q;
var G__7801 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__7784,G__7785,G__7786,G__7787,G__7788,G__7789,G__7790,G__7791,G__7792,G__7793,G__7794,G__7795,G__7796,G__7797,G__7798,G__7799,G__7800,G__7801) : self__.dispatch_fn.call(null,G__7784,G__7785,G__7786,G__7787,G__7788,G__7789,G__7790,G__7791,G__7792,G__7793,G__7794,G__7795,G__7796,G__7797,G__7798,G__7799,G__7800,G__7801));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7802 = a;
var G__7803 = b;
var G__7804 = c;
var G__7805 = d;
var G__7806 = e;
var G__7807 = f;
var G__7808 = g;
var G__7809 = h;
var G__7810 = i;
var G__7811 = j;
var G__7812 = k;
var G__7813 = l;
var G__7814 = m;
var G__7815 = n;
var G__7816 = o;
var G__7817 = p;
var G__7818 = q;
var G__7819 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__7802,G__7803,G__7804,G__7805,G__7806,G__7807,G__7808,G__7809,G__7810,G__7811,G__7812,G__7813,G__7814,G__7815,G__7816,G__7817,G__7818,G__7819) : target_fn.call(null,G__7802,G__7803,G__7804,G__7805,G__7806,G__7807,G__7808,G__7809,G__7810,G__7811,G__7812,G__7813,G__7814,G__7815,G__7816,G__7817,G__7818,G__7819));
});
var G__8318__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__7820 = a;
var G__7821 = b;
var G__7822 = c;
var G__7823 = d;
var G__7824 = e;
var G__7825 = f;
var G__7826 = g;
var G__7827 = h;
var G__7828 = i;
var G__7829 = j;
var G__7830 = k;
var G__7831 = l;
var G__7832 = m;
var G__7833 = n;
var G__7834 = o;
var G__7835 = p;
var G__7836 = q;
var G__7837 = r;
var G__7838 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__7820,G__7821,G__7822,G__7823,G__7824,G__7825,G__7826,G__7827,G__7828,G__7829,G__7830,G__7831,G__7832,G__7833,G__7834,G__7835,G__7836,G__7837,G__7838) : self__.dispatch_fn.call(null,G__7820,G__7821,G__7822,G__7823,G__7824,G__7825,G__7826,G__7827,G__7828,G__7829,G__7830,G__7831,G__7832,G__7833,G__7834,G__7835,G__7836,G__7837,G__7838));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7839 = a;
var G__7840 = b;
var G__7841 = c;
var G__7842 = d;
var G__7843 = e;
var G__7844 = f;
var G__7845 = g;
var G__7846 = h;
var G__7847 = i;
var G__7848 = j;
var G__7849 = k;
var G__7850 = l;
var G__7851 = m;
var G__7852 = n;
var G__7853 = o;
var G__7854 = p;
var G__7855 = q;
var G__7856 = r;
var G__7857 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__7839,G__7840,G__7841,G__7842,G__7843,G__7844,G__7845,G__7846,G__7847,G__7848,G__7849,G__7850,G__7851,G__7852,G__7853,G__7854,G__7855,G__7856,G__7857) : target_fn.call(null,G__7839,G__7840,G__7841,G__7842,G__7843,G__7844,G__7845,G__7846,G__7847,G__7848,G__7849,G__7850,G__7851,G__7852,G__7853,G__7854,G__7855,G__7856,G__7857));
});
var G__8318__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__7858 = a;
var G__7859 = b;
var G__7860 = c;
var G__7861 = d;
var G__7862 = e;
var G__7863 = f;
var G__7864 = g;
var G__7865 = h;
var G__7866 = i;
var G__7867 = j;
var G__7868 = k;
var G__7869 = l;
var G__7870 = m;
var G__7871 = n;
var G__7872 = o;
var G__7873 = p;
var G__7874 = q;
var G__7875 = r;
var G__7876 = s;
var G__7877 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__7858,G__7859,G__7860,G__7861,G__7862,G__7863,G__7864,G__7865,G__7866,G__7867,G__7868,G__7869,G__7870,G__7871,G__7872,G__7873,G__7874,G__7875,G__7876,G__7877) : self__.dispatch_fn.call(null,G__7858,G__7859,G__7860,G__7861,G__7862,G__7863,G__7864,G__7865,G__7866,G__7867,G__7868,G__7869,G__7870,G__7871,G__7872,G__7873,G__7874,G__7875,G__7876,G__7877));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7878 = a;
var G__7879 = b;
var G__7880 = c;
var G__7881 = d;
var G__7882 = e;
var G__7883 = f;
var G__7884 = g;
var G__7885 = h;
var G__7886 = i;
var G__7887 = j;
var G__7888 = k;
var G__7889 = l;
var G__7890 = m;
var G__7891 = n;
var G__7892 = o;
var G__7893 = p;
var G__7894 = q;
var G__7895 = r;
var G__7896 = s;
var G__7897 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__7878,G__7879,G__7880,G__7881,G__7882,G__7883,G__7884,G__7885,G__7886,G__7887,G__7888,G__7889,G__7890,G__7891,G__7892,G__7893,G__7894,G__7895,G__7896,G__7897) : target_fn.call(null,G__7878,G__7879,G__7880,G__7881,G__7882,G__7883,G__7884,G__7885,G__7886,G__7887,G__7888,G__7889,G__7890,G__7891,G__7892,G__7893,G__7894,G__7895,G__7896,G__7897));
});
var G__8318__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__8318 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__8318__1.call(this,self__);
case 2:
return G__8318__2.call(this,self__,a);
case 3:
return G__8318__3.call(this,self__,a,b);
case 4:
return G__8318__4.call(this,self__,a,b,c);
case 5:
return G__8318__5.call(this,self__,a,b,c,d);
case 6:
return G__8318__6.call(this,self__,a,b,c,d,e);
case 7:
return G__8318__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__8318__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__8318__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__8318__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__8318__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__8318__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__8318__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__8318__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__8318__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__8318__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__8318__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__8318__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__8318__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__8318__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__8318__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__8318__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8318.cljs$core$IFn$_invoke$arity$1 = G__8318__1;
G__8318.cljs$core$IFn$_invoke$arity$2 = G__8318__2;
G__8318.cljs$core$IFn$_invoke$arity$3 = G__8318__3;
G__8318.cljs$core$IFn$_invoke$arity$4 = G__8318__4;
G__8318.cljs$core$IFn$_invoke$arity$5 = G__8318__5;
G__8318.cljs$core$IFn$_invoke$arity$6 = G__8318__6;
G__8318.cljs$core$IFn$_invoke$arity$7 = G__8318__7;
G__8318.cljs$core$IFn$_invoke$arity$8 = G__8318__8;
G__8318.cljs$core$IFn$_invoke$arity$9 = G__8318__9;
G__8318.cljs$core$IFn$_invoke$arity$10 = G__8318__10;
G__8318.cljs$core$IFn$_invoke$arity$11 = G__8318__11;
G__8318.cljs$core$IFn$_invoke$arity$12 = G__8318__12;
G__8318.cljs$core$IFn$_invoke$arity$13 = G__8318__13;
G__8318.cljs$core$IFn$_invoke$arity$14 = G__8318__14;
G__8318.cljs$core$IFn$_invoke$arity$15 = G__8318__15;
G__8318.cljs$core$IFn$_invoke$arity$16 = G__8318__16;
G__8318.cljs$core$IFn$_invoke$arity$17 = G__8318__17;
G__8318.cljs$core$IFn$_invoke$arity$18 = G__8318__18;
G__8318.cljs$core$IFn$_invoke$arity$19 = G__8318__19;
G__8318.cljs$core$IFn$_invoke$arity$20 = G__8318__20;
G__8318.cljs$core$IFn$_invoke$arity$21 = G__8318__21;
G__8318.cljs$core$IFn$_invoke$arity$22 = G__8318__22;
return G__8318;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args7470){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7470)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__7898 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__7898) : self__.dispatch_fn.call(null,G__7898));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7899 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__7899) : target_fn.call(null,G__7899));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__7900 = a;
var G__7901 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__7900,G__7901) : self__.dispatch_fn.call(null,G__7900,G__7901));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7902 = a;
var G__7903 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__7902,G__7903) : target_fn.call(null,G__7902,G__7903));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__7904 = a;
var G__7905 = b;
var G__7906 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__7904,G__7905,G__7906) : self__.dispatch_fn.call(null,G__7904,G__7905,G__7906));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7907 = a;
var G__7908 = b;
var G__7909 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__7907,G__7908,G__7909) : target_fn.call(null,G__7907,G__7908,G__7909));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__7910 = a;
var G__7911 = b;
var G__7912 = c;
var G__7913 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__7910,G__7911,G__7912,G__7913) : self__.dispatch_fn.call(null,G__7910,G__7911,G__7912,G__7913));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7914 = a;
var G__7915 = b;
var G__7916 = c;
var G__7917 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__7914,G__7915,G__7916,G__7917) : target_fn.call(null,G__7914,G__7915,G__7916,G__7917));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__7918 = a;
var G__7919 = b;
var G__7920 = c;
var G__7921 = d;
var G__7922 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__7918,G__7919,G__7920,G__7921,G__7922) : self__.dispatch_fn.call(null,G__7918,G__7919,G__7920,G__7921,G__7922));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7923 = a;
var G__7924 = b;
var G__7925 = c;
var G__7926 = d;
var G__7927 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__7923,G__7924,G__7925,G__7926,G__7927) : target_fn.call(null,G__7923,G__7924,G__7925,G__7926,G__7927));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__7928 = a;
var G__7929 = b;
var G__7930 = c;
var G__7931 = d;
var G__7932 = e;
var G__7933 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__7928,G__7929,G__7930,G__7931,G__7932,G__7933) : self__.dispatch_fn.call(null,G__7928,G__7929,G__7930,G__7931,G__7932,G__7933));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7934 = a;
var G__7935 = b;
var G__7936 = c;
var G__7937 = d;
var G__7938 = e;
var G__7939 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__7934,G__7935,G__7936,G__7937,G__7938,G__7939) : target_fn.call(null,G__7934,G__7935,G__7936,G__7937,G__7938,G__7939));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__7940 = a;
var G__7941 = b;
var G__7942 = c;
var G__7943 = d;
var G__7944 = e;
var G__7945 = f;
var G__7946 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__7940,G__7941,G__7942,G__7943,G__7944,G__7945,G__7946) : self__.dispatch_fn.call(null,G__7940,G__7941,G__7942,G__7943,G__7944,G__7945,G__7946));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7947 = a;
var G__7948 = b;
var G__7949 = c;
var G__7950 = d;
var G__7951 = e;
var G__7952 = f;
var G__7953 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__7947,G__7948,G__7949,G__7950,G__7951,G__7952,G__7953) : target_fn.call(null,G__7947,G__7948,G__7949,G__7950,G__7951,G__7952,G__7953));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__7954 = a;
var G__7955 = b;
var G__7956 = c;
var G__7957 = d;
var G__7958 = e;
var G__7959 = f;
var G__7960 = g;
var G__7961 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__7954,G__7955,G__7956,G__7957,G__7958,G__7959,G__7960,G__7961) : self__.dispatch_fn.call(null,G__7954,G__7955,G__7956,G__7957,G__7958,G__7959,G__7960,G__7961));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7962 = a;
var G__7963 = b;
var G__7964 = c;
var G__7965 = d;
var G__7966 = e;
var G__7967 = f;
var G__7968 = g;
var G__7969 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__7962,G__7963,G__7964,G__7965,G__7966,G__7967,G__7968,G__7969) : target_fn.call(null,G__7962,G__7963,G__7964,G__7965,G__7966,G__7967,G__7968,G__7969));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__7970 = a;
var G__7971 = b;
var G__7972 = c;
var G__7973 = d;
var G__7974 = e;
var G__7975 = f;
var G__7976 = g;
var G__7977 = h;
var G__7978 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__7970,G__7971,G__7972,G__7973,G__7974,G__7975,G__7976,G__7977,G__7978) : self__.dispatch_fn.call(null,G__7970,G__7971,G__7972,G__7973,G__7974,G__7975,G__7976,G__7977,G__7978));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7979 = a;
var G__7980 = b;
var G__7981 = c;
var G__7982 = d;
var G__7983 = e;
var G__7984 = f;
var G__7985 = g;
var G__7986 = h;
var G__7987 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__7979,G__7980,G__7981,G__7982,G__7983,G__7984,G__7985,G__7986,G__7987) : target_fn.call(null,G__7979,G__7980,G__7981,G__7982,G__7983,G__7984,G__7985,G__7986,G__7987));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__7988 = a;
var G__7989 = b;
var G__7990 = c;
var G__7991 = d;
var G__7992 = e;
var G__7993 = f;
var G__7994 = g;
var G__7995 = h;
var G__7996 = i;
var G__7997 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__7988,G__7989,G__7990,G__7991,G__7992,G__7993,G__7994,G__7995,G__7996,G__7997) : self__.dispatch_fn.call(null,G__7988,G__7989,G__7990,G__7991,G__7992,G__7993,G__7994,G__7995,G__7996,G__7997));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__7998 = a;
var G__7999 = b;
var G__8000 = c;
var G__8001 = d;
var G__8002 = e;
var G__8003 = f;
var G__8004 = g;
var G__8005 = h;
var G__8006 = i;
var G__8007 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__7998,G__7999,G__8000,G__8001,G__8002,G__8003,G__8004,G__8005,G__8006,G__8007) : target_fn.call(null,G__7998,G__7999,G__8000,G__8001,G__8002,G__8003,G__8004,G__8005,G__8006,G__8007));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__8008 = a;
var G__8009 = b;
var G__8010 = c;
var G__8011 = d;
var G__8012 = e;
var G__8013 = f;
var G__8014 = g;
var G__8015 = h;
var G__8016 = i;
var G__8017 = j;
var G__8018 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__8008,G__8009,G__8010,G__8011,G__8012,G__8013,G__8014,G__8015,G__8016,G__8017,G__8018) : self__.dispatch_fn.call(null,G__8008,G__8009,G__8010,G__8011,G__8012,G__8013,G__8014,G__8015,G__8016,G__8017,G__8018));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__8019 = a;
var G__8020 = b;
var G__8021 = c;
var G__8022 = d;
var G__8023 = e;
var G__8024 = f;
var G__8025 = g;
var G__8026 = h;
var G__8027 = i;
var G__8028 = j;
var G__8029 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__8019,G__8020,G__8021,G__8022,G__8023,G__8024,G__8025,G__8026,G__8027,G__8028,G__8029) : target_fn.call(null,G__8019,G__8020,G__8021,G__8022,G__8023,G__8024,G__8025,G__8026,G__8027,G__8028,G__8029));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__8030 = a;
var G__8031 = b;
var G__8032 = c;
var G__8033 = d;
var G__8034 = e;
var G__8035 = f;
var G__8036 = g;
var G__8037 = h;
var G__8038 = i;
var G__8039 = j;
var G__8040 = k;
var G__8041 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__8030,G__8031,G__8032,G__8033,G__8034,G__8035,G__8036,G__8037,G__8038,G__8039,G__8040,G__8041) : self__.dispatch_fn.call(null,G__8030,G__8031,G__8032,G__8033,G__8034,G__8035,G__8036,G__8037,G__8038,G__8039,G__8040,G__8041));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__8042 = a;
var G__8043 = b;
var G__8044 = c;
var G__8045 = d;
var G__8046 = e;
var G__8047 = f;
var G__8048 = g;
var G__8049 = h;
var G__8050 = i;
var G__8051 = j;
var G__8052 = k;
var G__8053 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__8042,G__8043,G__8044,G__8045,G__8046,G__8047,G__8048,G__8049,G__8050,G__8051,G__8052,G__8053) : target_fn.call(null,G__8042,G__8043,G__8044,G__8045,G__8046,G__8047,G__8048,G__8049,G__8050,G__8051,G__8052,G__8053));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__8054 = a;
var G__8055 = b;
var G__8056 = c;
var G__8057 = d;
var G__8058 = e;
var G__8059 = f;
var G__8060 = g;
var G__8061 = h;
var G__8062 = i;
var G__8063 = j;
var G__8064 = k;
var G__8065 = l;
var G__8066 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__8054,G__8055,G__8056,G__8057,G__8058,G__8059,G__8060,G__8061,G__8062,G__8063,G__8064,G__8065,G__8066) : self__.dispatch_fn.call(null,G__8054,G__8055,G__8056,G__8057,G__8058,G__8059,G__8060,G__8061,G__8062,G__8063,G__8064,G__8065,G__8066));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__8067 = a;
var G__8068 = b;
var G__8069 = c;
var G__8070 = d;
var G__8071 = e;
var G__8072 = f;
var G__8073 = g;
var G__8074 = h;
var G__8075 = i;
var G__8076 = j;
var G__8077 = k;
var G__8078 = l;
var G__8079 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__8067,G__8068,G__8069,G__8070,G__8071,G__8072,G__8073,G__8074,G__8075,G__8076,G__8077,G__8078,G__8079) : target_fn.call(null,G__8067,G__8068,G__8069,G__8070,G__8071,G__8072,G__8073,G__8074,G__8075,G__8076,G__8077,G__8078,G__8079));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__8080 = a;
var G__8081 = b;
var G__8082 = c;
var G__8083 = d;
var G__8084 = e;
var G__8085 = f;
var G__8086 = g;
var G__8087 = h;
var G__8088 = i;
var G__8089 = j;
var G__8090 = k;
var G__8091 = l;
var G__8092 = m;
var G__8093 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__8080,G__8081,G__8082,G__8083,G__8084,G__8085,G__8086,G__8087,G__8088,G__8089,G__8090,G__8091,G__8092,G__8093) : self__.dispatch_fn.call(null,G__8080,G__8081,G__8082,G__8083,G__8084,G__8085,G__8086,G__8087,G__8088,G__8089,G__8090,G__8091,G__8092,G__8093));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__8094 = a;
var G__8095 = b;
var G__8096 = c;
var G__8097 = d;
var G__8098 = e;
var G__8099 = f;
var G__8100 = g;
var G__8101 = h;
var G__8102 = i;
var G__8103 = j;
var G__8104 = k;
var G__8105 = l;
var G__8106 = m;
var G__8107 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__8094,G__8095,G__8096,G__8097,G__8098,G__8099,G__8100,G__8101,G__8102,G__8103,G__8104,G__8105,G__8106,G__8107) : target_fn.call(null,G__8094,G__8095,G__8096,G__8097,G__8098,G__8099,G__8100,G__8101,G__8102,G__8103,G__8104,G__8105,G__8106,G__8107));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__8108 = a;
var G__8109 = b;
var G__8110 = c;
var G__8111 = d;
var G__8112 = e;
var G__8113 = f;
var G__8114 = g;
var G__8115 = h;
var G__8116 = i;
var G__8117 = j;
var G__8118 = k;
var G__8119 = l;
var G__8120 = m;
var G__8121 = n;
var G__8122 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__8108,G__8109,G__8110,G__8111,G__8112,G__8113,G__8114,G__8115,G__8116,G__8117,G__8118,G__8119,G__8120,G__8121,G__8122) : self__.dispatch_fn.call(null,G__8108,G__8109,G__8110,G__8111,G__8112,G__8113,G__8114,G__8115,G__8116,G__8117,G__8118,G__8119,G__8120,G__8121,G__8122));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__8123 = a;
var G__8124 = b;
var G__8125 = c;
var G__8126 = d;
var G__8127 = e;
var G__8128 = f;
var G__8129 = g;
var G__8130 = h;
var G__8131 = i;
var G__8132 = j;
var G__8133 = k;
var G__8134 = l;
var G__8135 = m;
var G__8136 = n;
var G__8137 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__8123,G__8124,G__8125,G__8126,G__8127,G__8128,G__8129,G__8130,G__8131,G__8132,G__8133,G__8134,G__8135,G__8136,G__8137) : target_fn.call(null,G__8123,G__8124,G__8125,G__8126,G__8127,G__8128,G__8129,G__8130,G__8131,G__8132,G__8133,G__8134,G__8135,G__8136,G__8137));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__8138 = a;
var G__8139 = b;
var G__8140 = c;
var G__8141 = d;
var G__8142 = e;
var G__8143 = f;
var G__8144 = g;
var G__8145 = h;
var G__8146 = i;
var G__8147 = j;
var G__8148 = k;
var G__8149 = l;
var G__8150 = m;
var G__8151 = n;
var G__8152 = o;
var G__8153 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__8138,G__8139,G__8140,G__8141,G__8142,G__8143,G__8144,G__8145,G__8146,G__8147,G__8148,G__8149,G__8150,G__8151,G__8152,G__8153) : self__.dispatch_fn.call(null,G__8138,G__8139,G__8140,G__8141,G__8142,G__8143,G__8144,G__8145,G__8146,G__8147,G__8148,G__8149,G__8150,G__8151,G__8152,G__8153));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__8154 = a;
var G__8155 = b;
var G__8156 = c;
var G__8157 = d;
var G__8158 = e;
var G__8159 = f;
var G__8160 = g;
var G__8161 = h;
var G__8162 = i;
var G__8163 = j;
var G__8164 = k;
var G__8165 = l;
var G__8166 = m;
var G__8167 = n;
var G__8168 = o;
var G__8169 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__8154,G__8155,G__8156,G__8157,G__8158,G__8159,G__8160,G__8161,G__8162,G__8163,G__8164,G__8165,G__8166,G__8167,G__8168,G__8169) : target_fn.call(null,G__8154,G__8155,G__8156,G__8157,G__8158,G__8159,G__8160,G__8161,G__8162,G__8163,G__8164,G__8165,G__8166,G__8167,G__8168,G__8169));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__8170 = a;
var G__8171 = b;
var G__8172 = c;
var G__8173 = d;
var G__8174 = e;
var G__8175 = f;
var G__8176 = g;
var G__8177 = h;
var G__8178 = i;
var G__8179 = j;
var G__8180 = k;
var G__8181 = l;
var G__8182 = m;
var G__8183 = n;
var G__8184 = o;
var G__8185 = p;
var G__8186 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__8170,G__8171,G__8172,G__8173,G__8174,G__8175,G__8176,G__8177,G__8178,G__8179,G__8180,G__8181,G__8182,G__8183,G__8184,G__8185,G__8186) : self__.dispatch_fn.call(null,G__8170,G__8171,G__8172,G__8173,G__8174,G__8175,G__8176,G__8177,G__8178,G__8179,G__8180,G__8181,G__8182,G__8183,G__8184,G__8185,G__8186));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__8187 = a;
var G__8188 = b;
var G__8189 = c;
var G__8190 = d;
var G__8191 = e;
var G__8192 = f;
var G__8193 = g;
var G__8194 = h;
var G__8195 = i;
var G__8196 = j;
var G__8197 = k;
var G__8198 = l;
var G__8199 = m;
var G__8200 = n;
var G__8201 = o;
var G__8202 = p;
var G__8203 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__8187,G__8188,G__8189,G__8190,G__8191,G__8192,G__8193,G__8194,G__8195,G__8196,G__8197,G__8198,G__8199,G__8200,G__8201,G__8202,G__8203) : target_fn.call(null,G__8187,G__8188,G__8189,G__8190,G__8191,G__8192,G__8193,G__8194,G__8195,G__8196,G__8197,G__8198,G__8199,G__8200,G__8201,G__8202,G__8203));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__8204 = a;
var G__8205 = b;
var G__8206 = c;
var G__8207 = d;
var G__8208 = e;
var G__8209 = f;
var G__8210 = g;
var G__8211 = h;
var G__8212 = i;
var G__8213 = j;
var G__8214 = k;
var G__8215 = l;
var G__8216 = m;
var G__8217 = n;
var G__8218 = o;
var G__8219 = p;
var G__8220 = q;
var G__8221 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__8204,G__8205,G__8206,G__8207,G__8208,G__8209,G__8210,G__8211,G__8212,G__8213,G__8214,G__8215,G__8216,G__8217,G__8218,G__8219,G__8220,G__8221) : self__.dispatch_fn.call(null,G__8204,G__8205,G__8206,G__8207,G__8208,G__8209,G__8210,G__8211,G__8212,G__8213,G__8214,G__8215,G__8216,G__8217,G__8218,G__8219,G__8220,G__8221));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__8222 = a;
var G__8223 = b;
var G__8224 = c;
var G__8225 = d;
var G__8226 = e;
var G__8227 = f;
var G__8228 = g;
var G__8229 = h;
var G__8230 = i;
var G__8231 = j;
var G__8232 = k;
var G__8233 = l;
var G__8234 = m;
var G__8235 = n;
var G__8236 = o;
var G__8237 = p;
var G__8238 = q;
var G__8239 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__8222,G__8223,G__8224,G__8225,G__8226,G__8227,G__8228,G__8229,G__8230,G__8231,G__8232,G__8233,G__8234,G__8235,G__8236,G__8237,G__8238,G__8239) : target_fn.call(null,G__8222,G__8223,G__8224,G__8225,G__8226,G__8227,G__8228,G__8229,G__8230,G__8231,G__8232,G__8233,G__8234,G__8235,G__8236,G__8237,G__8238,G__8239));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__8240 = a;
var G__8241 = b;
var G__8242 = c;
var G__8243 = d;
var G__8244 = e;
var G__8245 = f;
var G__8246 = g;
var G__8247 = h;
var G__8248 = i;
var G__8249 = j;
var G__8250 = k;
var G__8251 = l;
var G__8252 = m;
var G__8253 = n;
var G__8254 = o;
var G__8255 = p;
var G__8256 = q;
var G__8257 = r;
var G__8258 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__8240,G__8241,G__8242,G__8243,G__8244,G__8245,G__8246,G__8247,G__8248,G__8249,G__8250,G__8251,G__8252,G__8253,G__8254,G__8255,G__8256,G__8257,G__8258) : self__.dispatch_fn.call(null,G__8240,G__8241,G__8242,G__8243,G__8244,G__8245,G__8246,G__8247,G__8248,G__8249,G__8250,G__8251,G__8252,G__8253,G__8254,G__8255,G__8256,G__8257,G__8258));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__8259 = a;
var G__8260 = b;
var G__8261 = c;
var G__8262 = d;
var G__8263 = e;
var G__8264 = f;
var G__8265 = g;
var G__8266 = h;
var G__8267 = i;
var G__8268 = j;
var G__8269 = k;
var G__8270 = l;
var G__8271 = m;
var G__8272 = n;
var G__8273 = o;
var G__8274 = p;
var G__8275 = q;
var G__8276 = r;
var G__8277 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__8259,G__8260,G__8261,G__8262,G__8263,G__8264,G__8265,G__8266,G__8267,G__8268,G__8269,G__8270,G__8271,G__8272,G__8273,G__8274,G__8275,G__8276,G__8277) : target_fn.call(null,G__8259,G__8260,G__8261,G__8262,G__8263,G__8264,G__8265,G__8266,G__8267,G__8268,G__8269,G__8270,G__8271,G__8272,G__8273,G__8274,G__8275,G__8276,G__8277));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__8278 = a;
var G__8279 = b;
var G__8280 = c;
var G__8281 = d;
var G__8282 = e;
var G__8283 = f;
var G__8284 = g;
var G__8285 = h;
var G__8286 = i;
var G__8287 = j;
var G__8288 = k;
var G__8289 = l;
var G__8290 = m;
var G__8291 = n;
var G__8292 = o;
var G__8293 = p;
var G__8294 = q;
var G__8295 = r;
var G__8296 = s;
var G__8297 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__8278,G__8279,G__8280,G__8281,G__8282,G__8283,G__8284,G__8285,G__8286,G__8287,G__8288,G__8289,G__8290,G__8291,G__8292,G__8293,G__8294,G__8295,G__8296,G__8297) : self__.dispatch_fn.call(null,G__8278,G__8279,G__8280,G__8281,G__8282,G__8283,G__8284,G__8285,G__8286,G__8287,G__8288,G__8289,G__8290,G__8291,G__8292,G__8293,G__8294,G__8295,G__8296,G__8297));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__8298 = a;
var G__8299 = b;
var G__8300 = c;
var G__8301 = d;
var G__8302 = e;
var G__8303 = f;
var G__8304 = g;
var G__8305 = h;
var G__8306 = i;
var G__8307 = j;
var G__8308 = k;
var G__8309 = l;
var G__8310 = m;
var G__8311 = n;
var G__8312 = o;
var G__8313 = p;
var G__8314 = q;
var G__8315 = r;
var G__8316 = s;
var G__8317 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__8298,G__8299,G__8300,G__8301,G__8302,G__8303,G__8304,G__8305,G__8306,G__8307,G__8308,G__8309,G__8310,G__8311,G__8312,G__8313,G__8314,G__8315,G__8316,G__8317) : target_fn.call(null,G__8298,G__8299,G__8300,G__8301,G__8302,G__8303,G__8304,G__8305,G__8306,G__8307,G__8308,G__8309,G__8310,G__8311,G__8312,G__8313,G__8314,G__8315,G__8316,G__8317));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__8319 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__8319);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__3308__auto__,writer__3309__auto__,opt__3310__auto__){
return cljs.core._write(writer__3309__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__8324 = msg;
return Error(G__8324);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__8329 = x;
var G__8330 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__8329,G__8330) : pred.call(null,G__8329,G__8330));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__8331 = y;
var G__8332 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__8331,G__8332) : pred.call(null,G__8331,G__8332));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
