// Compiled by ClojureScript 0.0-2850 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2850";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__19501__delegate = function (args){
return console.log.apply(console,(function (){var G__19500 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__19500) : cljs.core.into_array.call(null,G__19500));
})());
};
var G__19501 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__19502__i = 0, G__19502__a = new Array(arguments.length -  0);
while (G__19502__i < G__19502__a.length) {G__19502__a[G__19502__i] = arguments[G__19502__i + 0]; ++G__19502__i;}
  args = new cljs.core.IndexedSeq(G__19502__a,0);
} 
return G__19501__delegate.call(this,args);};
G__19501.cljs$lang$maxFixedArity = 0;
G__19501.cljs$lang$applyTo = (function (arglist__19503){
var args = cljs.core.seq(arglist__19503);
return G__19501__delegate(args);
});
G__19501.cljs$core$IFn$_invoke$arity$variadic = G__19501__delegate;
return G__19501;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__19505 = x;
return goog.isString(G__19505);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__19507 = x__$1;
return goog.typeOf(G__19507);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__12157__auto__ = ty;
if(cljs.core.truth_(and__12157__auto__)){
return ty.cljs$lang$type;
} else {
return and__12157__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__19509 = obj;
return goog.typeOf(G__19509);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__19511 = Symbol;
return goog.typeOf(G__19511);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__13056__auto___19513 = len;
var i_19514 = (0);
while(true){
if((i_19514 < n__13056__auto___19513)){
(new_arr[i_19514] = (arr[i_19514]));

var G__19515 = (i_19514 + (1));
i_19514 = G__19515;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__19516 = (i + (1));
i = G__19516;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__19525__delegate = function (array,i,idxs){
var G__19522 = aget;
var G__19523 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__19524 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__19522,G__19523,G__19524) : cljs.core.apply.call(null,G__19522,G__19523,G__19524));
};
var G__19525 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__19526__i = 0, G__19526__a = new Array(arguments.length -  2);
while (G__19526__i < G__19526__a.length) {G__19526__a[G__19526__i] = arguments[G__19526__i + 2]; ++G__19526__i;}
  idxs = new cljs.core.IndexedSeq(G__19526__a,0);
} 
return G__19525__delegate.call(this,array,i,idxs);};
G__19525.cljs$lang$maxFixedArity = 2;
G__19525.cljs$lang$applyTo = (function (arglist__19527){
var array = cljs.core.first(arglist__19527);
arglist__19527 = cljs.core.next(arglist__19527);
var i = cljs.core.first(arglist__19527);
var idxs = cljs.core.rest(arglist__19527);
return G__19525__delegate(array,i,idxs);
});
G__19525.cljs$core$IFn$_invoke$arity$variadic = G__19525__delegate;
return G__19525;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__19528 = null;
if (arguments.length > 2) {
var G__19529__i = 0, G__19529__a = new Array(arguments.length -  2);
while (G__19529__i < G__19529__a.length) {G__19529__a[G__19529__i] = arguments[G__19529__i + 2]; ++G__19529__i;}
G__19528 = new cljs.core.IndexedSeq(G__19529__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__19528);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__19538__delegate = function (array,idx,idx2,idxv){
var G__19534 = aset;
var G__19535 = (array[idx]);
var G__19536 = idx2;
var G__19537 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__19534,G__19535,G__19536,G__19537) : cljs.core.apply.call(null,G__19534,G__19535,G__19536,G__19537));
};
var G__19538 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__19539__i = 0, G__19539__a = new Array(arguments.length -  3);
while (G__19539__i < G__19539__a.length) {G__19539__a[G__19539__i] = arguments[G__19539__i + 3]; ++G__19539__i;}
  idxv = new cljs.core.IndexedSeq(G__19539__a,0);
} 
return G__19538__delegate.call(this,array,idx,idx2,idxv);};
G__19538.cljs$lang$maxFixedArity = 3;
G__19538.cljs$lang$applyTo = (function (arglist__19540){
var array = cljs.core.first(arglist__19540);
arglist__19540 = cljs.core.next(arglist__19540);
var idx = cljs.core.first(arglist__19540);
arglist__19540 = cljs.core.next(arglist__19540);
var idx2 = cljs.core.first(arglist__19540);
var idxv = cljs.core.rest(arglist__19540);
return G__19538__delegate(array,idx,idx2,idxv);
});
G__19538.cljs$core$IFn$_invoke$arity$variadic = G__19538__delegate;
return G__19538;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__19541 = null;
if (arguments.length > 3) {
var G__19542__i = 0, G__19542__a = new Array(arguments.length -  3);
while (G__19542__i < G__19542__a.length) {G__19542__a[G__19542__i] = arguments[G__19542__i + 3]; ++G__19542__i;}
G__19541 = new cljs.core.IndexedSeq(G__19542__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__19541);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__19548 = (function (a,x){
a.push(x);

return a;
});
var G__19549 = [];
var G__19550 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__19548,G__19549,G__19550) : cljs.core.reduce.call(null,G__19548,G__19549,G__19550));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__19551__i = 0, G__19551__a = new Array(arguments.length -  2);
while (G__19551__i < G__19551__a.length) {G__19551__a[G__19551__i] = arguments[G__19551__i + 2]; ++G__19551__i;}
  args = new cljs.core.IndexedSeq(G__19551__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__19552){
var obj = cljs.core.first(arglist__19552);
arglist__19552 = cljs.core.next(arglist__19552);
var s = cljs.core.first(arglist__19552);
var args = cljs.core.rest(arglist__19552);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj19554 = {};
return obj19554;
})();


cljs.core.IFn = (function (){var obj19556 = {};
return obj19556;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__12157__auto__ = this$;
if(and__12157__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__12157__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__12813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12169__auto__ = (cljs.core._invoke[(function (){var G__19602 = x__12813__auto__;
return goog.typeOf(G__19602);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._invoke["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__12157__auto__ = this$;
if(and__12157__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__12157__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__12813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12169__auto__ = (cljs.core._invoke[(function (){var G__19604 = x__12813__auto__;
return goog.typeOf(G__19604);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._invoke["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__12157__auto__ = this$;
if(and__12157__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__12157__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__12813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12169__auto__ = (cljs.core._invoke[(function (){var G__19606 = x__12813__auto__;
return goog.typeOf(G__19606);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._invoke["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__12157__auto__ = this$;
if(and__12157__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__12157__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__12813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12169__auto__ = (cljs.core._invoke[(function (){var G__19608 = x__12813__auto__;
return goog.typeOf(G__19608);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._invoke["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__12157__auto__ = this$;
if(and__12157__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__12157__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__12813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12169__auto__ = (cljs.core._invoke[(function (){var G__19610 = x__12813__auto__;
return goog.typeOf(G__19610);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._invoke["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__12157__auto__ = this$;
if(and__12157__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__12157__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__12813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12169__auto__ = (cljs.core._invoke[(function (){var G__19612 = x__12813__auto__;
return goog.typeOf(G__19612);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._invoke["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__12157__auto__ = this$;
if(and__12157__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__12157__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__12813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12169__auto__ = (cljs.core._invoke[(function (){var G__19614 = x__12813__auto__;
return goog.typeOf(G__19614);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._invoke["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__12157__auto__ = this$;
if(and__12157__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__12157__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__12813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12169__auto__ = (cljs.core._invoke[(function (){var G__19616 = x__12813__auto__;
return goog.typeOf(G__19616);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._invoke["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__12157__auto__ = this$;
if(and__12157__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__12157__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__12813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12169__auto__ = (cljs.core._invoke[(function (){var G__19618 = x__12813__auto__;
return goog.typeOf(G__19618);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._invoke["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__12157__auto__ = this$;
if(and__12157__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__12157__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__12813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12169__auto__ = (cljs.core._invoke[(function (){var G__19620 = x__12813__auto__;
return goog.typeOf(G__19620);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._invoke["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__12157__auto__ = this$;
if(and__12157__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__12157__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__12813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12169__auto__ = (cljs.core._invoke[(function (){var G__19622 = x__12813__auto__;
return goog.typeOf(G__19622);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._invoke["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__12157__auto__ = this$;
if(and__12157__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__12157__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__12813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12169__auto__ = (cljs.core._invoke[(function (){var G__19624 = x__12813__auto__;
return goog.typeOf(G__19624);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._invoke["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__12157__auto__ = this$;
if(and__12157__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__12157__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__12813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12169__auto__ = (cljs.core._invoke[(function (){var G__19626 = x__12813__auto__;
return goog.typeOf(G__19626);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._invoke["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__12157__auto__ = this$;
if(and__12157__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__12157__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__12813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12169__auto__ = (cljs.core._invoke[(function (){var G__19628 = x__12813__auto__;
return goog.typeOf(G__19628);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._invoke["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__12157__auto__ = this$;
if(and__12157__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__12157__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__12813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12169__auto__ = (cljs.core._invoke[(function (){var G__19630 = x__12813__auto__;
return goog.typeOf(G__19630);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._invoke["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__12157__auto__ = this$;
if(and__12157__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__12157__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__12813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12169__auto__ = (cljs.core._invoke[(function (){var G__19632 = x__12813__auto__;
return goog.typeOf(G__19632);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._invoke["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__12157__auto__ = this$;
if(and__12157__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__12157__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__12813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12169__auto__ = (cljs.core._invoke[(function (){var G__19634 = x__12813__auto__;
return goog.typeOf(G__19634);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._invoke["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__12157__auto__ = this$;
if(and__12157__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__12157__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__12813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12169__auto__ = (cljs.core._invoke[(function (){var G__19636 = x__12813__auto__;
return goog.typeOf(G__19636);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._invoke["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__12157__auto__ = this$;
if(and__12157__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__12157__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__12813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12169__auto__ = (cljs.core._invoke[(function (){var G__19638 = x__12813__auto__;
return goog.typeOf(G__19638);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._invoke["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__12157__auto__ = this$;
if(and__12157__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__12157__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__12813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12169__auto__ = (cljs.core._invoke[(function (){var G__19640 = x__12813__auto__;
return goog.typeOf(G__19640);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._invoke["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__12157__auto__ = this$;
if(and__12157__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__12157__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__12813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12169__auto__ = (cljs.core._invoke[(function (){var G__19642 = x__12813__auto__;
return goog.typeOf(G__19642);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._invoke["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__12157__auto__ = this$;
if(and__12157__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__12157__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__12813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12169__auto__ = (cljs.core._invoke[(function (){var G__19644 = x__12813__auto__;
return goog.typeOf(G__19644);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._invoke["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj19646 = {};
return obj19646;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__12157__auto__ = value;
if(and__12157__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__12157__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__12813__auto__ = (((value == null))?null:value);
return (function (){var or__12169__auto__ = (cljs.core._clone[(function (){var G__19650 = x__12813__auto__;
return goog.typeOf(G__19650);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._clone["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj19652 = {};
return obj19652;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._count[(function (){var G__19656 = x__12813__auto__;
return goog.typeOf(G__19656);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._count["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj19658 = {};
return obj19658;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._empty[(function (){var G__19662 = x__12813__auto__;
return goog.typeOf(G__19662);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._empty["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj19664 = {};
return obj19664;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._conj[(function (){var G__19668 = x__12813__auto__;
return goog.typeOf(G__19668);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._conj["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj19670 = {};
return obj19670;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._nth[(function (){var G__19676 = x__12813__auto__;
return goog.typeOf(G__19676);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._nth["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._nth[(function (){var G__19678 = x__12813__auto__;
return goog.typeOf(G__19678);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._nth["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj19680 = {};
return obj19680;
})();


cljs.core.ISeq = (function (){var obj19682 = {};
return obj19682;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._first[(function (){var G__19686 = x__12813__auto__;
return goog.typeOf(G__19686);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._first["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._rest[(function (){var G__19690 = x__12813__auto__;
return goog.typeOf(G__19690);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._rest["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj19692 = {};
return obj19692;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._next[(function (){var G__19696 = x__12813__auto__;
return goog.typeOf(G__19696);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._next["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj19698 = {};
return obj19698;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__12157__auto__ = o;
if(and__12157__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__12157__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__12813__auto__ = (((o == null))?null:o);
return (function (){var or__12169__auto__ = (cljs.core._lookup[(function (){var G__19704 = x__12813__auto__;
return goog.typeOf(G__19704);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._lookup["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__12157__auto__ = o;
if(and__12157__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__12157__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__12813__auto__ = (((o == null))?null:o);
return (function (){var or__12169__auto__ = (cljs.core._lookup[(function (){var G__19706 = x__12813__auto__;
return goog.typeOf(G__19706);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._lookup["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj19708 = {};
return obj19708;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__19712 = x__12813__auto__;
return goog.typeOf(G__19712);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._assoc[(function (){var G__19716 = x__12813__auto__;
return goog.typeOf(G__19716);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._assoc["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj19718 = {};
return obj19718;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._dissoc[(function (){var G__19722 = x__12813__auto__;
return goog.typeOf(G__19722);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._dissoc["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj19724 = {};
return obj19724;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._key[(function (){var G__19728 = x__12813__auto__;
return goog.typeOf(G__19728);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._key["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._val[(function (){var G__19732 = x__12813__auto__;
return goog.typeOf(G__19732);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._val["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj19734 = {};
return obj19734;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._disjoin[(function (){var G__19738 = x__12813__auto__;
return goog.typeOf(G__19738);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._disjoin["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj19740 = {};
return obj19740;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._peek[(function (){var G__19744 = x__12813__auto__;
return goog.typeOf(G__19744);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._peek["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._pop[(function (){var G__19748 = x__12813__auto__;
return goog.typeOf(G__19748);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._pop["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj19750 = {};
return obj19750;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._assoc_n[(function (){var G__19754 = x__12813__auto__;
return goog.typeOf(G__19754);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj19756 = {};
return obj19756;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__12157__auto__ = o;
if(and__12157__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__12157__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__12813__auto__ = (((o == null))?null:o);
return (function (){var or__12169__auto__ = (cljs.core._deref[(function (){var G__19760 = x__12813__auto__;
return goog.typeOf(G__19760);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._deref["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj19762 = {};
return obj19762;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__12157__auto__ = o;
if(and__12157__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__12157__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__12813__auto__ = (((o == null))?null:o);
return (function (){var or__12169__auto__ = (cljs.core._deref_with_timeout[(function (){var G__19766 = x__12813__auto__;
return goog.typeOf(G__19766);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj19768 = {};
return obj19768;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__12157__auto__ = o;
if(and__12157__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__12157__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__12813__auto__ = (((o == null))?null:o);
return (function (){var or__12169__auto__ = (cljs.core._meta[(function (){var G__19772 = x__12813__auto__;
return goog.typeOf(G__19772);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._meta["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj19774 = {};
return obj19774;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__12157__auto__ = o;
if(and__12157__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__12157__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__12813__auto__ = (((o == null))?null:o);
return (function (){var or__12169__auto__ = (cljs.core._with_meta[(function (){var G__19778 = x__12813__auto__;
return goog.typeOf(G__19778);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._with_meta["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj19780 = {};
return obj19780;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._reduce[(function (){var G__19786 = x__12813__auto__;
return goog.typeOf(G__19786);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._reduce["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._reduce[(function (){var G__19788 = x__12813__auto__;
return goog.typeOf(G__19788);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._reduce["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj19790 = {};
return obj19790;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._kv_reduce[(function (){var G__19794 = x__12813__auto__;
return goog.typeOf(G__19794);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj19796 = {};
return obj19796;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__12157__auto__ = o;
if(and__12157__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__12157__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__12813__auto__ = (((o == null))?null:o);
return (function (){var or__12169__auto__ = (cljs.core._equiv[(function (){var G__19800 = x__12813__auto__;
return goog.typeOf(G__19800);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._equiv["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj19802 = {};
return obj19802;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__12157__auto__ = o;
if(and__12157__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__12157__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__12813__auto__ = (((o == null))?null:o);
return (function (){var or__12169__auto__ = (cljs.core._hash[(function (){var G__19806 = x__12813__auto__;
return goog.typeOf(G__19806);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._hash["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj19808 = {};
return obj19808;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__12157__auto__ = o;
if(and__12157__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__12157__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__12813__auto__ = (((o == null))?null:o);
return (function (){var or__12169__auto__ = (cljs.core._seq[(function (){var G__19812 = x__12813__auto__;
return goog.typeOf(G__19812);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._seq["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj19814 = {};
return obj19814;
})();


cljs.core.IList = (function (){var obj19816 = {};
return obj19816;
})();


cljs.core.IRecord = (function (){var obj19818 = {};
return obj19818;
})();


cljs.core.IReversible = (function (){var obj19820 = {};
return obj19820;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._rseq[(function (){var G__19824 = x__12813__auto__;
return goog.typeOf(G__19824);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._rseq["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj19826 = {};
return obj19826;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._sorted_seq[(function (){var G__19830 = x__12813__auto__;
return goog.typeOf(G__19830);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._sorted_seq_from[(function (){var G__19834 = x__12813__auto__;
return goog.typeOf(G__19834);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._entry_key[(function (){var G__19838 = x__12813__auto__;
return goog.typeOf(G__19838);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._entry_key["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._comparator[(function (){var G__19842 = x__12813__auto__;
return goog.typeOf(G__19842);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._comparator["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj19844 = {};
return obj19844;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__12157__auto__ = writer;
if(and__12157__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__12157__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__12813__auto__ = (((writer == null))?null:writer);
return (function (){var or__12169__auto__ = (cljs.core._write[(function (){var G__19848 = x__12813__auto__;
return goog.typeOf(G__19848);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._write["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__12157__auto__ = writer;
if(and__12157__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__12157__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__12813__auto__ = (((writer == null))?null:writer);
return (function (){var or__12169__auto__ = (cljs.core._flush[(function (){var G__19852 = x__12813__auto__;
return goog.typeOf(G__19852);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._flush["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj19854 = {};
return obj19854;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__12157__auto__ = o;
if(and__12157__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__12157__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__12813__auto__ = (((o == null))?null:o);
return (function (){var or__12169__auto__ = (cljs.core._pr_writer[(function (){var G__19858 = x__12813__auto__;
return goog.typeOf(G__19858);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj19860 = {};
return obj19860;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__12157__auto__ = d;
if(and__12157__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__12157__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__12813__auto__ = (((d == null))?null:d);
return (function (){var or__12169__auto__ = (cljs.core._realized_QMARK_[(function (){var G__19864 = x__12813__auto__;
return goog.typeOf(G__19864);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj19866 = {};
return obj19866;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__12157__auto__ = this$;
if(and__12157__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__12157__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__12813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12169__auto__ = (cljs.core._notify_watches[(function (){var G__19870 = x__12813__auto__;
return goog.typeOf(G__19870);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__12157__auto__ = this$;
if(and__12157__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__12157__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__12813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12169__auto__ = (cljs.core._add_watch[(function (){var G__19874 = x__12813__auto__;
return goog.typeOf(G__19874);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._add_watch["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__12157__auto__ = this$;
if(and__12157__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__12157__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__12813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12169__auto__ = (cljs.core._remove_watch[(function (){var G__19878 = x__12813__auto__;
return goog.typeOf(G__19878);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj19880 = {};
return obj19880;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._as_transient[(function (){var G__19884 = x__12813__auto__;
return goog.typeOf(G__19884);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._as_transient["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj19886 = {};
return obj19886;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__12157__auto__ = tcoll;
if(and__12157__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__12157__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__12813__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12169__auto__ = (cljs.core._conj_BANG_[(function (){var G__19890 = x__12813__auto__;
return goog.typeOf(G__19890);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__12157__auto__ = tcoll;
if(and__12157__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__12157__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__12813__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12169__auto__ = (cljs.core._persistent_BANG_[(function (){var G__19894 = x__12813__auto__;
return goog.typeOf(G__19894);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj19896 = {};
return obj19896;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__12157__auto__ = tcoll;
if(and__12157__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__12157__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__12813__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12169__auto__ = (cljs.core._assoc_BANG_[(function (){var G__19900 = x__12813__auto__;
return goog.typeOf(G__19900);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj19902 = {};
return obj19902;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__12157__auto__ = tcoll;
if(and__12157__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__12157__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__12813__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12169__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__19906 = x__12813__auto__;
return goog.typeOf(G__19906);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj19908 = {};
return obj19908;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__12157__auto__ = tcoll;
if(and__12157__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__12157__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__12813__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12169__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__19912 = x__12813__auto__;
return goog.typeOf(G__19912);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__12157__auto__ = tcoll;
if(and__12157__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__12157__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__12813__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12169__auto__ = (cljs.core._pop_BANG_[(function (){var G__19916 = x__12813__auto__;
return goog.typeOf(G__19916);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj19918 = {};
return obj19918;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__12157__auto__ = tcoll;
if(and__12157__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__12157__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__12813__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12169__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__19922 = x__12813__auto__;
return goog.typeOf(G__19922);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj19924 = {};
return obj19924;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__12157__auto__ = x;
if(and__12157__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__12157__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__12813__auto__ = (((x == null))?null:x);
return (function (){var or__12169__auto__ = (cljs.core._compare[(function (){var G__19928 = x__12813__auto__;
return goog.typeOf(G__19928);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._compare["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj19930 = {};
return obj19930;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._drop_first[(function (){var G__19934 = x__12813__auto__;
return goog.typeOf(G__19934);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._drop_first["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj19936 = {};
return obj19936;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._chunked_first[(function (){var G__19940 = x__12813__auto__;
return goog.typeOf(G__19940);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._chunked_rest[(function (){var G__19944 = x__12813__auto__;
return goog.typeOf(G__19944);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj19946 = {};
return obj19946;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._chunked_next[(function (){var G__19950 = x__12813__auto__;
return goog.typeOf(G__19950);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj19952 = {};
return obj19952;
})();

cljs.core._name = (function _name(x){
if((function (){var and__12157__auto__ = x;
if(and__12157__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__12157__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__12813__auto__ = (((x == null))?null:x);
return (function (){var or__12169__auto__ = (cljs.core._name[(function (){var G__19956 = x__12813__auto__;
return goog.typeOf(G__19956);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._name["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__12157__auto__ = x;
if(and__12157__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__12157__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__12813__auto__ = (((x == null))?null:x);
return (function (){var or__12169__auto__ = (cljs.core._namespace[(function (){var G__19960 = x__12813__auto__;
return goog.typeOf(G__19960);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._namespace["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj19962 = {};
return obj19962;
})();


cljs.core.IReset = (function (){var obj19964 = {};
return obj19964;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__12157__auto__ = o;
if(and__12157__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__12157__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__12813__auto__ = (((o == null))?null:o);
return (function (){var or__12169__auto__ = (cljs.core._reset_BANG_[(function (){var G__19968 = x__12813__auto__;
return goog.typeOf(G__19968);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj19970 = {};
return obj19970;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__12157__auto__ = o;
if(and__12157__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__12157__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__12813__auto__ = (((o == null))?null:o);
return (function (){var or__12169__auto__ = (cljs.core._swap_BANG_[(function (){var G__19980 = x__12813__auto__;
return goog.typeOf(G__19980);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__12157__auto__ = o;
if(and__12157__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__12157__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__12813__auto__ = (((o == null))?null:o);
return (function (){var or__12169__auto__ = (cljs.core._swap_BANG_[(function (){var G__19982 = x__12813__auto__;
return goog.typeOf(G__19982);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__12157__auto__ = o;
if(and__12157__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__12157__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__12813__auto__ = (((o == null))?null:o);
return (function (){var or__12169__auto__ = (cljs.core._swap_BANG_[(function (){var G__19984 = x__12813__auto__;
return goog.typeOf(G__19984);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__12157__auto__ = o;
if(and__12157__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__12157__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__12813__auto__ = (((o == null))?null:o);
return (function (){var or__12169__auto__ = (cljs.core._swap_BANG_[(function (){var G__19986 = x__12813__auto__;
return goog.typeOf(G__19986);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj19988 = {};
return obj19988;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__12157__auto__ = o;
if(and__12157__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__12157__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__12813__auto__ = (((o == null))?null:o);
return (function (){var or__12169__auto__ = (cljs.core._vreset_BANG_[(function (){var G__19992 = x__12813__auto__;
return goog.typeOf(G__19992);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj19994 = {};
return obj19994;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__12157__auto__ = coll;
if(and__12157__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__12157__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__12813__auto__ = (((coll == null))?null:coll);
return (function (){var or__12169__auto__ = (cljs.core._iterator[(function (){var G__19998 = x__12813__auto__;
return goog.typeOf(G__19998);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._iterator["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__20001 = (4294967295);
var G__20002 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__20001,G__20002) : Math.imul.call(null,G__20001,G__20002));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__20005 = a;
var G__20006 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__20005,G__20006) : Math.imul.call(null,G__20005,G__20006));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__20007 = (i + (2));
var G__20008 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__20007;
h1 = G__20008;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj20010 = {};
return obj20010;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__20011 = (i + (1));
var G__20012 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__20011;
hash = G__20012;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj20016 = {};
return obj20016;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__20019 = o;
if(G__20019){
var bit__12843__auto__ = (G__20019.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__12843__auto__) || (G__20019.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__20020 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__20020) : Math.floor.call(null,G__20020));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__12157__auto__ = cljs.core.not(a.ns);
if(and__12157__auto__){
return b.ns;
} else {
return and__12157__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__20027 = a.ns;
var G__20028 = b.ns;
return goog.array.defaultCompare(G__20027,G__20028);
})();
if(((0) === nsc)){
var G__20029 = a.name;
var G__20030 = b.name;
return goog.array.defaultCompare(G__20029,G__20030);
} else {
return nsc;
}
}
} else {
var G__20031 = a.name;
var G__20032 = b.name;
return goog.array.defaultCompare(G__20031,G__20032);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__12590__auto__ = self__._hash;
if(!((h__12590__auto__ == null))){
return h__12590__auto__;
} else {
var h__12590__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__12590__auto____$1;

return h__12590__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__20034 = null;
var G__20034__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__20034__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__20034 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__20034__2.call(this,self__,coll);
case 3:
return G__20034__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20034.cljs$core$IFn$_invoke$arity$2 = G__20034__2;
G__20034.cljs$core$IFn$_invoke$arity$3 = G__20034__3;
return G__20034;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args20033){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args20033)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__20082 = null;
var G__20082__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__20082__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__20082__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__20082__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__20082__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__20082__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__20082__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__20082__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__20082__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__20082__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__20082__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__20082__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__20082__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__20082__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__20082__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__20082__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__20082__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__20082__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__20082__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__20082__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__20082__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__20082__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20038 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__20039 = a;
var G__20040 = b;
var G__20041 = c;
var G__20042 = d;
var G__20043 = e;
var G__20044 = f;
var G__20045 = g;
var G__20046 = h;
var G__20047 = i;
var G__20048 = j;
var G__20049 = k;
var G__20050 = l;
var G__20051 = m;
var G__20052 = n;
var G__20053 = o;
var G__20054 = p;
var G__20055 = q;
var G__20056 = r;
var G__20057 = s;
var G__20058 = t;
var G__20059 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__20038,G__20039,G__20040,G__20041,G__20042,G__20043,G__20044,G__20045,G__20046,G__20047,G__20048,G__20049,G__20050,G__20051,G__20052,G__20053,G__20054,G__20055,G__20056,G__20057,G__20058,G__20059) : cljs.core.apply.call(null,G__20038,G__20039,G__20040,G__20041,G__20042,G__20043,G__20044,G__20045,G__20046,G__20047,G__20048,G__20049,G__20050,G__20051,G__20052,G__20053,G__20054,G__20055,G__20056,G__20057,G__20058,G__20059));
});
G__20082 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__20082__1.call(this,self__);
case 2:
return G__20082__2.call(this,self__,a);
case 3:
return G__20082__3.call(this,self__,a,b);
case 4:
return G__20082__4.call(this,self__,a,b,c);
case 5:
return G__20082__5.call(this,self__,a,b,c,d);
case 6:
return G__20082__6.call(this,self__,a,b,c,d,e);
case 7:
return G__20082__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__20082__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__20082__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__20082__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__20082__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__20082__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__20082__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__20082__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__20082__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__20082__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__20082__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__20082__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__20082__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__20082__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__20082__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__20082__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20082.cljs$core$IFn$_invoke$arity$1 = G__20082__1;
G__20082.cljs$core$IFn$_invoke$arity$2 = G__20082__2;
G__20082.cljs$core$IFn$_invoke$arity$3 = G__20082__3;
G__20082.cljs$core$IFn$_invoke$arity$4 = G__20082__4;
G__20082.cljs$core$IFn$_invoke$arity$5 = G__20082__5;
G__20082.cljs$core$IFn$_invoke$arity$6 = G__20082__6;
G__20082.cljs$core$IFn$_invoke$arity$7 = G__20082__7;
G__20082.cljs$core$IFn$_invoke$arity$8 = G__20082__8;
G__20082.cljs$core$IFn$_invoke$arity$9 = G__20082__9;
G__20082.cljs$core$IFn$_invoke$arity$10 = G__20082__10;
G__20082.cljs$core$IFn$_invoke$arity$11 = G__20082__11;
G__20082.cljs$core$IFn$_invoke$arity$12 = G__20082__12;
G__20082.cljs$core$IFn$_invoke$arity$13 = G__20082__13;
G__20082.cljs$core$IFn$_invoke$arity$14 = G__20082__14;
G__20082.cljs$core$IFn$_invoke$arity$15 = G__20082__15;
G__20082.cljs$core$IFn$_invoke$arity$16 = G__20082__16;
G__20082.cljs$core$IFn$_invoke$arity$17 = G__20082__17;
G__20082.cljs$core$IFn$_invoke$arity$18 = G__20082__18;
G__20082.cljs$core$IFn$_invoke$arity$19 = G__20082__19;
G__20082.cljs$core$IFn$_invoke$arity$20 = G__20082__20;
G__20082.cljs$core$IFn$_invoke$arity$21 = G__20082__21;
G__20082.cljs$core$IFn$_invoke$arity$22 = G__20082__22;
return G__20082;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args20037){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args20037)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__20060 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__20061 = a;
var G__20062 = b;
var G__20063 = c;
var G__20064 = d;
var G__20065 = e;
var G__20066 = f;
var G__20067 = g;
var G__20068 = h;
var G__20069 = i;
var G__20070 = j;
var G__20071 = k;
var G__20072 = l;
var G__20073 = m;
var G__20074 = n;
var G__20075 = o;
var G__20076 = p;
var G__20077 = q;
var G__20078 = r;
var G__20079 = s;
var G__20080 = t;
var G__20081 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__20060,G__20061,G__20062,G__20063,G__20064,G__20065,G__20066,G__20067,G__20068,G__20069,G__20070,G__20071,G__20072,G__20073,G__20074,G__20075,G__20076,G__20077,G__20078,G__20079,G__20080,G__20081) : cljs.core.apply.call(null,G__20060,G__20061,G__20062,G__20063,G__20064,G__20065,G__20066,G__20067,G__20068,G__20069,G__20070,G__20071,G__20072,G__20073,G__20074,G__20075,G__20076,G__20077,G__20078,G__20079,G__20080,G__20081));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__20084 = x;
if(G__20084){
var bit__12850__auto__ = null;
if(cljs.core.truth_((function (){var or__12169__auto__ = bit__12850__auto__;
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
return G__20084.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__20084.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__20084);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__20084);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__20086 = value;
if(G__20086){
var bit__12850__auto__ = (G__20086.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__12850__auto__) || (G__20086.cljs$core$ICloneable$)){
return true;
} else {
if((!G__20086.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__20086);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__20086);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__20088 = coll;
if(G__20088){
var bit__12843__auto__ = (G__20088.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__12843__auto__) || (G__20088.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__20090 = coll;
if(G__20090){
var bit__12843__auto__ = (G__20090.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__12843__auto__) || (G__20090.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__20092 = coll;
if(G__20092){
var bit__12843__auto__ = (G__20092.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__12843__auto__) || (G__20092.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__20094 = coll;
if(G__20094){
var bit__12843__auto__ = (G__20094.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__12843__auto__) || (G__20094.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__20099__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__20100 = y;
var G__20101 = cljs.core.first(more);
var G__20102 = cljs.core.next(more);
x = G__20100;
y = G__20101;
more = G__20102;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__20099 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20103__i = 0, G__20103__a = new Array(arguments.length -  2);
while (G__20103__i < G__20103__a.length) {G__20103__a[G__20103__i] = arguments[G__20103__i + 2]; ++G__20103__i;}
  more = new cljs.core.IndexedSeq(G__20103__a,0);
} 
return G__20099__delegate.call(this,x,y,more);};
G__20099.cljs$lang$maxFixedArity = 2;
G__20099.cljs$lang$applyTo = (function (arglist__20104){
var x = cljs.core.first(arglist__20104);
arglist__20104 = cljs.core.next(arglist__20104);
var y = cljs.core.first(arglist__20104);
var more = cljs.core.rest(arglist__20104);
return G__20099__delegate(x,y,more);
});
G__20099.cljs$core$IFn$_invoke$arity$variadic = G__20099__delegate;
return G__20099;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__20105 = null;
if (arguments.length > 2) {
var G__20106__i = 0, G__20106__a = new Array(arguments.length -  2);
while (G__20106__i < G__20106__a.length) {G__20106__a[G__20106__i] = arguments[G__20106__i + 2]; ++G__20106__i;}
G__20105 = new cljs.core.IndexedSeq(G__20106__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20105);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__20107 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__20107) : cljs.core.es6_iterator_seq.call(null,G__20107));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__20108 = (n + (1));
var G__20109 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__20110 = cljs.core.next(coll__$1);
n = G__20108;
hash_code = G__20109;
coll__$1 = G__20110;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__20111 = (n + (1));
var G__20112 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__20113 = cljs.core.next(coll__$1);
n = G__20111;
hash_code = G__20112;
coll__$1 = G__20113;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__20114 = o;
return goog.getUid(G__20114);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__20116 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20116) : cljs.core.deref.call(null,G__20116));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__20123 = val;
var G__20124 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20123,G__20124) : f.call(null,G__20123,G__20124));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20129 = nval;
var G__20130 = (n + (1));
val = G__20129;
n = G__20130;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__20125 = val__$1;
var G__20126 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20125,G__20126) : f.call(null,G__20125,G__20126));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20131 = nval;
var G__20132 = (n + (1));
val__$1 = G__20131;
n = G__20132;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__20127 = val__$1;
var G__20128 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20127,G__20128) : f.call(null,G__20127,G__20128));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20133 = nval;
var G__20134 = (n + (1));
val__$1 = G__20133;
n = G__20134;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__20141 = val;
var G__20142 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20141,G__20142) : f.call(null,G__20141,G__20142));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20147 = nval;
var G__20148 = (n + (1));
val = G__20147;
n = G__20148;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__20143 = val__$1;
var G__20144 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20143,G__20144) : f.call(null,G__20143,G__20144));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20149 = nval;
var G__20150 = (n + (1));
val__$1 = G__20149;
n = G__20150;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__20145 = val__$1;
var G__20146 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20145,G__20146) : f.call(null,G__20145,G__20146));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20151 = nval;
var G__20152 = (n + (1));
val__$1 = G__20151;
n = G__20152;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__20154 = x;
if(G__20154){
var bit__12850__auto__ = (G__20154.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__12850__auto__) || (G__20154.cljs$core$ICounted$)){
return true;
} else {
if((!G__20154.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__20154);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__20154);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__20156 = x;
if(G__20156){
var bit__12850__auto__ = (G__20156.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__12850__auto__) || (G__20156.cljs$core$IIndexed$)){
return true;
} else {
if((!G__20156.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__20156);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__20156);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__20157 = coll__$1;
var G__20158 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__20157,G__20158) : cljs.core.equiv_sequential.call(null,G__20157,G__20158));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__20159 = o;
var G__20160 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__20159,G__20160) : cljs.core.cons.call(null,G__20159,G__20160));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__20163 = coll__$1;
var G__20164 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__20163,G__20164) : cljs.core.equiv_sequential.call(null,G__20163,G__20164));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__20165 = cljs.core.List.EMPTY;
var G__20166 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__20165,G__20166) : cljs.core.with_meta.call(null,G__20165,G__20166));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__20167 = f;
var G__20168 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__20167,G__20168) : cljs.core.seq_reduce.call(null,G__20167,G__20168));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__20169 = f;
var G__20170 = start;
var G__20171 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__20169,G__20170,G__20171) : cljs.core.seq_reduce.call(null,G__20169,G__20170,G__20171));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__20172 = o;
var G__20173 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__20172,G__20173) : cljs.core.cons.call(null,G__20172,G__20173));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__20174 = sn;
s = G__20174;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__20179__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__20180 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__20181 = cljs.core.first(xs);
var G__20182 = cljs.core.next(xs);
coll = G__20180;
x = G__20181;
xs = G__20182;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__20179 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__20183__i = 0, G__20183__a = new Array(arguments.length -  2);
while (G__20183__i < G__20183__a.length) {G__20183__a[G__20183__i] = arguments[G__20183__i + 2]; ++G__20183__i;}
  xs = new cljs.core.IndexedSeq(G__20183__a,0);
} 
return G__20179__delegate.call(this,coll,x,xs);};
G__20179.cljs$lang$maxFixedArity = 2;
G__20179.cljs$lang$applyTo = (function (arglist__20184){
var coll = cljs.core.first(arglist__20184);
arglist__20184 = cljs.core.next(arglist__20184);
var x = cljs.core.first(arglist__20184);
var xs = cljs.core.rest(arglist__20184);
return G__20179__delegate(coll,x,xs);
});
G__20179.cljs$core$IFn$_invoke$arity$variadic = G__20179__delegate;
return G__20179;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__20185 = null;
if (arguments.length > 2) {
var G__20186__i = 0, G__20186__a = new Array(arguments.length -  2);
while (G__20186__i < G__20186__a.length) {G__20186__a[G__20186__i] = arguments[G__20186__i + 2]; ++G__20186__i;}
G__20185 = new cljs.core.IndexedSeq(G__20186__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__20185);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__20187 = cljs.core.next(s);
var G__20188 = (acc + (1));
s = G__20187;
acc = G__20188;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__20190 = coll;
if(G__20190){
var bit__12843__auto__ = (G__20190.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__12843__auto__) || (G__20190.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__20191 = cljs.core.next(coll);
var G__20192 = (n - (1));
coll = G__20191;
n = G__20192;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__20193 = cljs.core.next(coll);
var G__20194 = (n - (1));
var G__20195 = not_found;
coll = G__20193;
n = G__20194;
not_found = G__20195;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__20200 = coll;
if(G__20200){
var bit__12843__auto__ = (G__20200.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__12843__auto__) || (G__20200.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__20201 = coll;
if(G__20201){
var bit__12850__auto__ = (G__20201.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__12850__auto__) || (G__20201.cljs$core$ISeq$)){
return true;
} else {
if((!G__20201.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20201);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20201);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__20202 = coll;
if(G__20202){
var bit__12843__auto__ = (G__20202.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__12843__auto__) || (G__20202.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__20203 = coll;
if(G__20203){
var bit__12850__auto__ = (G__20203.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__12850__auto__) || (G__20203.cljs$core$ISeq$)){
return true;
} else {
if((!G__20203.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20203);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20203);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__20204 = (n__$1 - (1));
var G__20205 = cljs.core.rest(xs);
n__$1 = G__20204;
xs = G__20205;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__20208 = o;
if(G__20208){
var bit__12843__auto__ = (G__20208.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__12843__auto__) || (G__20208.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__20209 = o;
if(G__20209){
var bit__12843__auto__ = (G__20209.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__12843__auto__) || (G__20209.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__20213__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__20214 = ret;
var G__20215 = cljs.core.first(kvs);
var G__20216 = cljs.core.second(kvs);
var G__20217 = cljs.core.nnext(kvs);
coll = G__20214;
k = G__20215;
v = G__20216;
kvs = G__20217;
continue;
} else {
return ret;
}
break;
}
};
var G__20213 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__20218__i = 0, G__20218__a = new Array(arguments.length -  3);
while (G__20218__i < G__20218__a.length) {G__20218__a[G__20218__i] = arguments[G__20218__i + 3]; ++G__20218__i;}
  kvs = new cljs.core.IndexedSeq(G__20218__a,0);
} 
return G__20213__delegate.call(this,coll,k,v,kvs);};
G__20213.cljs$lang$maxFixedArity = 3;
G__20213.cljs$lang$applyTo = (function (arglist__20219){
var coll = cljs.core.first(arglist__20219);
arglist__20219 = cljs.core.next(arglist__20219);
var k = cljs.core.first(arglist__20219);
arglist__20219 = cljs.core.next(arglist__20219);
var v = cljs.core.first(arglist__20219);
var kvs = cljs.core.rest(arglist__20219);
return G__20213__delegate(coll,k,v,kvs);
});
G__20213.cljs$core$IFn$_invoke$arity$variadic = G__20213__delegate;
return G__20213;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__20220 = null;
if (arguments.length > 3) {
var G__20221__i = 0, G__20221__a = new Array(arguments.length -  3);
while (G__20221__i < G__20221__a.length) {G__20221__a[G__20221__i] = arguments[G__20221__i + 3]; ++G__20221__i;}
G__20220 = new cljs.core.IndexedSeq(G__20221__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__20220);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__20224__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__20225 = ret;
var G__20226 = cljs.core.first(ks);
var G__20227 = cljs.core.next(ks);
coll = G__20225;
k = G__20226;
ks = G__20227;
continue;
} else {
return ret;
}
}
break;
}
};
var G__20224 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__20228__i = 0, G__20228__a = new Array(arguments.length -  2);
while (G__20228__i < G__20228__a.length) {G__20228__a[G__20228__i] = arguments[G__20228__i + 2]; ++G__20228__i;}
  ks = new cljs.core.IndexedSeq(G__20228__a,0);
} 
return G__20224__delegate.call(this,coll,k,ks);};
G__20224.cljs$lang$maxFixedArity = 2;
G__20224.cljs$lang$applyTo = (function (arglist__20229){
var coll = cljs.core.first(arglist__20229);
arglist__20229 = cljs.core.next(arglist__20229);
var k = cljs.core.first(arglist__20229);
var ks = cljs.core.rest(arglist__20229);
return G__20224__delegate(coll,k,ks);
});
G__20224.cljs$core$IFn$_invoke$arity$variadic = G__20224__delegate;
return G__20224;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__20230 = null;
if (arguments.length > 2) {
var G__20231__i = 0, G__20231__a = new Array(arguments.length -  2);
while (G__20231__i < G__20231__a.length) {G__20231__a[G__20231__i] = arguments[G__20231__i + 2]; ++G__20231__i;}
G__20230 = new cljs.core.IndexedSeq(G__20231__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__20230);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__12169__auto__ = (function (){var G__20236 = f;
return goog.isFunction(G__20236);
})();
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
var G__20237 = f;
if(G__20237){
var bit__12850__auto__ = null;
if(cljs.core.truth_((function (){var or__12169__auto____$1 = bit__12850__auto__;
if(cljs.core.truth_(or__12169__auto____$1)){
return or__12169__auto____$1;
} else {
return G__20237.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__20237.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__20237);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__20237);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__20703 = null;
var G__20703__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__20703__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20239 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__20239) : self__.afn.call(null,G__20239));
});
var G__20703__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20240 = a;
var G__20241 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__20240,G__20241) : self__.afn.call(null,G__20240,G__20241));
});
var G__20703__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20242 = a;
var G__20243 = b;
var G__20244 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__20242,G__20243,G__20244) : self__.afn.call(null,G__20242,G__20243,G__20244));
});
var G__20703__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20245 = a;
var G__20246 = b;
var G__20247 = c;
var G__20248 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__20245,G__20246,G__20247,G__20248) : self__.afn.call(null,G__20245,G__20246,G__20247,G__20248));
});
var G__20703__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20249 = a;
var G__20250 = b;
var G__20251 = c;
var G__20252 = d;
var G__20253 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__20249,G__20250,G__20251,G__20252,G__20253) : self__.afn.call(null,G__20249,G__20250,G__20251,G__20252,G__20253));
});
var G__20703__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20254 = a;
var G__20255 = b;
var G__20256 = c;
var G__20257 = d;
var G__20258 = e;
var G__20259 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__20254,G__20255,G__20256,G__20257,G__20258,G__20259) : self__.afn.call(null,G__20254,G__20255,G__20256,G__20257,G__20258,G__20259));
});
var G__20703__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20260 = a;
var G__20261 = b;
var G__20262 = c;
var G__20263 = d;
var G__20264 = e;
var G__20265 = f;
var G__20266 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__20260,G__20261,G__20262,G__20263,G__20264,G__20265,G__20266) : self__.afn.call(null,G__20260,G__20261,G__20262,G__20263,G__20264,G__20265,G__20266));
});
var G__20703__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20267 = a;
var G__20268 = b;
var G__20269 = c;
var G__20270 = d;
var G__20271 = e;
var G__20272 = f;
var G__20273 = g;
var G__20274 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__20267,G__20268,G__20269,G__20270,G__20271,G__20272,G__20273,G__20274) : self__.afn.call(null,G__20267,G__20268,G__20269,G__20270,G__20271,G__20272,G__20273,G__20274));
});
var G__20703__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20275 = a;
var G__20276 = b;
var G__20277 = c;
var G__20278 = d;
var G__20279 = e;
var G__20280 = f;
var G__20281 = g;
var G__20282 = h;
var G__20283 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__20275,G__20276,G__20277,G__20278,G__20279,G__20280,G__20281,G__20282,G__20283) : self__.afn.call(null,G__20275,G__20276,G__20277,G__20278,G__20279,G__20280,G__20281,G__20282,G__20283));
});
var G__20703__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20284 = a;
var G__20285 = b;
var G__20286 = c;
var G__20287 = d;
var G__20288 = e;
var G__20289 = f;
var G__20290 = g;
var G__20291 = h;
var G__20292 = i;
var G__20293 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__20284,G__20285,G__20286,G__20287,G__20288,G__20289,G__20290,G__20291,G__20292,G__20293) : self__.afn.call(null,G__20284,G__20285,G__20286,G__20287,G__20288,G__20289,G__20290,G__20291,G__20292,G__20293));
});
var G__20703__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20294 = a;
var G__20295 = b;
var G__20296 = c;
var G__20297 = d;
var G__20298 = e;
var G__20299 = f;
var G__20300 = g;
var G__20301 = h;
var G__20302 = i;
var G__20303 = j;
var G__20304 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__20294,G__20295,G__20296,G__20297,G__20298,G__20299,G__20300,G__20301,G__20302,G__20303,G__20304) : self__.afn.call(null,G__20294,G__20295,G__20296,G__20297,G__20298,G__20299,G__20300,G__20301,G__20302,G__20303,G__20304));
});
var G__20703__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20305 = a;
var G__20306 = b;
var G__20307 = c;
var G__20308 = d;
var G__20309 = e;
var G__20310 = f;
var G__20311 = g;
var G__20312 = h;
var G__20313 = i;
var G__20314 = j;
var G__20315 = k;
var G__20316 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__20305,G__20306,G__20307,G__20308,G__20309,G__20310,G__20311,G__20312,G__20313,G__20314,G__20315,G__20316) : self__.afn.call(null,G__20305,G__20306,G__20307,G__20308,G__20309,G__20310,G__20311,G__20312,G__20313,G__20314,G__20315,G__20316));
});
var G__20703__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20317 = a;
var G__20318 = b;
var G__20319 = c;
var G__20320 = d;
var G__20321 = e;
var G__20322 = f;
var G__20323 = g;
var G__20324 = h;
var G__20325 = i;
var G__20326 = j;
var G__20327 = k;
var G__20328 = l;
var G__20329 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__20317,G__20318,G__20319,G__20320,G__20321,G__20322,G__20323,G__20324,G__20325,G__20326,G__20327,G__20328,G__20329) : self__.afn.call(null,G__20317,G__20318,G__20319,G__20320,G__20321,G__20322,G__20323,G__20324,G__20325,G__20326,G__20327,G__20328,G__20329));
});
var G__20703__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20330 = a;
var G__20331 = b;
var G__20332 = c;
var G__20333 = d;
var G__20334 = e;
var G__20335 = f;
var G__20336 = g;
var G__20337 = h;
var G__20338 = i;
var G__20339 = j;
var G__20340 = k;
var G__20341 = l;
var G__20342 = m;
var G__20343 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__20330,G__20331,G__20332,G__20333,G__20334,G__20335,G__20336,G__20337,G__20338,G__20339,G__20340,G__20341,G__20342,G__20343) : self__.afn.call(null,G__20330,G__20331,G__20332,G__20333,G__20334,G__20335,G__20336,G__20337,G__20338,G__20339,G__20340,G__20341,G__20342,G__20343));
});
var G__20703__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20344 = a;
var G__20345 = b;
var G__20346 = c;
var G__20347 = d;
var G__20348 = e;
var G__20349 = f;
var G__20350 = g;
var G__20351 = h;
var G__20352 = i;
var G__20353 = j;
var G__20354 = k;
var G__20355 = l;
var G__20356 = m;
var G__20357 = n;
var G__20358 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__20344,G__20345,G__20346,G__20347,G__20348,G__20349,G__20350,G__20351,G__20352,G__20353,G__20354,G__20355,G__20356,G__20357,G__20358) : self__.afn.call(null,G__20344,G__20345,G__20346,G__20347,G__20348,G__20349,G__20350,G__20351,G__20352,G__20353,G__20354,G__20355,G__20356,G__20357,G__20358));
});
var G__20703__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20359 = a;
var G__20360 = b;
var G__20361 = c;
var G__20362 = d;
var G__20363 = e;
var G__20364 = f;
var G__20365 = g;
var G__20366 = h;
var G__20367 = i;
var G__20368 = j;
var G__20369 = k;
var G__20370 = l;
var G__20371 = m;
var G__20372 = n;
var G__20373 = o;
var G__20374 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__20359,G__20360,G__20361,G__20362,G__20363,G__20364,G__20365,G__20366,G__20367,G__20368,G__20369,G__20370,G__20371,G__20372,G__20373,G__20374) : self__.afn.call(null,G__20359,G__20360,G__20361,G__20362,G__20363,G__20364,G__20365,G__20366,G__20367,G__20368,G__20369,G__20370,G__20371,G__20372,G__20373,G__20374));
});
var G__20703__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20375 = a;
var G__20376 = b;
var G__20377 = c;
var G__20378 = d;
var G__20379 = e;
var G__20380 = f;
var G__20381 = g;
var G__20382 = h;
var G__20383 = i;
var G__20384 = j;
var G__20385 = k;
var G__20386 = l;
var G__20387 = m;
var G__20388 = n;
var G__20389 = o;
var G__20390 = p;
var G__20391 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__20375,G__20376,G__20377,G__20378,G__20379,G__20380,G__20381,G__20382,G__20383,G__20384,G__20385,G__20386,G__20387,G__20388,G__20389,G__20390,G__20391) : self__.afn.call(null,G__20375,G__20376,G__20377,G__20378,G__20379,G__20380,G__20381,G__20382,G__20383,G__20384,G__20385,G__20386,G__20387,G__20388,G__20389,G__20390,G__20391));
});
var G__20703__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20392 = a;
var G__20393 = b;
var G__20394 = c;
var G__20395 = d;
var G__20396 = e;
var G__20397 = f;
var G__20398 = g;
var G__20399 = h;
var G__20400 = i;
var G__20401 = j;
var G__20402 = k;
var G__20403 = l;
var G__20404 = m;
var G__20405 = n;
var G__20406 = o;
var G__20407 = p;
var G__20408 = q;
var G__20409 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__20392,G__20393,G__20394,G__20395,G__20396,G__20397,G__20398,G__20399,G__20400,G__20401,G__20402,G__20403,G__20404,G__20405,G__20406,G__20407,G__20408,G__20409) : self__.afn.call(null,G__20392,G__20393,G__20394,G__20395,G__20396,G__20397,G__20398,G__20399,G__20400,G__20401,G__20402,G__20403,G__20404,G__20405,G__20406,G__20407,G__20408,G__20409));
});
var G__20703__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20410 = a;
var G__20411 = b;
var G__20412 = c;
var G__20413 = d;
var G__20414 = e;
var G__20415 = f;
var G__20416 = g;
var G__20417 = h;
var G__20418 = i;
var G__20419 = j;
var G__20420 = k;
var G__20421 = l;
var G__20422 = m;
var G__20423 = n;
var G__20424 = o;
var G__20425 = p;
var G__20426 = q;
var G__20427 = r;
var G__20428 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__20410,G__20411,G__20412,G__20413,G__20414,G__20415,G__20416,G__20417,G__20418,G__20419,G__20420,G__20421,G__20422,G__20423,G__20424,G__20425,G__20426,G__20427,G__20428) : self__.afn.call(null,G__20410,G__20411,G__20412,G__20413,G__20414,G__20415,G__20416,G__20417,G__20418,G__20419,G__20420,G__20421,G__20422,G__20423,G__20424,G__20425,G__20426,G__20427,G__20428));
});
var G__20703__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20429 = a;
var G__20430 = b;
var G__20431 = c;
var G__20432 = d;
var G__20433 = e;
var G__20434 = f;
var G__20435 = g;
var G__20436 = h;
var G__20437 = i;
var G__20438 = j;
var G__20439 = k;
var G__20440 = l;
var G__20441 = m;
var G__20442 = n;
var G__20443 = o;
var G__20444 = p;
var G__20445 = q;
var G__20446 = r;
var G__20447 = s;
var G__20448 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__20429,G__20430,G__20431,G__20432,G__20433,G__20434,G__20435,G__20436,G__20437,G__20438,G__20439,G__20440,G__20441,G__20442,G__20443,G__20444,G__20445,G__20446,G__20447,G__20448) : self__.afn.call(null,G__20429,G__20430,G__20431,G__20432,G__20433,G__20434,G__20435,G__20436,G__20437,G__20438,G__20439,G__20440,G__20441,G__20442,G__20443,G__20444,G__20445,G__20446,G__20447,G__20448));
});
var G__20703__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20449 = self__.afn;
var G__20450 = a;
var G__20451 = b;
var G__20452 = c;
var G__20453 = d;
var G__20454 = e;
var G__20455 = f;
var G__20456 = g;
var G__20457 = h;
var G__20458 = i;
var G__20459 = j;
var G__20460 = k;
var G__20461 = l;
var G__20462 = m;
var G__20463 = n;
var G__20464 = o;
var G__20465 = p;
var G__20466 = q;
var G__20467 = r;
var G__20468 = s;
var G__20469 = t;
var G__20470 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__20449,G__20450,G__20451,G__20452,G__20453,G__20454,G__20455,G__20456,G__20457,G__20458,G__20459,G__20460,G__20461,G__20462,G__20463,G__20464,G__20465,G__20466,G__20467,G__20468,G__20469,G__20470) : cljs.core.apply.call(null,G__20449,G__20450,G__20451,G__20452,G__20453,G__20454,G__20455,G__20456,G__20457,G__20458,G__20459,G__20460,G__20461,G__20462,G__20463,G__20464,G__20465,G__20466,G__20467,G__20468,G__20469,G__20470));
});
G__20703 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__20703__1.call(this,self__);
case 2:
return G__20703__2.call(this,self__,a);
case 3:
return G__20703__3.call(this,self__,a,b);
case 4:
return G__20703__4.call(this,self__,a,b,c);
case 5:
return G__20703__5.call(this,self__,a,b,c,d);
case 6:
return G__20703__6.call(this,self__,a,b,c,d,e);
case 7:
return G__20703__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__20703__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__20703__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__20703__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__20703__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__20703__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__20703__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__20703__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__20703__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__20703__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__20703__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__20703__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__20703__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__20703__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__20703__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__20703__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20703.cljs$core$IFn$_invoke$arity$1 = G__20703__1;
G__20703.cljs$core$IFn$_invoke$arity$2 = G__20703__2;
G__20703.cljs$core$IFn$_invoke$arity$3 = G__20703__3;
G__20703.cljs$core$IFn$_invoke$arity$4 = G__20703__4;
G__20703.cljs$core$IFn$_invoke$arity$5 = G__20703__5;
G__20703.cljs$core$IFn$_invoke$arity$6 = G__20703__6;
G__20703.cljs$core$IFn$_invoke$arity$7 = G__20703__7;
G__20703.cljs$core$IFn$_invoke$arity$8 = G__20703__8;
G__20703.cljs$core$IFn$_invoke$arity$9 = G__20703__9;
G__20703.cljs$core$IFn$_invoke$arity$10 = G__20703__10;
G__20703.cljs$core$IFn$_invoke$arity$11 = G__20703__11;
G__20703.cljs$core$IFn$_invoke$arity$12 = G__20703__12;
G__20703.cljs$core$IFn$_invoke$arity$13 = G__20703__13;
G__20703.cljs$core$IFn$_invoke$arity$14 = G__20703__14;
G__20703.cljs$core$IFn$_invoke$arity$15 = G__20703__15;
G__20703.cljs$core$IFn$_invoke$arity$16 = G__20703__16;
G__20703.cljs$core$IFn$_invoke$arity$17 = G__20703__17;
G__20703.cljs$core$IFn$_invoke$arity$18 = G__20703__18;
G__20703.cljs$core$IFn$_invoke$arity$19 = G__20703__19;
G__20703.cljs$core$IFn$_invoke$arity$20 = G__20703__20;
G__20703.cljs$core$IFn$_invoke$arity$21 = G__20703__21;
G__20703.cljs$core$IFn$_invoke$arity$22 = G__20703__22;
return G__20703;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args20238){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args20238)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__20471 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__20471) : self__.afn.call(null,G__20471));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__20472 = a;
var G__20473 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__20472,G__20473) : self__.afn.call(null,G__20472,G__20473));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__20474 = a;
var G__20475 = b;
var G__20476 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__20474,G__20475,G__20476) : self__.afn.call(null,G__20474,G__20475,G__20476));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__20477 = a;
var G__20478 = b;
var G__20479 = c;
var G__20480 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__20477,G__20478,G__20479,G__20480) : self__.afn.call(null,G__20477,G__20478,G__20479,G__20480));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__20481 = a;
var G__20482 = b;
var G__20483 = c;
var G__20484 = d;
var G__20485 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__20481,G__20482,G__20483,G__20484,G__20485) : self__.afn.call(null,G__20481,G__20482,G__20483,G__20484,G__20485));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__20486 = a;
var G__20487 = b;
var G__20488 = c;
var G__20489 = d;
var G__20490 = e;
var G__20491 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__20486,G__20487,G__20488,G__20489,G__20490,G__20491) : self__.afn.call(null,G__20486,G__20487,G__20488,G__20489,G__20490,G__20491));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__20492 = a;
var G__20493 = b;
var G__20494 = c;
var G__20495 = d;
var G__20496 = e;
var G__20497 = f;
var G__20498 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__20492,G__20493,G__20494,G__20495,G__20496,G__20497,G__20498) : self__.afn.call(null,G__20492,G__20493,G__20494,G__20495,G__20496,G__20497,G__20498));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__20499 = a;
var G__20500 = b;
var G__20501 = c;
var G__20502 = d;
var G__20503 = e;
var G__20504 = f;
var G__20505 = g;
var G__20506 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__20499,G__20500,G__20501,G__20502,G__20503,G__20504,G__20505,G__20506) : self__.afn.call(null,G__20499,G__20500,G__20501,G__20502,G__20503,G__20504,G__20505,G__20506));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__20507 = a;
var G__20508 = b;
var G__20509 = c;
var G__20510 = d;
var G__20511 = e;
var G__20512 = f;
var G__20513 = g;
var G__20514 = h;
var G__20515 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__20507,G__20508,G__20509,G__20510,G__20511,G__20512,G__20513,G__20514,G__20515) : self__.afn.call(null,G__20507,G__20508,G__20509,G__20510,G__20511,G__20512,G__20513,G__20514,G__20515));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__20516 = a;
var G__20517 = b;
var G__20518 = c;
var G__20519 = d;
var G__20520 = e;
var G__20521 = f;
var G__20522 = g;
var G__20523 = h;
var G__20524 = i;
var G__20525 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__20516,G__20517,G__20518,G__20519,G__20520,G__20521,G__20522,G__20523,G__20524,G__20525) : self__.afn.call(null,G__20516,G__20517,G__20518,G__20519,G__20520,G__20521,G__20522,G__20523,G__20524,G__20525));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__20526 = a;
var G__20527 = b;
var G__20528 = c;
var G__20529 = d;
var G__20530 = e;
var G__20531 = f;
var G__20532 = g;
var G__20533 = h;
var G__20534 = i;
var G__20535 = j;
var G__20536 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__20526,G__20527,G__20528,G__20529,G__20530,G__20531,G__20532,G__20533,G__20534,G__20535,G__20536) : self__.afn.call(null,G__20526,G__20527,G__20528,G__20529,G__20530,G__20531,G__20532,G__20533,G__20534,G__20535,G__20536));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__20537 = a;
var G__20538 = b;
var G__20539 = c;
var G__20540 = d;
var G__20541 = e;
var G__20542 = f;
var G__20543 = g;
var G__20544 = h;
var G__20545 = i;
var G__20546 = j;
var G__20547 = k;
var G__20548 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__20537,G__20538,G__20539,G__20540,G__20541,G__20542,G__20543,G__20544,G__20545,G__20546,G__20547,G__20548) : self__.afn.call(null,G__20537,G__20538,G__20539,G__20540,G__20541,G__20542,G__20543,G__20544,G__20545,G__20546,G__20547,G__20548));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__20549 = a;
var G__20550 = b;
var G__20551 = c;
var G__20552 = d;
var G__20553 = e;
var G__20554 = f;
var G__20555 = g;
var G__20556 = h;
var G__20557 = i;
var G__20558 = j;
var G__20559 = k;
var G__20560 = l;
var G__20561 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__20549,G__20550,G__20551,G__20552,G__20553,G__20554,G__20555,G__20556,G__20557,G__20558,G__20559,G__20560,G__20561) : self__.afn.call(null,G__20549,G__20550,G__20551,G__20552,G__20553,G__20554,G__20555,G__20556,G__20557,G__20558,G__20559,G__20560,G__20561));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__20562 = a;
var G__20563 = b;
var G__20564 = c;
var G__20565 = d;
var G__20566 = e;
var G__20567 = f;
var G__20568 = g;
var G__20569 = h;
var G__20570 = i;
var G__20571 = j;
var G__20572 = k;
var G__20573 = l;
var G__20574 = m;
var G__20575 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__20562,G__20563,G__20564,G__20565,G__20566,G__20567,G__20568,G__20569,G__20570,G__20571,G__20572,G__20573,G__20574,G__20575) : self__.afn.call(null,G__20562,G__20563,G__20564,G__20565,G__20566,G__20567,G__20568,G__20569,G__20570,G__20571,G__20572,G__20573,G__20574,G__20575));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__20576 = a;
var G__20577 = b;
var G__20578 = c;
var G__20579 = d;
var G__20580 = e;
var G__20581 = f;
var G__20582 = g;
var G__20583 = h;
var G__20584 = i;
var G__20585 = j;
var G__20586 = k;
var G__20587 = l;
var G__20588 = m;
var G__20589 = n;
var G__20590 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__20576,G__20577,G__20578,G__20579,G__20580,G__20581,G__20582,G__20583,G__20584,G__20585,G__20586,G__20587,G__20588,G__20589,G__20590) : self__.afn.call(null,G__20576,G__20577,G__20578,G__20579,G__20580,G__20581,G__20582,G__20583,G__20584,G__20585,G__20586,G__20587,G__20588,G__20589,G__20590));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__20591 = a;
var G__20592 = b;
var G__20593 = c;
var G__20594 = d;
var G__20595 = e;
var G__20596 = f;
var G__20597 = g;
var G__20598 = h;
var G__20599 = i;
var G__20600 = j;
var G__20601 = k;
var G__20602 = l;
var G__20603 = m;
var G__20604 = n;
var G__20605 = o;
var G__20606 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__20591,G__20592,G__20593,G__20594,G__20595,G__20596,G__20597,G__20598,G__20599,G__20600,G__20601,G__20602,G__20603,G__20604,G__20605,G__20606) : self__.afn.call(null,G__20591,G__20592,G__20593,G__20594,G__20595,G__20596,G__20597,G__20598,G__20599,G__20600,G__20601,G__20602,G__20603,G__20604,G__20605,G__20606));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__20607 = a;
var G__20608 = b;
var G__20609 = c;
var G__20610 = d;
var G__20611 = e;
var G__20612 = f;
var G__20613 = g;
var G__20614 = h;
var G__20615 = i;
var G__20616 = j;
var G__20617 = k;
var G__20618 = l;
var G__20619 = m;
var G__20620 = n;
var G__20621 = o;
var G__20622 = p;
var G__20623 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__20607,G__20608,G__20609,G__20610,G__20611,G__20612,G__20613,G__20614,G__20615,G__20616,G__20617,G__20618,G__20619,G__20620,G__20621,G__20622,G__20623) : self__.afn.call(null,G__20607,G__20608,G__20609,G__20610,G__20611,G__20612,G__20613,G__20614,G__20615,G__20616,G__20617,G__20618,G__20619,G__20620,G__20621,G__20622,G__20623));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__20624 = a;
var G__20625 = b;
var G__20626 = c;
var G__20627 = d;
var G__20628 = e;
var G__20629 = f;
var G__20630 = g;
var G__20631 = h;
var G__20632 = i;
var G__20633 = j;
var G__20634 = k;
var G__20635 = l;
var G__20636 = m;
var G__20637 = n;
var G__20638 = o;
var G__20639 = p;
var G__20640 = q;
var G__20641 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__20624,G__20625,G__20626,G__20627,G__20628,G__20629,G__20630,G__20631,G__20632,G__20633,G__20634,G__20635,G__20636,G__20637,G__20638,G__20639,G__20640,G__20641) : self__.afn.call(null,G__20624,G__20625,G__20626,G__20627,G__20628,G__20629,G__20630,G__20631,G__20632,G__20633,G__20634,G__20635,G__20636,G__20637,G__20638,G__20639,G__20640,G__20641));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__20642 = a;
var G__20643 = b;
var G__20644 = c;
var G__20645 = d;
var G__20646 = e;
var G__20647 = f;
var G__20648 = g;
var G__20649 = h;
var G__20650 = i;
var G__20651 = j;
var G__20652 = k;
var G__20653 = l;
var G__20654 = m;
var G__20655 = n;
var G__20656 = o;
var G__20657 = p;
var G__20658 = q;
var G__20659 = r;
var G__20660 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__20642,G__20643,G__20644,G__20645,G__20646,G__20647,G__20648,G__20649,G__20650,G__20651,G__20652,G__20653,G__20654,G__20655,G__20656,G__20657,G__20658,G__20659,G__20660) : self__.afn.call(null,G__20642,G__20643,G__20644,G__20645,G__20646,G__20647,G__20648,G__20649,G__20650,G__20651,G__20652,G__20653,G__20654,G__20655,G__20656,G__20657,G__20658,G__20659,G__20660));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__20661 = a;
var G__20662 = b;
var G__20663 = c;
var G__20664 = d;
var G__20665 = e;
var G__20666 = f;
var G__20667 = g;
var G__20668 = h;
var G__20669 = i;
var G__20670 = j;
var G__20671 = k;
var G__20672 = l;
var G__20673 = m;
var G__20674 = n;
var G__20675 = o;
var G__20676 = p;
var G__20677 = q;
var G__20678 = r;
var G__20679 = s;
var G__20680 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__20661,G__20662,G__20663,G__20664,G__20665,G__20666,G__20667,G__20668,G__20669,G__20670,G__20671,G__20672,G__20673,G__20674,G__20675,G__20676,G__20677,G__20678,G__20679,G__20680) : self__.afn.call(null,G__20661,G__20662,G__20663,G__20664,G__20665,G__20666,G__20667,G__20668,G__20669,G__20670,G__20671,G__20672,G__20673,G__20674,G__20675,G__20676,G__20677,G__20678,G__20679,G__20680));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__20681 = self__.afn;
var G__20682 = a;
var G__20683 = b;
var G__20684 = c;
var G__20685 = d;
var G__20686 = e;
var G__20687 = f;
var G__20688 = g;
var G__20689 = h;
var G__20690 = i;
var G__20691 = j;
var G__20692 = k;
var G__20693 = l;
var G__20694 = m;
var G__20695 = n;
var G__20696 = o;
var G__20697 = p;
var G__20698 = q;
var G__20699 = r;
var G__20700 = s;
var G__20701 = t;
var G__20702 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__20681,G__20682,G__20683,G__20684,G__20685,G__20686,G__20687,G__20688,G__20689,G__20690,G__20691,G__20692,G__20693,G__20694,G__20695,G__20696,G__20697,G__20698,G__20699,G__20700,G__20701,G__20702) : cljs.core.apply.call(null,G__20681,G__20682,G__20683,G__20684,G__20685,G__20686,G__20687,G__20688,G__20689,G__20690,G__20691,G__20692,G__20693,G__20694,G__20695,G__20696,G__20697,G__20698,G__20699,G__20700,G__20701,G__20702));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__20707 = o;
if(G__20707){
var bit__12850__auto__ = (G__20707.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__12850__auto__) || (G__20707.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__20707.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__20707);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__20707);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__12157__auto__ = !((o == null));
if(and__12157__auto__){
var G__20711 = o;
if(G__20711){
var bit__12850__auto__ = (G__20711.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__12850__auto__) || (G__20711.cljs$core$IMeta$)){
return true;
} else {
if((!G__20711.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__20711);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__20711);
}
} else {
return and__12157__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__20714__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__20715 = ret;
var G__20716 = cljs.core.first(ks);
var G__20717 = cljs.core.next(ks);
coll = G__20715;
k = G__20716;
ks = G__20717;
continue;
} else {
return ret;
}
}
break;
}
};
var G__20714 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__20718__i = 0, G__20718__a = new Array(arguments.length -  2);
while (G__20718__i < G__20718__a.length) {G__20718__a[G__20718__i] = arguments[G__20718__i + 2]; ++G__20718__i;}
  ks = new cljs.core.IndexedSeq(G__20718__a,0);
} 
return G__20714__delegate.call(this,coll,k,ks);};
G__20714.cljs$lang$maxFixedArity = 2;
G__20714.cljs$lang$applyTo = (function (arglist__20719){
var coll = cljs.core.first(arglist__20719);
arglist__20719 = cljs.core.next(arglist__20719);
var k = cljs.core.first(arglist__20719);
var ks = cljs.core.rest(arglist__20719);
return G__20714__delegate(coll,k,ks);
});
G__20714.cljs$core$IFn$_invoke$arity$variadic = G__20714__delegate;
return G__20714;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__20720 = null;
if (arguments.length > 2) {
var G__20721__i = 0, G__20721__a = new Array(arguments.length -  2);
while (G__20721__i < G__20721__a.length) {G__20721__a[G__20721__i] = arguments[G__20721__i + 2]; ++G__20721__i;}
G__20720 = new cljs.core.IndexedSeq(G__20721__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__20720);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__20723 = x;
if(G__20723){
var bit__12850__auto__ = (G__20723.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__12850__auto__) || (G__20723.cljs$core$ICollection$)){
return true;
} else {
if((!G__20723.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__20723);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__20723);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__20725 = x;
if(G__20725){
var bit__12850__auto__ = (G__20725.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__12850__auto__) || (G__20725.cljs$core$ISet$)){
return true;
} else {
if((!G__20725.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__20725);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__20725);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__20727 = x;
if(G__20727){
var bit__12850__auto__ = (G__20727.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__12850__auto__) || (G__20727.cljs$core$IAssociative$)){
return true;
} else {
if((!G__20727.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__20727);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__20727);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__20729 = x;
if(G__20729){
var bit__12850__auto__ = (G__20729.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__12850__auto__) || (G__20729.cljs$core$ISequential$)){
return true;
} else {
if((!G__20729.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__20729);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__20729);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__20731 = x;
if(G__20731){
var bit__12850__auto__ = (G__20731.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__12850__auto__) || (G__20731.cljs$core$ISorted$)){
return true;
} else {
if((!G__20731.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__20731);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__20731);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__20733 = x;
if(G__20733){
var bit__12850__auto__ = (G__20733.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__12850__auto__) || (G__20733.cljs$core$IReduce$)){
return true;
} else {
if((!G__20733.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__20733);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__20733);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__20735 = x;
if(G__20735){
var bit__12850__auto__ = (G__20735.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__12850__auto__) || (G__20735.cljs$core$IMap$)){
return true;
} else {
if((!G__20735.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__20735);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__20735);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__20737 = x;
if(G__20737){
var bit__12850__auto__ = (G__20737.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__12850__auto__) || (G__20737.cljs$core$IVector$)){
return true;
} else {
if((!G__20737.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__20737);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__20737);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__20739 = x;
if(G__20739){
var bit__12843__auto__ = (G__20739.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__12843__auto__) || (G__20739.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj20745 = {};
return obj20745;
});
var js_obj__1 = (function() { 
var G__20748__delegate = function (keyvals){
var G__20746 = goog.object.create;
var G__20747 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__20746,G__20747) : cljs.core.apply.call(null,G__20746,G__20747));
};
var G__20748 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__20749__i = 0, G__20749__a = new Array(arguments.length -  0);
while (G__20749__i < G__20749__a.length) {G__20749__a[G__20749__i] = arguments[G__20749__i + 0]; ++G__20749__i;}
  keyvals = new cljs.core.IndexedSeq(G__20749__a,0);
} 
return G__20748__delegate.call(this,keyvals);};
G__20748.cljs$lang$maxFixedArity = 0;
G__20748.cljs$lang$applyTo = (function (arglist__20750){
var keyvals = cljs.core.seq(arglist__20750);
return G__20748__delegate(keyvals);
});
G__20748.cljs$core$IFn$_invoke$arity$variadic = G__20748__delegate;
return G__20748;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__20751 = null;
if (arguments.length > 0) {
var G__20752__i = 0, G__20752__a = new Array(arguments.length -  0);
while (G__20752__i < G__20752__a.length) {G__20752__a[G__20752__i] = arguments[G__20752__i + 0]; ++G__20752__i;}
G__20751 = new cljs.core.IndexedSeq(G__20752__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__20751);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__20755_20757 = obj;
var G__20756_20758 = ((function (G__20755_20757,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__20755_20757,keys))
;
goog.object.forEach(G__20755_20757,G__20756_20758);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__20759 = (i__$1 + (1));
var G__20760 = (j__$1 + (1));
var G__20761 = (len__$1 - (1));
i__$1 = G__20759;
j__$1 = G__20760;
len__$1 = G__20761;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__20762 = (i__$1 - (1));
var G__20763 = (j__$1 - (1));
var G__20764 = (len__$1 - (1));
i__$1 = G__20762;
j__$1 = G__20763;
len__$1 = G__20764;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj20766 = {};
return obj20766;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__20768 = s;
if(G__20768){
var bit__12850__auto__ = (G__20768.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__12850__auto__) || (G__20768.cljs$core$ISeq$)){
return true;
} else {
if((!G__20768.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20768);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20768);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__20770 = s;
if(G__20770){
var bit__12850__auto__ = (G__20770.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__12850__auto__) || (G__20770.cljs$core$ISeqable$)){
return true;
} else {
if((!G__20770.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__20770);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__20770);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__12169__auto__ = cljs.core.fn_QMARK_(f);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var G__20774 = f;
if(G__20774){
var bit__12850__auto__ = (G__20774.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__12850__auto__) || (G__20774.cljs$core$IFn$)){
return true;
} else {
if((!G__20774.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__20774);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__20774);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__20787 = n;
return isNaN(G__20787);
})())) && (!((n === Infinity))) && (((function (){var G__20788 = n;
return parseFloat(G__20788);
})() === (function (){var G__20789 = n;
var G__20790 = (10);
return parseInt(G__20789,G__20790);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__20791__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__20792 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__20793 = etc;
s = G__20792;
xs = G__20793;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__20791 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20794__i = 0, G__20794__a = new Array(arguments.length -  2);
while (G__20794__i < G__20794__a.length) {G__20794__a[G__20794__i] = arguments[G__20794__i + 2]; ++G__20794__i;}
  more = new cljs.core.IndexedSeq(G__20794__a,0);
} 
return G__20791__delegate.call(this,x,y,more);};
G__20791.cljs$lang$maxFixedArity = 2;
G__20791.cljs$lang$applyTo = (function (arglist__20795){
var x = cljs.core.first(arglist__20795);
arglist__20795 = cljs.core.next(arglist__20795);
var y = cljs.core.first(arglist__20795);
var more = cljs.core.rest(arglist__20795);
return G__20791__delegate(x,y,more);
});
G__20791.cljs$core$IFn$_invoke$arity$variadic = G__20791__delegate;
return G__20791;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__20796 = null;
if (arguments.length > 2) {
var G__20797__i = 0, G__20797__a = new Array(arguments.length -  2);
while (G__20797__i < G__20797__a.length) {G__20797__a[G__20797__i] = arguments[G__20797__i + 2]; ++G__20797__i;}
G__20796 = new cljs.core.IndexedSeq(G__20797__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20796);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__20801 = x;
if(G__20801){
var bit__12843__auto__ = (G__20801.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__12843__auto__) || (G__20801.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__20802 = x;
var G__20803 = y;
return goog.array.defaultCompare(G__20802,G__20803);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__20808 = xs;
var G__20809 = ys;
var G__20810 = len;
var G__20811 = (n + (1));
xs = G__20808;
ys = G__20809;
len = G__20810;
n = G__20811;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__20816 = x;
var G__20817 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20816,G__20817) : f.call(null,G__20816,G__20817));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__20818 = y;
var G__20819 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20818,G__20819) : f.call(null,G__20818,G__20819));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__20825 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__20825) : cljs.core.to_array.call(null,G__20825));
})();
var G__20826_20828 = a;
var G__20827_20829 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__20826_20828,G__20827_20829);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__20835 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__20835) : keyfn.call(null,G__20835));
})(),(function (){var G__20836 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__20836) : keyfn.call(null,G__20836));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__20842 = f;
var G__20843 = cljs.core.first(s);
var G__20844 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__20842,G__20843,G__20844) : cljs.core.reduce.call(null,G__20842,G__20843,G__20844));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__20845 = val__$1;
var G__20846 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20845,G__20846) : f.call(null,G__20845,G__20846));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20847 = nval;
var G__20848 = cljs.core.next(coll__$1);
val__$1 = G__20847;
coll__$1 = G__20848;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__20852 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__20852) : cljs.core.to_array.call(null,G__20852));
})();
var G__20853_20855 = a;
goog.array.shuffle(G__20853_20855);

var G__20854 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__20854) : cljs.core.vec.call(null,G__20854));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__20858 = coll;
if(G__20858){
var bit__12843__auto__ = (G__20858.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__12843__auto__) || (G__20858.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__20859 = coll;
if(G__20859){
var bit__12843__auto__ = (G__20859.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__12843__auto__) || (G__20859.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__20868 = null;
var G__20868__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__20868__1 = (function (x){
var G__20865 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__20865) : cf.call(null,G__20865));
});
var G__20868__2 = (function (x,y){
var G__20866 = x;
var G__20867 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20866,G__20867) : f.call(null,G__20866,G__20867));
});
G__20868 = function(x,y){
switch(arguments.length){
case 0:
return G__20868__0.call(this);
case 1:
return G__20868__1.call(this,x);
case 2:
return G__20868__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20868.cljs$core$IFn$_invoke$arity$0 = G__20868__0;
G__20868.cljs$core$IFn$_invoke$arity$1 = G__20868__1;
G__20868.cljs$core$IFn$_invoke$arity$2 = G__20868__2;
return G__20868;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__20875 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__20875) : xform.call(null,G__20875));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__20876 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__20876) : f__$1.call(null,G__20876));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__20877__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__20877 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20878__i = 0, G__20878__a = new Array(arguments.length -  2);
while (G__20878__i < G__20878__a.length) {G__20878__a[G__20878__i] = arguments[G__20878__i + 2]; ++G__20878__i;}
  more = new cljs.core.IndexedSeq(G__20878__a,0);
} 
return G__20877__delegate.call(this,x,y,more);};
G__20877.cljs$lang$maxFixedArity = 2;
G__20877.cljs$lang$applyTo = (function (arglist__20879){
var x = cljs.core.first(arglist__20879);
arglist__20879 = cljs.core.next(arglist__20879);
var y = cljs.core.first(arglist__20879);
var more = cljs.core.rest(arglist__20879);
return G__20877__delegate(x,y,more);
});
G__20877.cljs$core$IFn$_invoke$arity$variadic = G__20877__delegate;
return G__20877;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__20880 = null;
if (arguments.length > 2) {
var G__20881__i = 0, G__20881__a = new Array(arguments.length -  2);
while (G__20881__i < G__20881__a.length) {G__20881__a[G__20881__i] = arguments[G__20881__i + 2]; ++G__20881__i;}
G__20880 = new cljs.core.IndexedSeq(G__20881__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20880);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__20882__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__20882 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20883__i = 0, G__20883__a = new Array(arguments.length -  2);
while (G__20883__i < G__20883__a.length) {G__20883__a[G__20883__i] = arguments[G__20883__i + 2]; ++G__20883__i;}
  more = new cljs.core.IndexedSeq(G__20883__a,0);
} 
return G__20882__delegate.call(this,x,y,more);};
G__20882.cljs$lang$maxFixedArity = 2;
G__20882.cljs$lang$applyTo = (function (arglist__20884){
var x = cljs.core.first(arglist__20884);
arglist__20884 = cljs.core.next(arglist__20884);
var y = cljs.core.first(arglist__20884);
var more = cljs.core.rest(arglist__20884);
return G__20882__delegate(x,y,more);
});
G__20882.cljs$core$IFn$_invoke$arity$variadic = G__20882__delegate;
return G__20882;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__20885 = null;
if (arguments.length > 2) {
var G__20886__i = 0, G__20886__a = new Array(arguments.length -  2);
while (G__20886__i < G__20886__a.length) {G__20886__a[G__20886__i] = arguments[G__20886__i + 2]; ++G__20886__i;}
G__20885 = new cljs.core.IndexedSeq(G__20886__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20885);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__20887__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__20887 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20888__i = 0, G__20888__a = new Array(arguments.length -  2);
while (G__20888__i < G__20888__a.length) {G__20888__a[G__20888__i] = arguments[G__20888__i + 2]; ++G__20888__i;}
  more = new cljs.core.IndexedSeq(G__20888__a,0);
} 
return G__20887__delegate.call(this,x,y,more);};
G__20887.cljs$lang$maxFixedArity = 2;
G__20887.cljs$lang$applyTo = (function (arglist__20889){
var x = cljs.core.first(arglist__20889);
arglist__20889 = cljs.core.next(arglist__20889);
var y = cljs.core.first(arglist__20889);
var more = cljs.core.rest(arglist__20889);
return G__20887__delegate(x,y,more);
});
G__20887.cljs$core$IFn$_invoke$arity$variadic = G__20887__delegate;
return G__20887;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__20890 = null;
if (arguments.length > 2) {
var G__20891__i = 0, G__20891__a = new Array(arguments.length -  2);
while (G__20891__i < G__20891__a.length) {G__20891__a[G__20891__i] = arguments[G__20891__i + 2]; ++G__20891__i;}
G__20890 = new cljs.core.IndexedSeq(G__20891__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20890);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__20896__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__20896 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20897__i = 0, G__20897__a = new Array(arguments.length -  2);
while (G__20897__i < G__20897__a.length) {G__20897__a[G__20897__i] = arguments[G__20897__i + 2]; ++G__20897__i;}
  more = new cljs.core.IndexedSeq(G__20897__a,0);
} 
return G__20896__delegate.call(this,x,y,more);};
G__20896.cljs$lang$maxFixedArity = 2;
G__20896.cljs$lang$applyTo = (function (arglist__20898){
var x = cljs.core.first(arglist__20898);
arglist__20898 = cljs.core.next(arglist__20898);
var y = cljs.core.first(arglist__20898);
var more = cljs.core.rest(arglist__20898);
return G__20896__delegate(x,y,more);
});
G__20896.cljs$core$IFn$_invoke$arity$variadic = G__20896__delegate;
return G__20896;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__20899 = null;
if (arguments.length > 2) {
var G__20900__i = 0, G__20900__a = new Array(arguments.length -  2);
while (G__20900__i < G__20900__a.length) {G__20900__a[G__20900__i] = arguments[G__20900__i + 2]; ++G__20900__i;}
G__20899 = new cljs.core.IndexedSeq(G__20900__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20899);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__20901__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__20902 = y;
var G__20903 = cljs.core.first(more);
var G__20904 = cljs.core.next(more);
x = G__20902;
y = G__20903;
more = G__20904;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__20901 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20905__i = 0, G__20905__a = new Array(arguments.length -  2);
while (G__20905__i < G__20905__a.length) {G__20905__a[G__20905__i] = arguments[G__20905__i + 2]; ++G__20905__i;}
  more = new cljs.core.IndexedSeq(G__20905__a,0);
} 
return G__20901__delegate.call(this,x,y,more);};
G__20901.cljs$lang$maxFixedArity = 2;
G__20901.cljs$lang$applyTo = (function (arglist__20906){
var x = cljs.core.first(arglist__20906);
arglist__20906 = cljs.core.next(arglist__20906);
var y = cljs.core.first(arglist__20906);
var more = cljs.core.rest(arglist__20906);
return G__20901__delegate(x,y,more);
});
G__20901.cljs$core$IFn$_invoke$arity$variadic = G__20901__delegate;
return G__20901;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__20907 = null;
if (arguments.length > 2) {
var G__20908__i = 0, G__20908__a = new Array(arguments.length -  2);
while (G__20908__i < G__20908__a.length) {G__20908__a[G__20908__i] = arguments[G__20908__i + 2]; ++G__20908__i;}
G__20907 = new cljs.core.IndexedSeq(G__20908__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20907);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__20909__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__20910 = y;
var G__20911 = cljs.core.first(more);
var G__20912 = cljs.core.next(more);
x = G__20910;
y = G__20911;
more = G__20912;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__20909 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20913__i = 0, G__20913__a = new Array(arguments.length -  2);
while (G__20913__i < G__20913__a.length) {G__20913__a[G__20913__i] = arguments[G__20913__i + 2]; ++G__20913__i;}
  more = new cljs.core.IndexedSeq(G__20913__a,0);
} 
return G__20909__delegate.call(this,x,y,more);};
G__20909.cljs$lang$maxFixedArity = 2;
G__20909.cljs$lang$applyTo = (function (arglist__20914){
var x = cljs.core.first(arglist__20914);
arglist__20914 = cljs.core.next(arglist__20914);
var y = cljs.core.first(arglist__20914);
var more = cljs.core.rest(arglist__20914);
return G__20909__delegate(x,y,more);
});
G__20909.cljs$core$IFn$_invoke$arity$variadic = G__20909__delegate;
return G__20909;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__20915 = null;
if (arguments.length > 2) {
var G__20916__i = 0, G__20916__a = new Array(arguments.length -  2);
while (G__20916__i < G__20916__a.length) {G__20916__a[G__20916__i] = arguments[G__20916__i + 2]; ++G__20916__i;}
G__20915 = new cljs.core.IndexedSeq(G__20916__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20915);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__20917__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__20918 = y;
var G__20919 = cljs.core.first(more);
var G__20920 = cljs.core.next(more);
x = G__20918;
y = G__20919;
more = G__20920;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__20917 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20921__i = 0, G__20921__a = new Array(arguments.length -  2);
while (G__20921__i < G__20921__a.length) {G__20921__a[G__20921__i] = arguments[G__20921__i + 2]; ++G__20921__i;}
  more = new cljs.core.IndexedSeq(G__20921__a,0);
} 
return G__20917__delegate.call(this,x,y,more);};
G__20917.cljs$lang$maxFixedArity = 2;
G__20917.cljs$lang$applyTo = (function (arglist__20922){
var x = cljs.core.first(arglist__20922);
arglist__20922 = cljs.core.next(arglist__20922);
var y = cljs.core.first(arglist__20922);
var more = cljs.core.rest(arglist__20922);
return G__20917__delegate(x,y,more);
});
G__20917.cljs$core$IFn$_invoke$arity$variadic = G__20917__delegate;
return G__20917;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__20923 = null;
if (arguments.length > 2) {
var G__20924__i = 0, G__20924__a = new Array(arguments.length -  2);
while (G__20924__i < G__20924__a.length) {G__20924__a[G__20924__i] = arguments[G__20924__i + 2]; ++G__20924__i;}
G__20923 = new cljs.core.IndexedSeq(G__20924__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20923);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__20925__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__20926 = y;
var G__20927 = cljs.core.first(more);
var G__20928 = cljs.core.next(more);
x = G__20926;
y = G__20927;
more = G__20928;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__20925 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20929__i = 0, G__20929__a = new Array(arguments.length -  2);
while (G__20929__i < G__20929__a.length) {G__20929__a[G__20929__i] = arguments[G__20929__i + 2]; ++G__20929__i;}
  more = new cljs.core.IndexedSeq(G__20929__a,0);
} 
return G__20925__delegate.call(this,x,y,more);};
G__20925.cljs$lang$maxFixedArity = 2;
G__20925.cljs$lang$applyTo = (function (arglist__20930){
var x = cljs.core.first(arglist__20930);
arglist__20930 = cljs.core.next(arglist__20930);
var y = cljs.core.first(arglist__20930);
var more = cljs.core.rest(arglist__20930);
return G__20925__delegate(x,y,more);
});
G__20925.cljs$core$IFn$_invoke$arity$variadic = G__20925__delegate;
return G__20925;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__20931 = null;
if (arguments.length > 2) {
var G__20932__i = 0, G__20932__a = new Array(arguments.length -  2);
while (G__20932__i < G__20932__a.length) {G__20932__a[G__20932__i] = arguments[G__20932__i + 2]; ++G__20932__i;}
G__20931 = new cljs.core.IndexedSeq(G__20932__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20931);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__12486__auto__ = x;
var y__12487__auto__ = y;
return ((x__12486__auto__ > y__12487__auto__) ? x__12486__auto__ : y__12487__auto__);
});
var max__3 = (function() { 
var G__20933__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__12486__auto__ = x;
var y__12487__auto__ = y;
return ((x__12486__auto__ > y__12487__auto__) ? x__12486__auto__ : y__12487__auto__);
})(),more);
};
var G__20933 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20934__i = 0, G__20934__a = new Array(arguments.length -  2);
while (G__20934__i < G__20934__a.length) {G__20934__a[G__20934__i] = arguments[G__20934__i + 2]; ++G__20934__i;}
  more = new cljs.core.IndexedSeq(G__20934__a,0);
} 
return G__20933__delegate.call(this,x,y,more);};
G__20933.cljs$lang$maxFixedArity = 2;
G__20933.cljs$lang$applyTo = (function (arglist__20935){
var x = cljs.core.first(arglist__20935);
arglist__20935 = cljs.core.next(arglist__20935);
var y = cljs.core.first(arglist__20935);
var more = cljs.core.rest(arglist__20935);
return G__20933__delegate(x,y,more);
});
G__20933.cljs$core$IFn$_invoke$arity$variadic = G__20933__delegate;
return G__20933;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__20936 = null;
if (arguments.length > 2) {
var G__20937__i = 0, G__20937__a = new Array(arguments.length -  2);
while (G__20937__i < G__20937__a.length) {G__20937__a[G__20937__i] = arguments[G__20937__i + 2]; ++G__20937__i;}
G__20936 = new cljs.core.IndexedSeq(G__20937__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20936);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__12493__auto__ = x;
var y__12494__auto__ = y;
return ((x__12493__auto__ < y__12494__auto__) ? x__12493__auto__ : y__12494__auto__);
});
var min__3 = (function() { 
var G__20938__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__12493__auto__ = x;
var y__12494__auto__ = y;
return ((x__12493__auto__ < y__12494__auto__) ? x__12493__auto__ : y__12494__auto__);
})(),more);
};
var G__20938 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20939__i = 0, G__20939__a = new Array(arguments.length -  2);
while (G__20939__i < G__20939__a.length) {G__20939__a[G__20939__i] = arguments[G__20939__i + 2]; ++G__20939__i;}
  more = new cljs.core.IndexedSeq(G__20939__a,0);
} 
return G__20938__delegate.call(this,x,y,more);};
G__20938.cljs$lang$maxFixedArity = 2;
G__20938.cljs$lang$applyTo = (function (arglist__20940){
var x = cljs.core.first(arglist__20940);
arglist__20940 = cljs.core.next(arglist__20940);
var y = cljs.core.first(arglist__20940);
var more = cljs.core.rest(arglist__20940);
return G__20938__delegate(x,y,more);
});
G__20938.cljs$core$IFn$_invoke$arity$variadic = G__20938__delegate;
return G__20938;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__20941 = null;
if (arguments.length > 2) {
var G__20942__i = 0, G__20942__a = new Array(arguments.length -  2);
while (G__20942__i < G__20942__a.length) {G__20942__a[G__20942__i] = arguments[G__20942__i + 2]; ++G__20942__i;}
G__20941 = new cljs.core.IndexedSeq(G__20942__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20941);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__20943__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__20943 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20944__i = 0, G__20944__a = new Array(arguments.length -  2);
while (G__20944__i < G__20944__a.length) {G__20944__a[G__20944__i] = arguments[G__20944__i + 2]; ++G__20944__i;}
  more = new cljs.core.IndexedSeq(G__20944__a,0);
} 
return G__20943__delegate.call(this,x,y,more);};
G__20943.cljs$lang$maxFixedArity = 2;
G__20943.cljs$lang$applyTo = (function (arglist__20945){
var x = cljs.core.first(arglist__20945);
arglist__20945 = cljs.core.next(arglist__20945);
var y = cljs.core.first(arglist__20945);
var more = cljs.core.rest(arglist__20945);
return G__20943__delegate(x,y,more);
});
G__20943.cljs$core$IFn$_invoke$arity$variadic = G__20943__delegate;
return G__20943;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__20946 = null;
if (arguments.length > 2) {
var G__20947__i = 0, G__20947__a = new Array(arguments.length -  2);
while (G__20947__i < G__20947__a.length) {G__20947__a[G__20947__i] = arguments[G__20947__i + 2]; ++G__20947__i;}
G__20946 = new cljs.core.IndexedSeq(G__20947__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20946);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__20948__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__20948 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20949__i = 0, G__20949__a = new Array(arguments.length -  2);
while (G__20949__i < G__20949__a.length) {G__20949__a[G__20949__i] = arguments[G__20949__i + 2]; ++G__20949__i;}
  more = new cljs.core.IndexedSeq(G__20949__a,0);
} 
return G__20948__delegate.call(this,x,y,more);};
G__20948.cljs$lang$maxFixedArity = 2;
G__20948.cljs$lang$applyTo = (function (arglist__20950){
var x = cljs.core.first(arglist__20950);
arglist__20950 = cljs.core.next(arglist__20950);
var y = cljs.core.first(arglist__20950);
var more = cljs.core.rest(arglist__20950);
return G__20948__delegate(x,y,more);
});
G__20948.cljs$core$IFn$_invoke$arity$variadic = G__20948__delegate;
return G__20948;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__20951 = null;
if (arguments.length > 2) {
var G__20952__i = 0, G__20952__a = new Array(arguments.length -  2);
while (G__20952__i < G__20952__a.length) {G__20952__a[G__20952__i] = arguments[G__20952__i + 2]; ++G__20952__i;}
G__20951 = new cljs.core.IndexedSeq(G__20952__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20951);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__20957__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__20957 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20958__i = 0, G__20958__a = new Array(arguments.length -  2);
while (G__20958__i < G__20958__a.length) {G__20958__a[G__20958__i] = arguments[G__20958__i + 2]; ++G__20958__i;}
  more = new cljs.core.IndexedSeq(G__20958__a,0);
} 
return G__20957__delegate.call(this,x,y,more);};
G__20957.cljs$lang$maxFixedArity = 2;
G__20957.cljs$lang$applyTo = (function (arglist__20959){
var x = cljs.core.first(arglist__20959);
arglist__20959 = cljs.core.next(arglist__20959);
var y = cljs.core.first(arglist__20959);
var more = cljs.core.rest(arglist__20959);
return G__20957__delegate(x,y,more);
});
G__20957.cljs$core$IFn$_invoke$arity$variadic = G__20957__delegate;
return G__20957;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__20960 = null;
if (arguments.length > 2) {
var G__20961__i = 0, G__20961__a = new Array(arguments.length -  2);
while (G__20961__i < G__20961__a.length) {G__20961__a[G__20961__i] = arguments[G__20961__i + 2]; ++G__20961__i;}
G__20960 = new cljs.core.IndexedSeq(G__20961__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20960);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__20962__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__20962 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20963__i = 0, G__20963__a = new Array(arguments.length -  2);
while (G__20963__i < G__20963__a.length) {G__20963__a[G__20963__i] = arguments[G__20963__i + 2]; ++G__20963__i;}
  more = new cljs.core.IndexedSeq(G__20963__a,0);
} 
return G__20962__delegate.call(this,x,y,more);};
G__20962.cljs$lang$maxFixedArity = 2;
G__20962.cljs$lang$applyTo = (function (arglist__20964){
var x = cljs.core.first(arglist__20964);
arglist__20964 = cljs.core.next(arglist__20964);
var y = cljs.core.first(arglist__20964);
var more = cljs.core.rest(arglist__20964);
return G__20962__delegate(x,y,more);
});
G__20962.cljs$core$IFn$_invoke$arity$variadic = G__20962__delegate;
return G__20962;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__20965 = null;
if (arguments.length > 2) {
var G__20966__i = 0, G__20966__a = new Array(arguments.length -  2);
while (G__20966__i < G__20966__a.length) {G__20966__a[G__20966__i] = arguments[G__20966__i + 2]; ++G__20966__i;}
G__20965 = new cljs.core.IndexedSeq(G__20966__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20965);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__20967__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__20967 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20968__i = 0, G__20968__a = new Array(arguments.length -  2);
while (G__20968__i < G__20968__a.length) {G__20968__a[G__20968__i] = arguments[G__20968__i + 2]; ++G__20968__i;}
  more = new cljs.core.IndexedSeq(G__20968__a,0);
} 
return G__20967__delegate.call(this,x,y,more);};
G__20967.cljs$lang$maxFixedArity = 2;
G__20967.cljs$lang$applyTo = (function (arglist__20969){
var x = cljs.core.first(arglist__20969);
arglist__20969 = cljs.core.next(arglist__20969);
var y = cljs.core.first(arglist__20969);
var more = cljs.core.rest(arglist__20969);
return G__20967__delegate(x,y,more);
});
G__20967.cljs$core$IFn$_invoke$arity$variadic = G__20967__delegate;
return G__20967;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__20970 = null;
if (arguments.length > 2) {
var G__20971__i = 0, G__20971__a = new Array(arguments.length -  2);
while (G__20971__i < G__20971__a.length) {G__20971__a[G__20971__i] = arguments[G__20971__i + 2]; ++G__20971__i;}
G__20970 = new cljs.core.IndexedSeq(G__20971__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20970);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__20974 = x;
var G__20975 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__20974,G__20975) : cljs.core.mod.call(null,G__20974,G__20975));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__20976__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__20976 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20977__i = 0, G__20977__a = new Array(arguments.length -  2);
while (G__20977__i < G__20977__a.length) {G__20977__a[G__20977__i] = arguments[G__20977__i + 2]; ++G__20977__i;}
  more = new cljs.core.IndexedSeq(G__20977__a,0);
} 
return G__20976__delegate.call(this,x,y,more);};
G__20976.cljs$lang$maxFixedArity = 2;
G__20976.cljs$lang$applyTo = (function (arglist__20978){
var x = cljs.core.first(arglist__20978);
arglist__20978 = cljs.core.next(arglist__20978);
var y = cljs.core.first(arglist__20978);
var more = cljs.core.rest(arglist__20978);
return G__20976__delegate(x,y,more);
});
G__20976.cljs$core$IFn$_invoke$arity$variadic = G__20976__delegate;
return G__20976;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__20979 = null;
if (arguments.length > 2) {
var G__20980__i = 0, G__20980__a = new Array(arguments.length -  2);
while (G__20980__i < G__20980__a.length) {G__20980__a[G__20980__i] = arguments[G__20980__i + 2]; ++G__20980__i;}
G__20979 = new cljs.core.IndexedSeq(G__20980__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20979);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__20981__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__20981 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20982__i = 0, G__20982__a = new Array(arguments.length -  2);
while (G__20982__i < G__20982__a.length) {G__20982__a[G__20982__i] = arguments[G__20982__i + 2]; ++G__20982__i;}
  more = new cljs.core.IndexedSeq(G__20982__a,0);
} 
return G__20981__delegate.call(this,x,y,more);};
G__20981.cljs$lang$maxFixedArity = 2;
G__20981.cljs$lang$applyTo = (function (arglist__20983){
var x = cljs.core.first(arglist__20983);
arglist__20983 = cljs.core.next(arglist__20983);
var y = cljs.core.first(arglist__20983);
var more = cljs.core.rest(arglist__20983);
return G__20981__delegate(x,y,more);
});
G__20981.cljs$core$IFn$_invoke$arity$variadic = G__20981__delegate;
return G__20981;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__20984 = null;
if (arguments.length > 2) {
var G__20985__i = 0, G__20985__a = new Array(arguments.length -  2);
while (G__20985__i < G__20985__a.length) {G__20985__a[G__20985__i] = arguments[G__20985__i + 2]; ++G__20985__i;}
G__20984 = new cljs.core.IndexedSeq(G__20985__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20984);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__20988 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__20988) : Math.floor.call(null,G__20988));
} else {
var G__20989 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__20989) : Math.ceil.call(null,G__20989));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__20990__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__20990 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20991__i = 0, G__20991__a = new Array(arguments.length -  2);
while (G__20991__i < G__20991__a.length) {G__20991__a[G__20991__i] = arguments[G__20991__i + 2]; ++G__20991__i;}
  more = new cljs.core.IndexedSeq(G__20991__a,0);
} 
return G__20990__delegate.call(this,x,y,more);};
G__20990.cljs$lang$maxFixedArity = 2;
G__20990.cljs$lang$applyTo = (function (arglist__20992){
var x = cljs.core.first(arglist__20992);
arglist__20992 = cljs.core.next(arglist__20992);
var y = cljs.core.first(arglist__20992);
var more = cljs.core.rest(arglist__20992);
return G__20990__delegate(x,y,more);
});
G__20990.cljs$core$IFn$_invoke$arity$variadic = G__20990__delegate;
return G__20990;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__20993 = null;
if (arguments.length > 2) {
var G__20994__i = 0, G__20994__a = new Array(arguments.length -  2);
while (G__20994__i < G__20994__a.length) {G__20994__a[G__20994__i] = arguments[G__20994__i + 2]; ++G__20994__i;}
G__20993 = new cljs.core.IndexedSeq(G__20994__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20993);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__20995__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__20995 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20996__i = 0, G__20996__a = new Array(arguments.length -  2);
while (G__20996__i < G__20996__a.length) {G__20996__a[G__20996__i] = arguments[G__20996__i + 2]; ++G__20996__i;}
  more = new cljs.core.IndexedSeq(G__20996__a,0);
} 
return G__20995__delegate.call(this,x,y,more);};
G__20995.cljs$lang$maxFixedArity = 2;
G__20995.cljs$lang$applyTo = (function (arglist__20997){
var x = cljs.core.first(arglist__20997);
arglist__20997 = cljs.core.next(arglist__20997);
var y = cljs.core.first(arglist__20997);
var more = cljs.core.rest(arglist__20997);
return G__20995__delegate(x,y,more);
});
G__20995.cljs$core$IFn$_invoke$arity$variadic = G__20995__delegate;
return G__20995;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__20998 = null;
if (arguments.length > 2) {
var G__20999__i = 0, G__20999__a = new Array(arguments.length -  2);
while (G__20999__i < G__20999__a.length) {G__20999__a[G__20999__i] = arguments[G__20999__i + 2]; ++G__20999__i;}
G__20998 = new cljs.core.IndexedSeq(G__20999__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20998);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__21000__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__21000 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21001__i = 0, G__21001__a = new Array(arguments.length -  2);
while (G__21001__i < G__21001__a.length) {G__21001__a[G__21001__i] = arguments[G__21001__i + 2]; ++G__21001__i;}
  more = new cljs.core.IndexedSeq(G__21001__a,0);
} 
return G__21000__delegate.call(this,x,y,more);};
G__21000.cljs$lang$maxFixedArity = 2;
G__21000.cljs$lang$applyTo = (function (arglist__21002){
var x = cljs.core.first(arglist__21002);
arglist__21002 = cljs.core.next(arglist__21002);
var y = cljs.core.first(arglist__21002);
var more = cljs.core.rest(arglist__21002);
return G__21000__delegate(x,y,more);
});
G__21000.cljs$core$IFn$_invoke$arity$variadic = G__21000__delegate;
return G__21000;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__21003 = null;
if (arguments.length > 2) {
var G__21004__i = 0, G__21004__a = new Array(arguments.length -  2);
while (G__21004__i < G__21004__a.length) {G__21004__a[G__21004__i] = arguments[G__21004__i + 2]; ++G__21004__i;}
G__21003 = new cljs.core.IndexedSeq(G__21004__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21003);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__21005__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__21005 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21006__i = 0, G__21006__a = new Array(arguments.length -  2);
while (G__21006__i < G__21006__a.length) {G__21006__a[G__21006__i] = arguments[G__21006__i + 2]; ++G__21006__i;}
  more = new cljs.core.IndexedSeq(G__21006__a,0);
} 
return G__21005__delegate.call(this,x,y,more);};
G__21005.cljs$lang$maxFixedArity = 2;
G__21005.cljs$lang$applyTo = (function (arglist__21007){
var x = cljs.core.first(arglist__21007);
arglist__21007 = cljs.core.next(arglist__21007);
var y = cljs.core.first(arglist__21007);
var more = cljs.core.rest(arglist__21007);
return G__21005__delegate(x,y,more);
});
G__21005.cljs$core$IFn$_invoke$arity$variadic = G__21005__delegate;
return G__21005;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__21008 = null;
if (arguments.length > 2) {
var G__21009__i = 0, G__21009__a = new Array(arguments.length -  2);
while (G__21009__i < G__21009__a.length) {G__21009__a[G__21009__i] = arguments[G__21009__i + 2]; ++G__21009__i;}
G__21008 = new cljs.core.IndexedSeq(G__21009__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21008);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__21014__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__21015 = y;
var G__21016 = cljs.core.first(more);
var G__21017 = cljs.core.next(more);
x = G__21015;
y = G__21016;
more = G__21017;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__21014 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21018__i = 0, G__21018__a = new Array(arguments.length -  2);
while (G__21018__i < G__21018__a.length) {G__21018__a[G__21018__i] = arguments[G__21018__i + 2]; ++G__21018__i;}
  more = new cljs.core.IndexedSeq(G__21018__a,0);
} 
return G__21014__delegate.call(this,x,y,more);};
G__21014.cljs$lang$maxFixedArity = 2;
G__21014.cljs$lang$applyTo = (function (arglist__21019){
var x = cljs.core.first(arglist__21019);
arglist__21019 = cljs.core.next(arglist__21019);
var y = cljs.core.first(arglist__21019);
var more = cljs.core.rest(arglist__21019);
return G__21014__delegate(x,y,more);
});
G__21014.cljs$core$IFn$_invoke$arity$variadic = G__21014__delegate;
return G__21014;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__21020 = null;
if (arguments.length > 2) {
var G__21021__i = 0, G__21021__a = new Array(arguments.length -  2);
while (G__21021__i < G__21021__a.length) {G__21021__a[G__21021__i] = arguments[G__21021__i + 2]; ++G__21021__i;}
G__21020 = new cljs.core.IndexedSeq(G__21021__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21020);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__21022 = (n__$1 - (1));
var G__21023 = cljs.core.next(xs);
n__$1 = G__21022;
xs = G__21023;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__21027 = x;
return goog.string.buildString(G__21027);
}
});
var str__2 = (function() { 
var G__21028__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__21029 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__21030 = cljs.core.next(more);
sb = G__21029;
more = G__21030;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__21028 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__21031__i = 0, G__21031__a = new Array(arguments.length -  1);
while (G__21031__i < G__21031__a.length) {G__21031__a[G__21031__i] = arguments[G__21031__i + 1]; ++G__21031__i;}
  ys = new cljs.core.IndexedSeq(G__21031__a,0);
} 
return G__21028__delegate.call(this,x,ys);};
G__21028.cljs$lang$maxFixedArity = 1;
G__21028.cljs$lang$applyTo = (function (arglist__21032){
var x = cljs.core.first(arglist__21032);
var ys = cljs.core.rest(arglist__21032);
return G__21028__delegate(x,ys);
});
G__21028.cljs$core$IFn$_invoke$arity$variadic = G__21028__delegate;
return G__21028;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__21033 = null;
if (arguments.length > 1) {
var G__21034__i = 0, G__21034__a = new Array(arguments.length -  1);
while (G__21034__i < G__21034__a.length) {G__21034__a[G__21034__i] = arguments[G__21034__i + 1]; ++G__21034__i;}
G__21033 = new cljs.core.IndexedSeq(G__21034__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__21033);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__21035 = cljs.core.next(xs);
var G__21036 = cljs.core.next(ys);
xs = G__21035;
ys = G__21036;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__21037 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__21038 = cljs.core.next(s);
res = G__21037;
s = G__21038;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__21043 = ((h + (cljs.core.hash((function (){var G__21041 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21041) : cljs.core.key.call(null,G__21041));
})()) ^ cljs.core.hash((function (){var G__21042 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21042) : cljs.core.val.call(null,G__21042));
})()))) % (4503599627370496));
var G__21044 = cljs.core.next(s);
h = G__21043;
s = G__21044;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__21045 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__21046 = cljs.core.next(s__$1);
h = G__21045;
s__$1 = G__21046;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__21057_21067 = cljs.core.seq(fn_map);
var chunk__21058_21068 = null;
var count__21059_21069 = (0);
var i__21060_21070 = (0);
while(true){
if((i__21060_21070 < count__21059_21069)){
var vec__21061_21071 = chunk__21058_21068.cljs$core$IIndexed$_nth$arity$2(null,i__21060_21070);
var key_name_21072 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21061_21071,(0),null);
var f_21073 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21061_21071,(1),null);
var str_name_21074 = (function (){var G__21062 = key_name_21072;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__21062) : cljs.core.name.call(null,G__21062));
})();
(obj[str_name_21074] = f_21073);

var G__21075 = seq__21057_21067;
var G__21076 = chunk__21058_21068;
var G__21077 = count__21059_21069;
var G__21078 = (i__21060_21070 + (1));
seq__21057_21067 = G__21075;
chunk__21058_21068 = G__21076;
count__21059_21069 = G__21077;
i__21060_21070 = G__21078;
continue;
} else {
var temp__4126__auto___21079 = cljs.core.seq(seq__21057_21067);
if(temp__4126__auto___21079){
var seq__21057_21080__$1 = temp__4126__auto___21079;
if(cljs.core.chunked_seq_QMARK_(seq__21057_21080__$1)){
var c__12956__auto___21081 = (function (){var G__21063 = seq__21057_21080__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__21063) : cljs.core.chunk_first.call(null,G__21063));
})();
var G__21082 = (function (){var G__21064 = seq__21057_21080__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__21064) : cljs.core.chunk_rest.call(null,G__21064));
})();
var G__21083 = c__12956__auto___21081;
var G__21084 = cljs.core.count(c__12956__auto___21081);
var G__21085 = (0);
seq__21057_21067 = G__21082;
chunk__21058_21068 = G__21083;
count__21059_21069 = G__21084;
i__21060_21070 = G__21085;
continue;
} else {
var vec__21065_21086 = cljs.core.first(seq__21057_21080__$1);
var key_name_21087 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21065_21086,(0),null);
var f_21088 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21065_21086,(1),null);
var str_name_21089 = (function (){var G__21066 = key_name_21087;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__21066) : cljs.core.name.call(null,G__21066));
})();
(obj[str_name_21089] = f_21088);

var G__21090 = cljs.core.next(seq__21057_21080__$1);
var G__21091 = null;
var G__21092 = (0);
var G__21093 = (0);
seq__21057_21067 = G__21090;
chunk__21058_21068 = G__21091;
count__21059_21069 = G__21092;
i__21060_21070 = G__21093;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12590__auto__ = self__.__hash;
if(!((h__12590__auto__ == null))){
return h__12590__auto__;
} else {
var h__12590__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12590__auto____$1;

return h__12590__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__21095 = coll;
if(G__21095){
var bit__12850__auto__ = (G__21095.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__12850__auto__) || (G__21095.cljs$core$IReversible$)){
return true;
} else {
if((!G__21095.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__21095);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__21095);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__21096 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__21096;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__21097 = (i - (1));
var G__21098 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__21097;
r = G__21098;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__21099__i = 0, G__21099__a = new Array(arguments.length -  0);
while (G__21099__i < G__21099__a.length) {G__21099__a[G__21099__i] = arguments[G__21099__i + 0]; ++G__21099__i;}
  xs = new cljs.core.IndexedSeq(G__21099__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__21100){
var xs = cljs.core.seq(arglist__21100);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12590__auto__ = self__.__hash;
if(!((h__12590__auto__ == null))){
return h__12590__auto__;
} else {
var h__12590__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12590__auto____$1;

return h__12590__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__12169__auto__ = (coll == null);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var G__21104 = coll;
if(G__21104){
var bit__12843__auto__ = (G__21104.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__12843__auto__) || (G__21104.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__21106 = x;
if(G__21106){
var bit__12850__auto__ = (G__21106.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__12850__auto__) || (G__21106.cljs$core$IList$)){
return true;
} else {
if((!G__21106.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__21106);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__21106);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__12157__auto__ = cljs.core.not(a.ns);
if(and__12157__auto__){
return b.ns;
} else {
return and__12157__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__21113 = a.ns;
var G__21114 = b.ns;
return goog.array.defaultCompare(G__21113,G__21114);
})();
if(((0) === nsc)){
var G__21115 = a.name;
var G__21116 = b.name;
return goog.array.defaultCompare(G__21115,G__21116);
} else {
return nsc;
}
}
} else {
var G__21117 = a.name;
var G__21118 = b.name;
return goog.array.defaultCompare(G__21117,G__21118);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__12590__auto__ = self__._hash;
if(!((h__12590__auto__ == null))){
return h__12590__auto__;
} else {
var h__12590__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__12590__auto____$1;

return h__12590__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__21120 = null;
var G__21120__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__21120__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__21120 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__21120__2.call(this,self__,coll);
case 3:
return G__21120__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21120.cljs$core$IFn$_invoke$arity$2 = G__21120__2;
G__21120.cljs$core$IFn$_invoke$arity$3 = G__21120__3;
return G__21120;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args21119){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21119)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__21122 = x;
if(G__21122){
var bit__12843__auto__ = (G__21122.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__12843__auto__) || (G__21122.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__21124 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__21124) : cljs.core.name.call(null,G__21124));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12590__auto__ = self__.__hash;
if(!((h__12590__auto__ == null))){
return h__12590__auto__;
} else {
var h__12590__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12590__auto____$1;

return h__12590__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__21125 = ls.sval();
ls = G__21125;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12590__auto__ = self__.__hash;
if(!((h__12590__auto__ == null))){
return h__12590__auto__;
} else {
var h__12590__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12590__auto____$1;

return h__12590__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__21127 = s;
if(G__21127){
var bit__12843__auto__ = (G__21127.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__12843__auto__) || (G__21127.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__21128 = cljs.core.next(s__$1);
s__$1 = G__21128;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_21129 = (0);
var xs_21130 = cljs.core.seq(coll);
while(true){
if(xs_21130){
(ret[i_21129] = cljs.core.to_array(cljs.core.first(xs_21130)));

var G__21131 = (i_21129 + (1));
var G__21132 = cljs.core.next(xs_21130);
i_21129 = G__21131;
xs_21130 = G__21132;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__21135 = (i + (1));
var G__21136 = cljs.core.next(s__$1);
i = G__21135;
s__$1 = G__21136;
continue;
} else {
return a;
}
break;
}
} else {
var n__13056__auto___21137 = size;
var i_21138 = (0);
while(true){
if((i_21138 < n__13056__auto___21137)){
(a[i_21138] = init_val_or_seq);

var G__21139 = (i_21138 + (1));
i_21138 = G__21139;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__21142 = (i + (1));
var G__21143 = cljs.core.next(s__$1);
i = G__21142;
s__$1 = G__21143;
continue;
} else {
return a;
}
break;
}
} else {
var n__13056__auto___21144 = size;
var i_21145 = (0);
while(true){
if((i_21145 < n__13056__auto___21144)){
(a[i_21145] = init_val_or_seq);

var G__21146 = (i_21145 + (1));
i_21145 = G__21146;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__21149 = (i + (1));
var G__21150 = cljs.core.next(s__$1);
i = G__21149;
s__$1 = G__21150;
continue;
} else {
return a;
}
break;
}
} else {
var n__13056__auto___21151 = size;
var i_21152 = (0);
while(true){
if((i_21152 < n__13056__auto___21151)){
(a[i_21152] = init_val_or_seq);

var G__21153 = (i_21152 + (1));
i_21152 = G__21153;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__21156 = (i + (1));
var G__21157 = cljs.core.next(s__$1);
i = G__21156;
s__$1 = G__21157;
continue;
} else {
return a;
}
break;
}
} else {
var n__13056__auto___21158 = size;
var i_21159 = (0);
while(true){
if((i_21159 < n__13056__auto___21158)){
(a[i_21159] = init_val_or_seq);

var G__21160 = (i_21159 + (1));
i_21159 = G__21160;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__21161 = cljs.core.next(s__$1);
var G__21162 = (i - (1));
var G__21163 = (sum + (1));
s__$1 = G__21161;
i = G__21162;
sum = G__21163;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__21183__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__21183 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__21184__i = 0, G__21184__a = new Array(arguments.length -  2);
while (G__21184__i < G__21184__a.length) {G__21184__a[G__21184__i] = arguments[G__21184__i + 2]; ++G__21184__i;}
  zs = new cljs.core.IndexedSeq(G__21184__a,0);
} 
return G__21183__delegate.call(this,x,y,zs);};
G__21183.cljs$lang$maxFixedArity = 2;
G__21183.cljs$lang$applyTo = (function (arglist__21185){
var x = cljs.core.first(arglist__21185);
arglist__21185 = cljs.core.next(arglist__21185);
var y = cljs.core.first(arglist__21185);
var zs = cljs.core.rest(arglist__21185);
return G__21183__delegate(x,y,zs);
});
G__21183.cljs$core$IFn$_invoke$arity$variadic = G__21183__delegate;
return G__21183;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__21186 = null;
if (arguments.length > 2) {
var G__21187__i = 0, G__21187__a = new Array(arguments.length -  2);
while (G__21187__i < G__21187__a.length) {G__21187__a[G__21187__i] = arguments[G__21187__i + 2]; ++G__21187__i;}
G__21186 = new cljs.core.IndexedSeq(G__21187__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21186);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__21188__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__21188 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__21189__i = 0, G__21189__a = new Array(arguments.length -  4);
while (G__21189__i < G__21189__a.length) {G__21189__a[G__21189__i] = arguments[G__21189__i + 4]; ++G__21189__i;}
  more = new cljs.core.IndexedSeq(G__21189__a,0);
} 
return G__21188__delegate.call(this,a,b,c,d,more);};
G__21188.cljs$lang$maxFixedArity = 4;
G__21188.cljs$lang$applyTo = (function (arglist__21190){
var a = cljs.core.first(arglist__21190);
arglist__21190 = cljs.core.next(arglist__21190);
var b = cljs.core.first(arglist__21190);
arglist__21190 = cljs.core.next(arglist__21190);
var c = cljs.core.first(arglist__21190);
arglist__21190 = cljs.core.next(arglist__21190);
var d = cljs.core.first(arglist__21190);
var more = cljs.core.rest(arglist__21190);
return G__21188__delegate(a,b,c,d,more);
});
G__21188.cljs$core$IFn$_invoke$arity$variadic = G__21188__delegate;
return G__21188;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__21191 = null;
if (arguments.length > 4) {
var G__21192__i = 0, G__21192__a = new Array(arguments.length -  4);
while (G__21192__i < G__21192__a.length) {G__21192__a[G__21192__i] = arguments[G__21192__i + 4]; ++G__21192__i;}
G__21191 = new cljs.core.IndexedSeq(G__21192__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__21191);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__21193__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__21194 = ntcoll;
var G__21195 = cljs.core.first(vals);
var G__21196 = cljs.core.next(vals);
tcoll = G__21194;
val = G__21195;
vals = G__21196;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__21193 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__21197__i = 0, G__21197__a = new Array(arguments.length -  2);
while (G__21197__i < G__21197__a.length) {G__21197__a[G__21197__i] = arguments[G__21197__i + 2]; ++G__21197__i;}
  vals = new cljs.core.IndexedSeq(G__21197__a,0);
} 
return G__21193__delegate.call(this,tcoll,val,vals);};
G__21193.cljs$lang$maxFixedArity = 2;
G__21193.cljs$lang$applyTo = (function (arglist__21198){
var tcoll = cljs.core.first(arglist__21198);
arglist__21198 = cljs.core.next(arglist__21198);
var val = cljs.core.first(arglist__21198);
var vals = cljs.core.rest(arglist__21198);
return G__21193__delegate(tcoll,val,vals);
});
G__21193.cljs$core$IFn$_invoke$arity$variadic = G__21193__delegate;
return G__21193;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__21199 = null;
if (arguments.length > 2) {
var G__21200__i = 0, G__21200__a = new Array(arguments.length -  2);
while (G__21200__i < G__21200__a.length) {G__21200__a[G__21200__i] = arguments[G__21200__i + 2]; ++G__21200__i;}
G__21199 = new cljs.core.IndexedSeq(G__21200__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__21199);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__21201__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__21202 = ntcoll;
var G__21203 = cljs.core.first(kvs);
var G__21204 = cljs.core.second(kvs);
var G__21205 = cljs.core.nnext(kvs);
tcoll = G__21202;
key = G__21203;
val = G__21204;
kvs = G__21205;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__21201 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__21206__i = 0, G__21206__a = new Array(arguments.length -  3);
while (G__21206__i < G__21206__a.length) {G__21206__a[G__21206__i] = arguments[G__21206__i + 3]; ++G__21206__i;}
  kvs = new cljs.core.IndexedSeq(G__21206__a,0);
} 
return G__21201__delegate.call(this,tcoll,key,val,kvs);};
G__21201.cljs$lang$maxFixedArity = 3;
G__21201.cljs$lang$applyTo = (function (arglist__21207){
var tcoll = cljs.core.first(arglist__21207);
arglist__21207 = cljs.core.next(arglist__21207);
var key = cljs.core.first(arglist__21207);
arglist__21207 = cljs.core.next(arglist__21207);
var val = cljs.core.first(arglist__21207);
var kvs = cljs.core.rest(arglist__21207);
return G__21201__delegate(tcoll,key,val,kvs);
});
G__21201.cljs$core$IFn$_invoke$arity$variadic = G__21201__delegate;
return G__21201;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__21208 = null;
if (arguments.length > 3) {
var G__21209__i = 0, G__21209__a = new Array(arguments.length -  3);
while (G__21209__i < G__21209__a.length) {G__21209__a[G__21209__i] = arguments[G__21209__i + 3]; ++G__21209__i;}
G__21208 = new cljs.core.IndexedSeq(G__21209__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__21208);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__21210__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__21211 = ntcoll;
var G__21212 = cljs.core.first(ks);
var G__21213 = cljs.core.next(ks);
tcoll = G__21211;
key = G__21212;
ks = G__21213;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__21210 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__21214__i = 0, G__21214__a = new Array(arguments.length -  2);
while (G__21214__i < G__21214__a.length) {G__21214__a[G__21214__i] = arguments[G__21214__i + 2]; ++G__21214__i;}
  ks = new cljs.core.IndexedSeq(G__21214__a,0);
} 
return G__21210__delegate.call(this,tcoll,key,ks);};
G__21210.cljs$lang$maxFixedArity = 2;
G__21210.cljs$lang$applyTo = (function (arglist__21215){
var tcoll = cljs.core.first(arglist__21215);
arglist__21215 = cljs.core.next(arglist__21215);
var key = cljs.core.first(arglist__21215);
var ks = cljs.core.rest(arglist__21215);
return G__21210__delegate(tcoll,key,ks);
});
G__21210.cljs$core$IFn$_invoke$arity$variadic = G__21210__delegate;
return G__21210;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__21216 = null;
if (arguments.length > 2) {
var G__21217__i = 0, G__21217__a = new Array(arguments.length -  2);
while (G__21217__i < G__21217__a.length) {G__21217__a[G__21217__i] = arguments[G__21217__i + 2]; ++G__21217__i;}
G__21216 = new cljs.core.IndexedSeq(G__21217__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__21216);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__21218__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__21219 = ntcoll;
var G__21220 = cljs.core.first(vals);
var G__21221 = cljs.core.next(vals);
tcoll = G__21219;
val = G__21220;
vals = G__21221;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__21218 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__21222__i = 0, G__21222__a = new Array(arguments.length -  2);
while (G__21222__i < G__21222__a.length) {G__21222__a[G__21222__i] = arguments[G__21222__i + 2]; ++G__21222__i;}
  vals = new cljs.core.IndexedSeq(G__21222__a,0);
} 
return G__21218__delegate.call(this,tcoll,val,vals);};
G__21218.cljs$lang$maxFixedArity = 2;
G__21218.cljs$lang$applyTo = (function (arglist__21223){
var tcoll = cljs.core.first(arglist__21223);
arglist__21223 = cljs.core.next(arglist__21223);
var val = cljs.core.first(arglist__21223);
var vals = cljs.core.rest(arglist__21223);
return G__21218__delegate(tcoll,val,vals);
});
G__21218.cljs$core$IFn$_invoke$arity$variadic = G__21218__delegate;
return G__21218;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__21224 = null;
if (arguments.length > 2) {
var G__21225__i = 0, G__21225__a = new Array(arguments.length -  2);
while (G__21225__i < G__21225__a.length) {G__21225__a[G__21225__i] = arguments[G__21225__i + 2]; ++G__21225__i;}
G__21224 = new cljs.core.IndexedSeq(G__21225__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__21224);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a13100 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a13100);
} else {
var G__21436 = a13100;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21436) : f.call(null,G__21436));
}
} else {
var b13101 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a13100,b13101);
} else {
var G__21437 = a13100;
var G__21438 = b13101;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21437,G__21438) : f.call(null,G__21437,G__21438));
}
} else {
var c13102 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a13100,b13101,c13102);
} else {
var G__21439 = a13100;
var G__21440 = b13101;
var G__21441 = c13102;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21439,G__21440,G__21441) : f.call(null,G__21439,G__21440,G__21441));
}
} else {
var d13103 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a13100,b13101,c13102,d13103);
} else {
var G__21442 = a13100;
var G__21443 = b13101;
var G__21444 = c13102;
var G__21445 = d13103;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21442,G__21443,G__21444,G__21445) : f.call(null,G__21442,G__21443,G__21444,G__21445));
}
} else {
var e13104 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a13100,b13101,c13102,d13103,e13104);
} else {
var G__21446 = a13100;
var G__21447 = b13101;
var G__21448 = c13102;
var G__21449 = d13103;
var G__21450 = e13104;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__21446,G__21447,G__21448,G__21449,G__21450) : f.call(null,G__21446,G__21447,G__21448,G__21449,G__21450));
}
} else {
var f13105 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a13100,b13101,c13102,d13103,e13104,f13105);
} else {
var G__21451 = a13100;
var G__21452 = b13101;
var G__21453 = c13102;
var G__21454 = d13103;
var G__21455 = e13104;
var G__21456 = f13105;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__21451,G__21452,G__21453,G__21454,G__21455,G__21456) : f.call(null,G__21451,G__21452,G__21453,G__21454,G__21455,G__21456));
}
} else {
var g13106 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a13100,b13101,c13102,d13103,e13104,f13105,g13106);
} else {
var G__21457 = a13100;
var G__21458 = b13101;
var G__21459 = c13102;
var G__21460 = d13103;
var G__21461 = e13104;
var G__21462 = f13105;
var G__21463 = g13106;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__21457,G__21458,G__21459,G__21460,G__21461,G__21462,G__21463) : f.call(null,G__21457,G__21458,G__21459,G__21460,G__21461,G__21462,G__21463));
}
} else {
var h13107 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a13100,b13101,c13102,d13103,e13104,f13105,g13106,h13107);
} else {
var G__21464 = a13100;
var G__21465 = b13101;
var G__21466 = c13102;
var G__21467 = d13103;
var G__21468 = e13104;
var G__21469 = f13105;
var G__21470 = g13106;
var G__21471 = h13107;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__21464,G__21465,G__21466,G__21467,G__21468,G__21469,G__21470,G__21471) : f.call(null,G__21464,G__21465,G__21466,G__21467,G__21468,G__21469,G__21470,G__21471));
}
} else {
var i13108 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a13100,b13101,c13102,d13103,e13104,f13105,g13106,h13107,i13108);
} else {
var G__21472 = a13100;
var G__21473 = b13101;
var G__21474 = c13102;
var G__21475 = d13103;
var G__21476 = e13104;
var G__21477 = f13105;
var G__21478 = g13106;
var G__21479 = h13107;
var G__21480 = i13108;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__21472,G__21473,G__21474,G__21475,G__21476,G__21477,G__21478,G__21479,G__21480) : f.call(null,G__21472,G__21473,G__21474,G__21475,G__21476,G__21477,G__21478,G__21479,G__21480));
}
} else {
var j13109 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a13100,b13101,c13102,d13103,e13104,f13105,g13106,h13107,i13108,j13109);
} else {
var G__21481 = a13100;
var G__21482 = b13101;
var G__21483 = c13102;
var G__21484 = d13103;
var G__21485 = e13104;
var G__21486 = f13105;
var G__21487 = g13106;
var G__21488 = h13107;
var G__21489 = i13108;
var G__21490 = j13109;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__21481,G__21482,G__21483,G__21484,G__21485,G__21486,G__21487,G__21488,G__21489,G__21490) : f.call(null,G__21481,G__21482,G__21483,G__21484,G__21485,G__21486,G__21487,G__21488,G__21489,G__21490));
}
} else {
var k13110 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a13100,b13101,c13102,d13103,e13104,f13105,g13106,h13107,i13108,j13109,k13110);
} else {
var G__21491 = a13100;
var G__21492 = b13101;
var G__21493 = c13102;
var G__21494 = d13103;
var G__21495 = e13104;
var G__21496 = f13105;
var G__21497 = g13106;
var G__21498 = h13107;
var G__21499 = i13108;
var G__21500 = j13109;
var G__21501 = k13110;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__21491,G__21492,G__21493,G__21494,G__21495,G__21496,G__21497,G__21498,G__21499,G__21500,G__21501) : f.call(null,G__21491,G__21492,G__21493,G__21494,G__21495,G__21496,G__21497,G__21498,G__21499,G__21500,G__21501));
}
} else {
var l13111 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a13100,b13101,c13102,d13103,e13104,f13105,g13106,h13107,i13108,j13109,k13110,l13111);
} else {
var G__21502 = a13100;
var G__21503 = b13101;
var G__21504 = c13102;
var G__21505 = d13103;
var G__21506 = e13104;
var G__21507 = f13105;
var G__21508 = g13106;
var G__21509 = h13107;
var G__21510 = i13108;
var G__21511 = j13109;
var G__21512 = k13110;
var G__21513 = l13111;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__21502,G__21503,G__21504,G__21505,G__21506,G__21507,G__21508,G__21509,G__21510,G__21511,G__21512,G__21513) : f.call(null,G__21502,G__21503,G__21504,G__21505,G__21506,G__21507,G__21508,G__21509,G__21510,G__21511,G__21512,G__21513));
}
} else {
var m13112 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a13100,b13101,c13102,d13103,e13104,f13105,g13106,h13107,i13108,j13109,k13110,l13111,m13112);
} else {
var G__21514 = a13100;
var G__21515 = b13101;
var G__21516 = c13102;
var G__21517 = d13103;
var G__21518 = e13104;
var G__21519 = f13105;
var G__21520 = g13106;
var G__21521 = h13107;
var G__21522 = i13108;
var G__21523 = j13109;
var G__21524 = k13110;
var G__21525 = l13111;
var G__21526 = m13112;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__21514,G__21515,G__21516,G__21517,G__21518,G__21519,G__21520,G__21521,G__21522,G__21523,G__21524,G__21525,G__21526) : f.call(null,G__21514,G__21515,G__21516,G__21517,G__21518,G__21519,G__21520,G__21521,G__21522,G__21523,G__21524,G__21525,G__21526));
}
} else {
var n13113 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a13100,b13101,c13102,d13103,e13104,f13105,g13106,h13107,i13108,j13109,k13110,l13111,m13112,n13113);
} else {
var G__21527 = a13100;
var G__21528 = b13101;
var G__21529 = c13102;
var G__21530 = d13103;
var G__21531 = e13104;
var G__21532 = f13105;
var G__21533 = g13106;
var G__21534 = h13107;
var G__21535 = i13108;
var G__21536 = j13109;
var G__21537 = k13110;
var G__21538 = l13111;
var G__21539 = m13112;
var G__21540 = n13113;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__21527,G__21528,G__21529,G__21530,G__21531,G__21532,G__21533,G__21534,G__21535,G__21536,G__21537,G__21538,G__21539,G__21540) : f.call(null,G__21527,G__21528,G__21529,G__21530,G__21531,G__21532,G__21533,G__21534,G__21535,G__21536,G__21537,G__21538,G__21539,G__21540));
}
} else {
var o13114 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a13100,b13101,c13102,d13103,e13104,f13105,g13106,h13107,i13108,j13109,k13110,l13111,m13112,n13113,o13114);
} else {
var G__21541 = a13100;
var G__21542 = b13101;
var G__21543 = c13102;
var G__21544 = d13103;
var G__21545 = e13104;
var G__21546 = f13105;
var G__21547 = g13106;
var G__21548 = h13107;
var G__21549 = i13108;
var G__21550 = j13109;
var G__21551 = k13110;
var G__21552 = l13111;
var G__21553 = m13112;
var G__21554 = n13113;
var G__21555 = o13114;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__21541,G__21542,G__21543,G__21544,G__21545,G__21546,G__21547,G__21548,G__21549,G__21550,G__21551,G__21552,G__21553,G__21554,G__21555) : f.call(null,G__21541,G__21542,G__21543,G__21544,G__21545,G__21546,G__21547,G__21548,G__21549,G__21550,G__21551,G__21552,G__21553,G__21554,G__21555));
}
} else {
var p13115 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a13100,b13101,c13102,d13103,e13104,f13105,g13106,h13107,i13108,j13109,k13110,l13111,m13112,n13113,o13114,p13115);
} else {
var G__21556 = a13100;
var G__21557 = b13101;
var G__21558 = c13102;
var G__21559 = d13103;
var G__21560 = e13104;
var G__21561 = f13105;
var G__21562 = g13106;
var G__21563 = h13107;
var G__21564 = i13108;
var G__21565 = j13109;
var G__21566 = k13110;
var G__21567 = l13111;
var G__21568 = m13112;
var G__21569 = n13113;
var G__21570 = o13114;
var G__21571 = p13115;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__21556,G__21557,G__21558,G__21559,G__21560,G__21561,G__21562,G__21563,G__21564,G__21565,G__21566,G__21567,G__21568,G__21569,G__21570,G__21571) : f.call(null,G__21556,G__21557,G__21558,G__21559,G__21560,G__21561,G__21562,G__21563,G__21564,G__21565,G__21566,G__21567,G__21568,G__21569,G__21570,G__21571));
}
} else {
var q13116 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a13100,b13101,c13102,d13103,e13104,f13105,g13106,h13107,i13108,j13109,k13110,l13111,m13112,n13113,o13114,p13115,q13116);
} else {
var G__21572 = a13100;
var G__21573 = b13101;
var G__21574 = c13102;
var G__21575 = d13103;
var G__21576 = e13104;
var G__21577 = f13105;
var G__21578 = g13106;
var G__21579 = h13107;
var G__21580 = i13108;
var G__21581 = j13109;
var G__21582 = k13110;
var G__21583 = l13111;
var G__21584 = m13112;
var G__21585 = n13113;
var G__21586 = o13114;
var G__21587 = p13115;
var G__21588 = q13116;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__21572,G__21573,G__21574,G__21575,G__21576,G__21577,G__21578,G__21579,G__21580,G__21581,G__21582,G__21583,G__21584,G__21585,G__21586,G__21587,G__21588) : f.call(null,G__21572,G__21573,G__21574,G__21575,G__21576,G__21577,G__21578,G__21579,G__21580,G__21581,G__21582,G__21583,G__21584,G__21585,G__21586,G__21587,G__21588));
}
} else {
var r13117 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a13100,b13101,c13102,d13103,e13104,f13105,g13106,h13107,i13108,j13109,k13110,l13111,m13112,n13113,o13114,p13115,q13116,r13117);
} else {
var G__21589 = a13100;
var G__21590 = b13101;
var G__21591 = c13102;
var G__21592 = d13103;
var G__21593 = e13104;
var G__21594 = f13105;
var G__21595 = g13106;
var G__21596 = h13107;
var G__21597 = i13108;
var G__21598 = j13109;
var G__21599 = k13110;
var G__21600 = l13111;
var G__21601 = m13112;
var G__21602 = n13113;
var G__21603 = o13114;
var G__21604 = p13115;
var G__21605 = q13116;
var G__21606 = r13117;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__21589,G__21590,G__21591,G__21592,G__21593,G__21594,G__21595,G__21596,G__21597,G__21598,G__21599,G__21600,G__21601,G__21602,G__21603,G__21604,G__21605,G__21606) : f.call(null,G__21589,G__21590,G__21591,G__21592,G__21593,G__21594,G__21595,G__21596,G__21597,G__21598,G__21599,G__21600,G__21601,G__21602,G__21603,G__21604,G__21605,G__21606));
}
} else {
var s13118 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a13100,b13101,c13102,d13103,e13104,f13105,g13106,h13107,i13108,j13109,k13110,l13111,m13112,n13113,o13114,p13115,q13116,r13117,s13118);
} else {
var G__21607 = a13100;
var G__21608 = b13101;
var G__21609 = c13102;
var G__21610 = d13103;
var G__21611 = e13104;
var G__21612 = f13105;
var G__21613 = g13106;
var G__21614 = h13107;
var G__21615 = i13108;
var G__21616 = j13109;
var G__21617 = k13110;
var G__21618 = l13111;
var G__21619 = m13112;
var G__21620 = n13113;
var G__21621 = o13114;
var G__21622 = p13115;
var G__21623 = q13116;
var G__21624 = r13117;
var G__21625 = s13118;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__21607,G__21608,G__21609,G__21610,G__21611,G__21612,G__21613,G__21614,G__21615,G__21616,G__21617,G__21618,G__21619,G__21620,G__21621,G__21622,G__21623,G__21624,G__21625) : f.call(null,G__21607,G__21608,G__21609,G__21610,G__21611,G__21612,G__21613,G__21614,G__21615,G__21616,G__21617,G__21618,G__21619,G__21620,G__21621,G__21622,G__21623,G__21624,G__21625));
}
} else {
var t13119 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a13100,b13101,c13102,d13103,e13104,f13105,g13106,h13107,i13108,j13109,k13110,l13111,m13112,n13113,o13114,p13115,q13116,r13117,s13118,t13119);
} else {
var G__21626 = a13100;
var G__21627 = b13101;
var G__21628 = c13102;
var G__21629 = d13103;
var G__21630 = e13104;
var G__21631 = f13105;
var G__21632 = g13106;
var G__21633 = h13107;
var G__21634 = i13108;
var G__21635 = j13109;
var G__21636 = k13110;
var G__21637 = l13111;
var G__21638 = m13112;
var G__21639 = n13113;
var G__21640 = o13114;
var G__21641 = p13115;
var G__21642 = q13116;
var G__21643 = r13117;
var G__21644 = s13118;
var G__21645 = t13119;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__21626,G__21627,G__21628,G__21629,G__21630,G__21631,G__21632,G__21633,G__21634,G__21635,G__21636,G__21637,G__21638,G__21639,G__21640,G__21641,G__21642,G__21643,G__21644,G__21645) : f.call(null,G__21626,G__21627,G__21628,G__21629,G__21630,G__21631,G__21632,G__21633,G__21634,G__21635,G__21636,G__21637,G__21638,G__21639,G__21640,G__21641,G__21642,G__21643,G__21644,G__21645));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__21646__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__21646 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__21647__i = 0, G__21647__a = new Array(arguments.length -  5);
while (G__21647__i < G__21647__a.length) {G__21647__a[G__21647__i] = arguments[G__21647__i + 5]; ++G__21647__i;}
  args = new cljs.core.IndexedSeq(G__21647__a,0);
} 
return G__21646__delegate.call(this,f,a,b,c,d,args);};
G__21646.cljs$lang$maxFixedArity = 5;
G__21646.cljs$lang$applyTo = (function (arglist__21648){
var f = cljs.core.first(arglist__21648);
arglist__21648 = cljs.core.next(arglist__21648);
var a = cljs.core.first(arglist__21648);
arglist__21648 = cljs.core.next(arglist__21648);
var b = cljs.core.first(arglist__21648);
arglist__21648 = cljs.core.next(arglist__21648);
var c = cljs.core.first(arglist__21648);
arglist__21648 = cljs.core.next(arglist__21648);
var d = cljs.core.first(arglist__21648);
var args = cljs.core.rest(arglist__21648);
return G__21646__delegate(f,a,b,c,d,args);
});
G__21646.cljs$core$IFn$_invoke$arity$variadic = G__21646__delegate;
return G__21646;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__21649 = null;
if (arguments.length > 5) {
var G__21650__i = 0, G__21650__a = new Array(arguments.length -  5);
while (G__21650__i < G__21650__a.length) {G__21650__a[G__21650__i] = arguments[G__21650__i + 5]; ++G__21650__i;}
G__21649 = new cljs.core.IndexedSeq(G__21650__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__21649);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__21666 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21666) : f.call(null,G__21666));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__21667 = cljs.core.meta(obj);
var G__21668 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21667,G__21668) : f.call(null,G__21667,G__21668));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__21669 = cljs.core.meta(obj);
var G__21670 = a;
var G__21671 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21669,G__21670,G__21671) : f.call(null,G__21669,G__21670,G__21671));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__21672 = cljs.core.meta(obj);
var G__21673 = a;
var G__21674 = b;
var G__21675 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21672,G__21673,G__21674,G__21675) : f.call(null,G__21672,G__21673,G__21674,G__21675));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__21676 = cljs.core.meta(obj);
var G__21677 = a;
var G__21678 = b;
var G__21679 = c;
var G__21680 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__21676,G__21677,G__21678,G__21679,G__21680) : f.call(null,G__21676,G__21677,G__21678,G__21679,G__21680));
})());
});
var vary_meta__7 = (function() { 
var G__21681__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__21681 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__21682__i = 0, G__21682__a = new Array(arguments.length -  6);
while (G__21682__i < G__21682__a.length) {G__21682__a[G__21682__i] = arguments[G__21682__i + 6]; ++G__21682__i;}
  args = new cljs.core.IndexedSeq(G__21682__a,0);
} 
return G__21681__delegate.call(this,obj,f,a,b,c,d,args);};
G__21681.cljs$lang$maxFixedArity = 6;
G__21681.cljs$lang$applyTo = (function (arglist__21683){
var obj = cljs.core.first(arglist__21683);
arglist__21683 = cljs.core.next(arglist__21683);
var f = cljs.core.first(arglist__21683);
arglist__21683 = cljs.core.next(arglist__21683);
var a = cljs.core.first(arglist__21683);
arglist__21683 = cljs.core.next(arglist__21683);
var b = cljs.core.first(arglist__21683);
arglist__21683 = cljs.core.next(arglist__21683);
var c = cljs.core.first(arglist__21683);
arglist__21683 = cljs.core.next(arglist__21683);
var d = cljs.core.first(arglist__21683);
var args = cljs.core.rest(arglist__21683);
return G__21681__delegate(obj,f,a,b,c,d,args);
});
G__21681.cljs$core$IFn$_invoke$arity$variadic = G__21681__delegate;
return G__21681;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__21684 = null;
if (arguments.length > 6) {
var G__21685__i = 0, G__21685__a = new Array(arguments.length -  6);
while (G__21685__i < G__21685__a.length) {G__21685__a[G__21685__i] = arguments[G__21685__i + 6]; ++G__21685__i;}
G__21684 = new cljs.core.IndexedSeq(G__21685__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__21684);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__21686__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__21686 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21687__i = 0, G__21687__a = new Array(arguments.length -  2);
while (G__21687__i < G__21687__a.length) {G__21687__a[G__21687__i] = arguments[G__21687__i + 2]; ++G__21687__i;}
  more = new cljs.core.IndexedSeq(G__21687__a,0);
} 
return G__21686__delegate.call(this,x,y,more);};
G__21686.cljs$lang$maxFixedArity = 2;
G__21686.cljs$lang$applyTo = (function (arglist__21688){
var x = cljs.core.first(arglist__21688);
arglist__21688 = cljs.core.next(arglist__21688);
var y = cljs.core.first(arglist__21688);
var more = cljs.core.rest(arglist__21688);
return G__21686__delegate(x,y,more);
});
G__21686.cljs$core$IFn$_invoke$arity$variadic = G__21686__delegate;
return G__21686;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__21689 = null;
if (arguments.length > 2) {
var G__21690__i = 0, G__21690__a = new Array(arguments.length -  2);
while (G__21690__i < G__21690__a.length) {G__21690__a[G__21690__i] = arguments[G__21690__i + 2]; ++G__21690__i;}
G__21689 = new cljs.core.IndexedSeq(G__21690__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21689);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t21694 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t21694 = (function (nil_iter,meta21695){
this.nil_iter = nil_iter;
this.meta21695 = meta21695;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t21694.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t21694.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t21694.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t21694.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_21696){
var self__ = this;
var _21696__$1 = this;
return self__.meta21695;
});

cljs.core.t21694.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_21696,meta21695__$1){
var self__ = this;
var _21696__$1 = this;
return (new cljs.core.t21694(self__.nil_iter,meta21695__$1));
});

cljs.core.t21694.cljs$lang$type = true;

cljs.core.t21694.cljs$lang$ctorStr = "cljs.core/t21694";

cljs.core.t21694.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/t21694");
});

cljs.core.__GT_t21694 = (function __GT_t21694(nil_iter__$1,meta21695){
return (new cljs.core.t21694(nil_iter__$1,meta21695));
});

}

return (new cljs.core.t21694(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__12157__auto__ = !((lt.stepper == null));
if(and__12157__auto__){
return self__.iter.hasNext();
} else {
return and__12157__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__21697 = lt;
var G__21698 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__21697,G__21698) : self__.xform.call(null,G__21697,G__21698));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__21699 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__21699) : self__.xform.call(null,G__21699));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__21701 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__21701) : xform.call(null,G__21701));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__21703 = cljs.core.next(iters__$1);
iters__$1 = G__21703;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__13056__auto___21704 = self__.iters.length;
var i_21705 = (0);
while(true){
if((i_21705 < n__13056__auto___21704)){
(self__.nexts[i_21705] = (self__.iters[i_21705]).next());

var G__21706 = (i_21705 + (1));
i_21705 = G__21706;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__12157__auto__ = !((lt.stepper == null));
if(and__12157__auto__){
return this$.hasNext();
} else {
return and__12157__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__21702 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__21702) : self__.xform.call(null,G__21702));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__21711 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__21711) : xform.call(null,G__21711));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__21712_21716 = cljs.core.seq(colls);
var chunk__21713_21717 = null;
var count__21714_21718 = (0);
var i__21715_21719 = (0);
while(true){
if((i__21715_21719 < count__21714_21718)){
var coll_21720 = chunk__21713_21717.cljs$core$IIndexed$_nth$arity$2(null,i__21715_21719);
iters.push(cljs.core.iter(coll_21720));

var G__21721 = seq__21712_21716;
var G__21722 = chunk__21713_21717;
var G__21723 = count__21714_21718;
var G__21724 = (i__21715_21719 + (1));
seq__21712_21716 = G__21721;
chunk__21713_21717 = G__21722;
count__21714_21718 = G__21723;
i__21715_21719 = G__21724;
continue;
} else {
var temp__4126__auto___21725 = cljs.core.seq(seq__21712_21716);
if(temp__4126__auto___21725){
var seq__21712_21726__$1 = temp__4126__auto___21725;
if(cljs.core.chunked_seq_QMARK_(seq__21712_21726__$1)){
var c__12956__auto___21727 = cljs.core.chunk_first(seq__21712_21726__$1);
var G__21728 = cljs.core.chunk_rest(seq__21712_21726__$1);
var G__21729 = c__12956__auto___21727;
var G__21730 = cljs.core.count(c__12956__auto___21727);
var G__21731 = (0);
seq__21712_21716 = G__21728;
chunk__21713_21717 = G__21729;
count__21714_21718 = G__21730;
i__21715_21719 = G__21731;
continue;
} else {
var coll_21732 = cljs.core.first(seq__21712_21726__$1);
iters.push(cljs.core.iter(coll_21732));

var G__21733 = cljs.core.next(seq__21712_21726__$1);
var G__21734 = null;
var G__21735 = (0);
var G__21736 = (0);
seq__21712_21716 = G__21733;
chunk__21713_21717 = G__21734;
count__21714_21718 = G__21735;
i__21715_21719 = G__21736;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__12169__auto__ = cljs.core.seq(coll);
if(or__12169__auto__){
return or__12169__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__21737__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__21737 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__21738__i = 0, G__21738__a = new Array(arguments.length -  2);
while (G__21738__i < G__21738__a.length) {G__21738__a[G__21738__i] = arguments[G__21738__i + 2]; ++G__21738__i;}
  colls = new cljs.core.IndexedSeq(G__21738__a,0);
} 
return G__21737__delegate.call(this,xform,coll,colls);};
G__21737.cljs$lang$maxFixedArity = 2;
G__21737.cljs$lang$applyTo = (function (arglist__21739){
var xform = cljs.core.first(arglist__21739);
arglist__21739 = cljs.core.next(arglist__21739);
var coll = cljs.core.first(arglist__21739);
var colls = cljs.core.rest(arglist__21739);
return G__21737__delegate(xform,coll,colls);
});
G__21737.cljs$core$IFn$_invoke$arity$variadic = G__21737__delegate;
return G__21737;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__21740 = null;
if (arguments.length > 2) {
var G__21741__i = 0, G__21741__a = new Array(arguments.length -  2);
while (G__21741__i < G__21741__a.length) {G__21741__a[G__21741__i] = arguments[G__21741__i + 2]; ++G__21741__i;}
G__21740 = new cljs.core.IndexedSeq(G__21741__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__21740);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__21743 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21743) : pred.call(null,G__21743));
})())){
var G__21744 = pred;
var G__21745 = cljs.core.next(coll);
pred = G__21744;
coll = G__21745;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__12169__auto__ = (function (){var G__21749 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21749) : pred.call(null,G__21749));
})();
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
var G__21750 = pred;
var G__21751 = cljs.core.next(coll);
pred = G__21750;
coll = G__21751;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__21758 = null;
var G__21758__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__21758__1 = (function (x){
return cljs.core.not((function (){var G__21755 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21755) : f.call(null,G__21755));
})());
});
var G__21758__2 = (function (x,y){
return cljs.core.not((function (){var G__21756 = x;
var G__21757 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21756,G__21757) : f.call(null,G__21756,G__21757));
})());
});
var G__21758__3 = (function() { 
var G__21759__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__21759 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__21760__i = 0, G__21760__a = new Array(arguments.length -  2);
while (G__21760__i < G__21760__a.length) {G__21760__a[G__21760__i] = arguments[G__21760__i + 2]; ++G__21760__i;}
  zs = new cljs.core.IndexedSeq(G__21760__a,0);
} 
return G__21759__delegate.call(this,x,y,zs);};
G__21759.cljs$lang$maxFixedArity = 2;
G__21759.cljs$lang$applyTo = (function (arglist__21761){
var x = cljs.core.first(arglist__21761);
arglist__21761 = cljs.core.next(arglist__21761);
var y = cljs.core.first(arglist__21761);
var zs = cljs.core.rest(arglist__21761);
return G__21759__delegate(x,y,zs);
});
G__21759.cljs$core$IFn$_invoke$arity$variadic = G__21759__delegate;
return G__21759;
})()
;
G__21758 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__21758__0.call(this);
case 1:
return G__21758__1.call(this,x);
case 2:
return G__21758__2.call(this,x,y);
default:
var G__21762 = null;
if (arguments.length > 2) {
var G__21763__i = 0, G__21763__a = new Array(arguments.length -  2);
while (G__21763__i < G__21763__a.length) {G__21763__a[G__21763__i] = arguments[G__21763__i + 2]; ++G__21763__i;}
G__21762 = new cljs.core.IndexedSeq(G__21763__a,0);
}
return G__21758__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21762);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21758.cljs$lang$maxFixedArity = 2;
G__21758.cljs$lang$applyTo = G__21758__3.cljs$lang$applyTo;
G__21758.cljs$core$IFn$_invoke$arity$0 = G__21758__0;
G__21758.cljs$core$IFn$_invoke$arity$1 = G__21758__1;
G__21758.cljs$core$IFn$_invoke$arity$2 = G__21758__2;
G__21758.cljs$core$IFn$_invoke$arity$variadic = G__21758__3.cljs$core$IFn$_invoke$arity$variadic;
return G__21758;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__21764__delegate = function (args){
return x;
};
var G__21764 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__21765__i = 0, G__21765__a = new Array(arguments.length -  0);
while (G__21765__i < G__21765__a.length) {G__21765__a[G__21765__i] = arguments[G__21765__i + 0]; ++G__21765__i;}
  args = new cljs.core.IndexedSeq(G__21765__a,0);
} 
return G__21764__delegate.call(this,args);};
G__21764.cljs$lang$maxFixedArity = 0;
G__21764.cljs$lang$applyTo = (function (arglist__21766){
var args = cljs.core.seq(arglist__21766);
return G__21764__delegate(args);
});
G__21764.cljs$core$IFn$_invoke$arity$variadic = G__21764__delegate;
return G__21764;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__21821 = null;
var G__21821__0 = (function (){
var G__21794 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21794) : f.call(null,G__21794));
});
var G__21821__1 = (function (x){
var G__21795 = (function (){var G__21796 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__21796) : g.call(null,G__21796));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21795) : f.call(null,G__21795));
});
var G__21821__2 = (function (x,y){
var G__21797 = (function (){var G__21798 = x;
var G__21799 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__21798,G__21799) : g.call(null,G__21798,G__21799));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21797) : f.call(null,G__21797));
});
var G__21821__3 = (function (x,y,z){
var G__21800 = (function (){var G__21801 = x;
var G__21802 = y;
var G__21803 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__21801,G__21802,G__21803) : g.call(null,G__21801,G__21802,G__21803));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21800) : f.call(null,G__21800));
});
var G__21821__4 = (function() { 
var G__21822__delegate = function (x,y,z,args){
var G__21804 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21804) : f.call(null,G__21804));
};
var G__21822 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21823__i = 0, G__21823__a = new Array(arguments.length -  3);
while (G__21823__i < G__21823__a.length) {G__21823__a[G__21823__i] = arguments[G__21823__i + 3]; ++G__21823__i;}
  args = new cljs.core.IndexedSeq(G__21823__a,0);
} 
return G__21822__delegate.call(this,x,y,z,args);};
G__21822.cljs$lang$maxFixedArity = 3;
G__21822.cljs$lang$applyTo = (function (arglist__21824){
var x = cljs.core.first(arglist__21824);
arglist__21824 = cljs.core.next(arglist__21824);
var y = cljs.core.first(arglist__21824);
arglist__21824 = cljs.core.next(arglist__21824);
var z = cljs.core.first(arglist__21824);
var args = cljs.core.rest(arglist__21824);
return G__21822__delegate(x,y,z,args);
});
G__21822.cljs$core$IFn$_invoke$arity$variadic = G__21822__delegate;
return G__21822;
})()
;
G__21821 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__21821__0.call(this);
case 1:
return G__21821__1.call(this,x);
case 2:
return G__21821__2.call(this,x,y);
case 3:
return G__21821__3.call(this,x,y,z);
default:
var G__21825 = null;
if (arguments.length > 3) {
var G__21826__i = 0, G__21826__a = new Array(arguments.length -  3);
while (G__21826__i < G__21826__a.length) {G__21826__a[G__21826__i] = arguments[G__21826__i + 3]; ++G__21826__i;}
G__21825 = new cljs.core.IndexedSeq(G__21826__a,0);
}
return G__21821__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21825);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21821.cljs$lang$maxFixedArity = 3;
G__21821.cljs$lang$applyTo = G__21821__4.cljs$lang$applyTo;
G__21821.cljs$core$IFn$_invoke$arity$0 = G__21821__0;
G__21821.cljs$core$IFn$_invoke$arity$1 = G__21821__1;
G__21821.cljs$core$IFn$_invoke$arity$2 = G__21821__2;
G__21821.cljs$core$IFn$_invoke$arity$3 = G__21821__3;
G__21821.cljs$core$IFn$_invoke$arity$variadic = G__21821__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21821;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__21827 = null;
var G__21827__0 = (function (){
var G__21805 = (function (){var G__21806 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__21806) : g.call(null,G__21806));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21805) : f.call(null,G__21805));
});
var G__21827__1 = (function (x){
var G__21807 = (function (){var G__21808 = (function (){var G__21809 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__21809) : h.call(null,G__21809));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__21808) : g.call(null,G__21808));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21807) : f.call(null,G__21807));
});
var G__21827__2 = (function (x,y){
var G__21810 = (function (){var G__21811 = (function (){var G__21812 = x;
var G__21813 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__21812,G__21813) : h.call(null,G__21812,G__21813));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__21811) : g.call(null,G__21811));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21810) : f.call(null,G__21810));
});
var G__21827__3 = (function (x,y,z){
var G__21814 = (function (){var G__21815 = (function (){var G__21816 = x;
var G__21817 = y;
var G__21818 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__21816,G__21817,G__21818) : h.call(null,G__21816,G__21817,G__21818));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__21815) : g.call(null,G__21815));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21814) : f.call(null,G__21814));
});
var G__21827__4 = (function() { 
var G__21828__delegate = function (x,y,z,args){
var G__21819 = (function (){var G__21820 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__21820) : g.call(null,G__21820));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21819) : f.call(null,G__21819));
};
var G__21828 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21829__i = 0, G__21829__a = new Array(arguments.length -  3);
while (G__21829__i < G__21829__a.length) {G__21829__a[G__21829__i] = arguments[G__21829__i + 3]; ++G__21829__i;}
  args = new cljs.core.IndexedSeq(G__21829__a,0);
} 
return G__21828__delegate.call(this,x,y,z,args);};
G__21828.cljs$lang$maxFixedArity = 3;
G__21828.cljs$lang$applyTo = (function (arglist__21830){
var x = cljs.core.first(arglist__21830);
arglist__21830 = cljs.core.next(arglist__21830);
var y = cljs.core.first(arglist__21830);
arglist__21830 = cljs.core.next(arglist__21830);
var z = cljs.core.first(arglist__21830);
var args = cljs.core.rest(arglist__21830);
return G__21828__delegate(x,y,z,args);
});
G__21828.cljs$core$IFn$_invoke$arity$variadic = G__21828__delegate;
return G__21828;
})()
;
G__21827 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__21827__0.call(this);
case 1:
return G__21827__1.call(this,x);
case 2:
return G__21827__2.call(this,x,y);
case 3:
return G__21827__3.call(this,x,y,z);
default:
var G__21831 = null;
if (arguments.length > 3) {
var G__21832__i = 0, G__21832__a = new Array(arguments.length -  3);
while (G__21832__i < G__21832__a.length) {G__21832__a[G__21832__i] = arguments[G__21832__i + 3]; ++G__21832__i;}
G__21831 = new cljs.core.IndexedSeq(G__21832__a,0);
}
return G__21827__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21831);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21827.cljs$lang$maxFixedArity = 3;
G__21827.cljs$lang$applyTo = G__21827__4.cljs$lang$applyTo;
G__21827.cljs$core$IFn$_invoke$arity$0 = G__21827__0;
G__21827.cljs$core$IFn$_invoke$arity$1 = G__21827__1;
G__21827.cljs$core$IFn$_invoke$arity$2 = G__21827__2;
G__21827.cljs$core$IFn$_invoke$arity$3 = G__21827__3;
G__21827.cljs$core$IFn$_invoke$arity$variadic = G__21827__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21827;
})()
});
var comp__4 = (function() { 
var G__21833__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__21834__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__21835 = cljs.core.first(fs__$2).call(null,ret);
var G__21836 = cljs.core.next(fs__$2);
ret = G__21835;
fs__$2 = G__21836;
continue;
} else {
return ret;
}
break;
}
};
var G__21834 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__21837__i = 0, G__21837__a = new Array(arguments.length -  0);
while (G__21837__i < G__21837__a.length) {G__21837__a[G__21837__i] = arguments[G__21837__i + 0]; ++G__21837__i;}
  args = new cljs.core.IndexedSeq(G__21837__a,0);
} 
return G__21834__delegate.call(this,args);};
G__21834.cljs$lang$maxFixedArity = 0;
G__21834.cljs$lang$applyTo = (function (arglist__21838){
var args = cljs.core.seq(arglist__21838);
return G__21834__delegate(args);
});
G__21834.cljs$core$IFn$_invoke$arity$variadic = G__21834__delegate;
return G__21834;
})()
;
;})(fs__$1))
};
var G__21833 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__21839__i = 0, G__21839__a = new Array(arguments.length -  3);
while (G__21839__i < G__21839__a.length) {G__21839__a[G__21839__i] = arguments[G__21839__i + 3]; ++G__21839__i;}
  fs = new cljs.core.IndexedSeq(G__21839__a,0);
} 
return G__21833__delegate.call(this,f1,f2,f3,fs);};
G__21833.cljs$lang$maxFixedArity = 3;
G__21833.cljs$lang$applyTo = (function (arglist__21840){
var f1 = cljs.core.first(arglist__21840);
arglist__21840 = cljs.core.next(arglist__21840);
var f2 = cljs.core.first(arglist__21840);
arglist__21840 = cljs.core.next(arglist__21840);
var f3 = cljs.core.first(arglist__21840);
var fs = cljs.core.rest(arglist__21840);
return G__21833__delegate(f1,f2,f3,fs);
});
G__21833.cljs$core$IFn$_invoke$arity$variadic = G__21833__delegate;
return G__21833;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__21841 = null;
if (arguments.length > 3) {
var G__21842__i = 0, G__21842__a = new Array(arguments.length -  3);
while (G__21842__i < G__21842__a.length) {G__21842__a[G__21842__i] = arguments[G__21842__i + 3]; ++G__21842__i;}
G__21841 = new cljs.core.IndexedSeq(G__21842__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__21841);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__21927 = null;
var G__21927__0 = (function (){
var G__21885 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21885) : f.call(null,G__21885));
});
var G__21927__1 = (function (x){
var G__21886 = arg1;
var G__21887 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21886,G__21887) : f.call(null,G__21886,G__21887));
});
var G__21927__2 = (function (x,y){
var G__21888 = arg1;
var G__21889 = x;
var G__21890 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21888,G__21889,G__21890) : f.call(null,G__21888,G__21889,G__21890));
});
var G__21927__3 = (function (x,y,z){
var G__21891 = arg1;
var G__21892 = x;
var G__21893 = y;
var G__21894 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21891,G__21892,G__21893,G__21894) : f.call(null,G__21891,G__21892,G__21893,G__21894));
});
var G__21927__4 = (function() { 
var G__21928__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__21928 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21929__i = 0, G__21929__a = new Array(arguments.length -  3);
while (G__21929__i < G__21929__a.length) {G__21929__a[G__21929__i] = arguments[G__21929__i + 3]; ++G__21929__i;}
  args = new cljs.core.IndexedSeq(G__21929__a,0);
} 
return G__21928__delegate.call(this,x,y,z,args);};
G__21928.cljs$lang$maxFixedArity = 3;
G__21928.cljs$lang$applyTo = (function (arglist__21930){
var x = cljs.core.first(arglist__21930);
arglist__21930 = cljs.core.next(arglist__21930);
var y = cljs.core.first(arglist__21930);
arglist__21930 = cljs.core.next(arglist__21930);
var z = cljs.core.first(arglist__21930);
var args = cljs.core.rest(arglist__21930);
return G__21928__delegate(x,y,z,args);
});
G__21928.cljs$core$IFn$_invoke$arity$variadic = G__21928__delegate;
return G__21928;
})()
;
G__21927 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__21927__0.call(this);
case 1:
return G__21927__1.call(this,x);
case 2:
return G__21927__2.call(this,x,y);
case 3:
return G__21927__3.call(this,x,y,z);
default:
var G__21931 = null;
if (arguments.length > 3) {
var G__21932__i = 0, G__21932__a = new Array(arguments.length -  3);
while (G__21932__i < G__21932__a.length) {G__21932__a[G__21932__i] = arguments[G__21932__i + 3]; ++G__21932__i;}
G__21931 = new cljs.core.IndexedSeq(G__21932__a,0);
}
return G__21927__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21931);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21927.cljs$lang$maxFixedArity = 3;
G__21927.cljs$lang$applyTo = G__21927__4.cljs$lang$applyTo;
G__21927.cljs$core$IFn$_invoke$arity$0 = G__21927__0;
G__21927.cljs$core$IFn$_invoke$arity$1 = G__21927__1;
G__21927.cljs$core$IFn$_invoke$arity$2 = G__21927__2;
G__21927.cljs$core$IFn$_invoke$arity$3 = G__21927__3;
G__21927.cljs$core$IFn$_invoke$arity$variadic = G__21927__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21927;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__21933 = null;
var G__21933__0 = (function (){
var G__21895 = arg1;
var G__21896 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21895,G__21896) : f.call(null,G__21895,G__21896));
});
var G__21933__1 = (function (x){
var G__21897 = arg1;
var G__21898 = arg2;
var G__21899 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21897,G__21898,G__21899) : f.call(null,G__21897,G__21898,G__21899));
});
var G__21933__2 = (function (x,y){
var G__21900 = arg1;
var G__21901 = arg2;
var G__21902 = x;
var G__21903 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21900,G__21901,G__21902,G__21903) : f.call(null,G__21900,G__21901,G__21902,G__21903));
});
var G__21933__3 = (function (x,y,z){
var G__21904 = arg1;
var G__21905 = arg2;
var G__21906 = x;
var G__21907 = y;
var G__21908 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__21904,G__21905,G__21906,G__21907,G__21908) : f.call(null,G__21904,G__21905,G__21906,G__21907,G__21908));
});
var G__21933__4 = (function() { 
var G__21934__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__21934 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21935__i = 0, G__21935__a = new Array(arguments.length -  3);
while (G__21935__i < G__21935__a.length) {G__21935__a[G__21935__i] = arguments[G__21935__i + 3]; ++G__21935__i;}
  args = new cljs.core.IndexedSeq(G__21935__a,0);
} 
return G__21934__delegate.call(this,x,y,z,args);};
G__21934.cljs$lang$maxFixedArity = 3;
G__21934.cljs$lang$applyTo = (function (arglist__21936){
var x = cljs.core.first(arglist__21936);
arglist__21936 = cljs.core.next(arglist__21936);
var y = cljs.core.first(arglist__21936);
arglist__21936 = cljs.core.next(arglist__21936);
var z = cljs.core.first(arglist__21936);
var args = cljs.core.rest(arglist__21936);
return G__21934__delegate(x,y,z,args);
});
G__21934.cljs$core$IFn$_invoke$arity$variadic = G__21934__delegate;
return G__21934;
})()
;
G__21933 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__21933__0.call(this);
case 1:
return G__21933__1.call(this,x);
case 2:
return G__21933__2.call(this,x,y);
case 3:
return G__21933__3.call(this,x,y,z);
default:
var G__21937 = null;
if (arguments.length > 3) {
var G__21938__i = 0, G__21938__a = new Array(arguments.length -  3);
while (G__21938__i < G__21938__a.length) {G__21938__a[G__21938__i] = arguments[G__21938__i + 3]; ++G__21938__i;}
G__21937 = new cljs.core.IndexedSeq(G__21938__a,0);
}
return G__21933__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21937);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21933.cljs$lang$maxFixedArity = 3;
G__21933.cljs$lang$applyTo = G__21933__4.cljs$lang$applyTo;
G__21933.cljs$core$IFn$_invoke$arity$0 = G__21933__0;
G__21933.cljs$core$IFn$_invoke$arity$1 = G__21933__1;
G__21933.cljs$core$IFn$_invoke$arity$2 = G__21933__2;
G__21933.cljs$core$IFn$_invoke$arity$3 = G__21933__3;
G__21933.cljs$core$IFn$_invoke$arity$variadic = G__21933__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21933;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__21939 = null;
var G__21939__0 = (function (){
var G__21909 = arg1;
var G__21910 = arg2;
var G__21911 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21909,G__21910,G__21911) : f.call(null,G__21909,G__21910,G__21911));
});
var G__21939__1 = (function (x){
var G__21912 = arg1;
var G__21913 = arg2;
var G__21914 = arg3;
var G__21915 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21912,G__21913,G__21914,G__21915) : f.call(null,G__21912,G__21913,G__21914,G__21915));
});
var G__21939__2 = (function (x,y){
var G__21916 = arg1;
var G__21917 = arg2;
var G__21918 = arg3;
var G__21919 = x;
var G__21920 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__21916,G__21917,G__21918,G__21919,G__21920) : f.call(null,G__21916,G__21917,G__21918,G__21919,G__21920));
});
var G__21939__3 = (function (x,y,z){
var G__21921 = arg1;
var G__21922 = arg2;
var G__21923 = arg3;
var G__21924 = x;
var G__21925 = y;
var G__21926 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__21921,G__21922,G__21923,G__21924,G__21925,G__21926) : f.call(null,G__21921,G__21922,G__21923,G__21924,G__21925,G__21926));
});
var G__21939__4 = (function() { 
var G__21940__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__21940 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21941__i = 0, G__21941__a = new Array(arguments.length -  3);
while (G__21941__i < G__21941__a.length) {G__21941__a[G__21941__i] = arguments[G__21941__i + 3]; ++G__21941__i;}
  args = new cljs.core.IndexedSeq(G__21941__a,0);
} 
return G__21940__delegate.call(this,x,y,z,args);};
G__21940.cljs$lang$maxFixedArity = 3;
G__21940.cljs$lang$applyTo = (function (arglist__21942){
var x = cljs.core.first(arglist__21942);
arglist__21942 = cljs.core.next(arglist__21942);
var y = cljs.core.first(arglist__21942);
arglist__21942 = cljs.core.next(arglist__21942);
var z = cljs.core.first(arglist__21942);
var args = cljs.core.rest(arglist__21942);
return G__21940__delegate(x,y,z,args);
});
G__21940.cljs$core$IFn$_invoke$arity$variadic = G__21940__delegate;
return G__21940;
})()
;
G__21939 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__21939__0.call(this);
case 1:
return G__21939__1.call(this,x);
case 2:
return G__21939__2.call(this,x,y);
case 3:
return G__21939__3.call(this,x,y,z);
default:
var G__21943 = null;
if (arguments.length > 3) {
var G__21944__i = 0, G__21944__a = new Array(arguments.length -  3);
while (G__21944__i < G__21944__a.length) {G__21944__a[G__21944__i] = arguments[G__21944__i + 3]; ++G__21944__i;}
G__21943 = new cljs.core.IndexedSeq(G__21944__a,0);
}
return G__21939__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21943);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21939.cljs$lang$maxFixedArity = 3;
G__21939.cljs$lang$applyTo = G__21939__4.cljs$lang$applyTo;
G__21939.cljs$core$IFn$_invoke$arity$0 = G__21939__0;
G__21939.cljs$core$IFn$_invoke$arity$1 = G__21939__1;
G__21939.cljs$core$IFn$_invoke$arity$2 = G__21939__2;
G__21939.cljs$core$IFn$_invoke$arity$3 = G__21939__3;
G__21939.cljs$core$IFn$_invoke$arity$variadic = G__21939__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21939;
})()
});
var partial__5 = (function() { 
var G__21945__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__21946__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__21946 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__21947__i = 0, G__21947__a = new Array(arguments.length -  0);
while (G__21947__i < G__21947__a.length) {G__21947__a[G__21947__i] = arguments[G__21947__i + 0]; ++G__21947__i;}
  args = new cljs.core.IndexedSeq(G__21947__a,0);
} 
return G__21946__delegate.call(this,args);};
G__21946.cljs$lang$maxFixedArity = 0;
G__21946.cljs$lang$applyTo = (function (arglist__21948){
var args = cljs.core.seq(arglist__21948);
return G__21946__delegate(args);
});
G__21946.cljs$core$IFn$_invoke$arity$variadic = G__21946__delegate;
return G__21946;
})()
;
};
var G__21945 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__21949__i = 0, G__21949__a = new Array(arguments.length -  4);
while (G__21949__i < G__21949__a.length) {G__21949__a[G__21949__i] = arguments[G__21949__i + 4]; ++G__21949__i;}
  more = new cljs.core.IndexedSeq(G__21949__a,0);
} 
return G__21945__delegate.call(this,f,arg1,arg2,arg3,more);};
G__21945.cljs$lang$maxFixedArity = 4;
G__21945.cljs$lang$applyTo = (function (arglist__21950){
var f = cljs.core.first(arglist__21950);
arglist__21950 = cljs.core.next(arglist__21950);
var arg1 = cljs.core.first(arglist__21950);
arglist__21950 = cljs.core.next(arglist__21950);
var arg2 = cljs.core.first(arglist__21950);
arglist__21950 = cljs.core.next(arglist__21950);
var arg3 = cljs.core.first(arglist__21950);
var more = cljs.core.rest(arglist__21950);
return G__21945__delegate(f,arg1,arg2,arg3,more);
});
G__21945.cljs$core$IFn$_invoke$arity$variadic = G__21945__delegate;
return G__21945;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__21951 = null;
if (arguments.length > 4) {
var G__21952__i = 0, G__21952__a = new Array(arguments.length -  4);
while (G__21952__i < G__21952__a.length) {G__21952__a[G__21952__i] = arguments[G__21952__i + 4]; ++G__21952__i;}
G__21951 = new cljs.core.IndexedSeq(G__21952__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__21951);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__21985 = null;
var G__21985__1 = (function (a){
var G__21969 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21969) : f.call(null,G__21969));
});
var G__21985__2 = (function (a,b){
var G__21970 = (((a == null))?x:a);
var G__21971 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21970,G__21971) : f.call(null,G__21970,G__21971));
});
var G__21985__3 = (function (a,b,c){
var G__21972 = (((a == null))?x:a);
var G__21973 = b;
var G__21974 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21972,G__21973,G__21974) : f.call(null,G__21972,G__21973,G__21974));
});
var G__21985__4 = (function() { 
var G__21986__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__21986 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__21987__i = 0, G__21987__a = new Array(arguments.length -  3);
while (G__21987__i < G__21987__a.length) {G__21987__a[G__21987__i] = arguments[G__21987__i + 3]; ++G__21987__i;}
  ds = new cljs.core.IndexedSeq(G__21987__a,0);
} 
return G__21986__delegate.call(this,a,b,c,ds);};
G__21986.cljs$lang$maxFixedArity = 3;
G__21986.cljs$lang$applyTo = (function (arglist__21988){
var a = cljs.core.first(arglist__21988);
arglist__21988 = cljs.core.next(arglist__21988);
var b = cljs.core.first(arglist__21988);
arglist__21988 = cljs.core.next(arglist__21988);
var c = cljs.core.first(arglist__21988);
var ds = cljs.core.rest(arglist__21988);
return G__21986__delegate(a,b,c,ds);
});
G__21986.cljs$core$IFn$_invoke$arity$variadic = G__21986__delegate;
return G__21986;
})()
;
G__21985 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__21985__1.call(this,a);
case 2:
return G__21985__2.call(this,a,b);
case 3:
return G__21985__3.call(this,a,b,c);
default:
var G__21989 = null;
if (arguments.length > 3) {
var G__21990__i = 0, G__21990__a = new Array(arguments.length -  3);
while (G__21990__i < G__21990__a.length) {G__21990__a[G__21990__i] = arguments[G__21990__i + 3]; ++G__21990__i;}
G__21989 = new cljs.core.IndexedSeq(G__21990__a,0);
}
return G__21985__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__21989);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21985.cljs$lang$maxFixedArity = 3;
G__21985.cljs$lang$applyTo = G__21985__4.cljs$lang$applyTo;
G__21985.cljs$core$IFn$_invoke$arity$1 = G__21985__1;
G__21985.cljs$core$IFn$_invoke$arity$2 = G__21985__2;
G__21985.cljs$core$IFn$_invoke$arity$3 = G__21985__3;
G__21985.cljs$core$IFn$_invoke$arity$variadic = G__21985__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21985;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__21991 = null;
var G__21991__2 = (function (a,b){
var G__21975 = (((a == null))?x:a);
var G__21976 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21975,G__21976) : f.call(null,G__21975,G__21976));
});
var G__21991__3 = (function (a,b,c){
var G__21977 = (((a == null))?x:a);
var G__21978 = (((b == null))?y:b);
var G__21979 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21977,G__21978,G__21979) : f.call(null,G__21977,G__21978,G__21979));
});
var G__21991__4 = (function() { 
var G__21992__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__21992 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__21993__i = 0, G__21993__a = new Array(arguments.length -  3);
while (G__21993__i < G__21993__a.length) {G__21993__a[G__21993__i] = arguments[G__21993__i + 3]; ++G__21993__i;}
  ds = new cljs.core.IndexedSeq(G__21993__a,0);
} 
return G__21992__delegate.call(this,a,b,c,ds);};
G__21992.cljs$lang$maxFixedArity = 3;
G__21992.cljs$lang$applyTo = (function (arglist__21994){
var a = cljs.core.first(arglist__21994);
arglist__21994 = cljs.core.next(arglist__21994);
var b = cljs.core.first(arglist__21994);
arglist__21994 = cljs.core.next(arglist__21994);
var c = cljs.core.first(arglist__21994);
var ds = cljs.core.rest(arglist__21994);
return G__21992__delegate(a,b,c,ds);
});
G__21992.cljs$core$IFn$_invoke$arity$variadic = G__21992__delegate;
return G__21992;
})()
;
G__21991 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__21991__2.call(this,a,b);
case 3:
return G__21991__3.call(this,a,b,c);
default:
var G__21995 = null;
if (arguments.length > 3) {
var G__21996__i = 0, G__21996__a = new Array(arguments.length -  3);
while (G__21996__i < G__21996__a.length) {G__21996__a[G__21996__i] = arguments[G__21996__i + 3]; ++G__21996__i;}
G__21995 = new cljs.core.IndexedSeq(G__21996__a,0);
}
return G__21991__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__21995);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21991.cljs$lang$maxFixedArity = 3;
G__21991.cljs$lang$applyTo = G__21991__4.cljs$lang$applyTo;
G__21991.cljs$core$IFn$_invoke$arity$2 = G__21991__2;
G__21991.cljs$core$IFn$_invoke$arity$3 = G__21991__3;
G__21991.cljs$core$IFn$_invoke$arity$variadic = G__21991__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21991;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__21997 = null;
var G__21997__2 = (function (a,b){
var G__21980 = (((a == null))?x:a);
var G__21981 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21980,G__21981) : f.call(null,G__21980,G__21981));
});
var G__21997__3 = (function (a,b,c){
var G__21982 = (((a == null))?x:a);
var G__21983 = (((b == null))?y:b);
var G__21984 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21982,G__21983,G__21984) : f.call(null,G__21982,G__21983,G__21984));
});
var G__21997__4 = (function() { 
var G__21998__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__21998 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__21999__i = 0, G__21999__a = new Array(arguments.length -  3);
while (G__21999__i < G__21999__a.length) {G__21999__a[G__21999__i] = arguments[G__21999__i + 3]; ++G__21999__i;}
  ds = new cljs.core.IndexedSeq(G__21999__a,0);
} 
return G__21998__delegate.call(this,a,b,c,ds);};
G__21998.cljs$lang$maxFixedArity = 3;
G__21998.cljs$lang$applyTo = (function (arglist__22000){
var a = cljs.core.first(arglist__22000);
arglist__22000 = cljs.core.next(arglist__22000);
var b = cljs.core.first(arglist__22000);
arglist__22000 = cljs.core.next(arglist__22000);
var c = cljs.core.first(arglist__22000);
var ds = cljs.core.rest(arglist__22000);
return G__21998__delegate(a,b,c,ds);
});
G__21998.cljs$core$IFn$_invoke$arity$variadic = G__21998__delegate;
return G__21998;
})()
;
G__21997 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__21997__2.call(this,a,b);
case 3:
return G__21997__3.call(this,a,b,c);
default:
var G__22001 = null;
if (arguments.length > 3) {
var G__22002__i = 0, G__22002__a = new Array(arguments.length -  3);
while (G__22002__i < G__22002__a.length) {G__22002__a[G__22002__i] = arguments[G__22002__i + 3]; ++G__22002__i;}
G__22001 = new cljs.core.IndexedSeq(G__22002__a,0);
}
return G__21997__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__22001);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21997.cljs$lang$maxFixedArity = 3;
G__21997.cljs$lang$applyTo = G__21997__4.cljs$lang$applyTo;
G__21997.cljs$core$IFn$_invoke$arity$2 = G__21997__2;
G__21997.cljs$core$IFn$_invoke$arity$3 = G__21997__3;
G__21997.cljs$core$IFn$_invoke$arity$variadic = G__21997__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21997;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__22033 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__22033) : cljs.core.volatile_BANG_.call(null,G__22033));
})();
return ((function (i){
return (function() {
var G__22063 = null;
var G__22063__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22063__1 = (function (result){
var G__22034 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22034) : rf.call(null,G__22034));
});
var G__22063__2 = (function (result,input){
var G__22035 = result;
var G__22036 = (function (){var G__22037 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__22038 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22037,G__22038) : f.call(null,G__22037,G__22038));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22035,G__22036) : rf.call(null,G__22035,G__22036));
});
G__22063 = function(result,input){
switch(arguments.length){
case 0:
return G__22063__0.call(this);
case 1:
return G__22063__1.call(this,result);
case 2:
return G__22063__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22063.cljs$core$IFn$_invoke$arity$0 = G__22063__0;
G__22063.cljs$core$IFn$_invoke$arity$1 = G__22063__1;
G__22063.cljs$core$IFn$_invoke$arity$2 = G__22063__2;
return G__22063;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13056__auto___22064 = size;
var i_22065 = (0);
while(true){
if((i_22065 < n__13056__auto___22064)){
cljs.core.chunk_append(b,(function (){var G__22059 = (idx + i_22065);
var G__22060 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22065);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22059,G__22060) : f.call(null,G__22059,G__22060));
})());

var G__22066 = (i_22065 + (1));
i_22065 = G__22066;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__22061 = idx;
var G__22062 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22061,G__22062) : f.call(null,G__22061,G__22062));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__22085 = null;
var G__22085__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22085__1 = (function (result){
var G__22079 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22079) : rf.call(null,G__22079));
});
var G__22085__2 = (function (result,input){
var v = (function (){var G__22080 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22080) : f.call(null,G__22080));
})();
if((v == null)){
return result;
} else {
var G__22081 = result;
var G__22082 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22081,G__22082) : rf.call(null,G__22081,G__22082));
}
});
G__22085 = function(result,input){
switch(arguments.length){
case 0:
return G__22085__0.call(this);
case 1:
return G__22085__1.call(this,result);
case 2:
return G__22085__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22085.cljs$core$IFn$_invoke$arity$0 = G__22085__0;
G__22085.cljs$core$IFn$_invoke$arity$1 = G__22085__1;
G__22085.cljs$core$IFn$_invoke$arity$2 = G__22085__2;
return G__22085;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13056__auto___22086 = size;
var i_22087 = (0);
while(true){
if((i_22087 < n__13056__auto___22086)){
var x_22088 = (function (){var G__22083 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22087);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22083) : f.call(null,G__22083));
})();
if((x_22088 == null)){
} else {
cljs.core.chunk_append(b,x_22088);
}

var G__22089 = (i_22087 + (1));
i_22087 = G__22089;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__22084 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22084) : f.call(null,G__22084));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__22090 = this$__$1;
return goog.getUid(G__22090);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__22091 = cljs.core.seq(self__.watches);
var chunk__22092 = null;
var count__22093 = (0);
var i__22094 = (0);
while(true){
if((i__22094 < count__22093)){
var vec__22095 = chunk__22092.cljs$core$IIndexed$_nth$arity$2(null,i__22094);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22095,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22095,(1),null);
var G__22096_22105 = key;
var G__22097_22106 = this$__$1;
var G__22098_22107 = oldval;
var G__22099_22108 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22096_22105,G__22097_22106,G__22098_22107,G__22099_22108) : f.call(null,G__22096_22105,G__22097_22106,G__22098_22107,G__22099_22108));

var G__22109 = seq__22091;
var G__22110 = chunk__22092;
var G__22111 = count__22093;
var G__22112 = (i__22094 + (1));
seq__22091 = G__22109;
chunk__22092 = G__22110;
count__22093 = G__22111;
i__22094 = G__22112;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22091);
if(temp__4126__auto__){
var seq__22091__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22091__$1)){
var c__12956__auto__ = cljs.core.chunk_first(seq__22091__$1);
var G__22113 = cljs.core.chunk_rest(seq__22091__$1);
var G__22114 = c__12956__auto__;
var G__22115 = cljs.core.count(c__12956__auto__);
var G__22116 = (0);
seq__22091 = G__22113;
chunk__22092 = G__22114;
count__22093 = G__22115;
i__22094 = G__22116;
continue;
} else {
var vec__22100 = cljs.core.first(seq__22091__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22100,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22100,(1),null);
var G__22101_22117 = key;
var G__22102_22118 = this$__$1;
var G__22103_22119 = oldval;
var G__22104_22120 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22101_22117,G__22102_22118,G__22103_22119,G__22104_22120) : f.call(null,G__22101_22117,G__22102_22118,G__22103_22119,G__22104_22120));

var G__22121 = cljs.core.next(seq__22091__$1);
var G__22122 = null;
var G__22123 = (0);
var G__22124 = (0);
seq__22091 = G__22121;
chunk__22092 = G__22122;
count__22093 = G__22123;
i__22094 = G__22124;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__22128__delegate = function (x,p__22125){
var map__22127 = p__22125;
var map__22127__$1 = ((cljs.core.seq_QMARK_(map__22127))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22127):map__22127);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22127__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22127__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__22128 = function (x,var_args){
var p__22125 = null;
if (arguments.length > 1) {
var G__22129__i = 0, G__22129__a = new Array(arguments.length -  1);
while (G__22129__i < G__22129__a.length) {G__22129__a[G__22129__i] = arguments[G__22129__i + 1]; ++G__22129__i;}
  p__22125 = new cljs.core.IndexedSeq(G__22129__a,0);
} 
return G__22128__delegate.call(this,x,p__22125);};
G__22128.cljs$lang$maxFixedArity = 1;
G__22128.cljs$lang$applyTo = (function (arglist__22130){
var x = cljs.core.first(arglist__22130);
var p__22125 = cljs.core.rest(arglist__22130);
return G__22128__delegate(x,p__22125);
});
G__22128.cljs$core$IFn$_invoke$arity$variadic = G__22128__delegate;
return G__22128;
})()
;
atom = function(x,var_args){
var p__22125 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__22131 = null;
if (arguments.length > 1) {
var G__22132__i = 0, G__22132__a = new Array(arguments.length -  1);
while (G__22132__i < G__22132__a.length) {G__22132__a[G__22132__i] = arguments[G__22132__i + 1]; ++G__22132__i;}
G__22131 = new cljs.core.IndexedSeq(G__22132__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__22131);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__22135 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__22135) : validate.call(null,G__22135));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__22136 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__22136) : cljs.core.pr_str.call(null,G__22136));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__22143 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22143) : f.call(null,G__22143));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__22144 = a.state;
var G__22145 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22144,G__22145) : f.call(null,G__22144,G__22145));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__22146 = a.state;
var G__22147 = x;
var G__22148 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22146,G__22147,G__22148) : f.call(null,G__22146,G__22147,G__22148));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__22149__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__22149 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__22150__i = 0, G__22150__a = new Array(arguments.length -  4);
while (G__22150__i < G__22150__a.length) {G__22150__a[G__22150__i] = arguments[G__22150__i + 4]; ++G__22150__i;}
  more = new cljs.core.IndexedSeq(G__22150__a,0);
} 
return G__22149__delegate.call(this,a,f,x,y,more);};
G__22149.cljs$lang$maxFixedArity = 4;
G__22149.cljs$lang$applyTo = (function (arglist__22151){
var a = cljs.core.first(arglist__22151);
arglist__22151 = cljs.core.next(arglist__22151);
var f = cljs.core.first(arglist__22151);
arglist__22151 = cljs.core.next(arglist__22151);
var x = cljs.core.first(arglist__22151);
arglist__22151 = cljs.core.next(arglist__22151);
var y = cljs.core.first(arglist__22151);
var more = cljs.core.rest(arglist__22151);
return G__22149__delegate(a,f,x,y,more);
});
G__22149.cljs$core$IFn$_invoke$arity$variadic = G__22149__delegate;
return G__22149;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__22152 = null;
if (arguments.length > 4) {
var G__22153__i = 0, G__22153__a = new Array(arguments.length -  4);
while (G__22153__i < G__22153__a.length) {G__22153__a[G__22153__i] = arguments[G__22153__i + 4]; ++G__22153__i;}
G__22152 = new cljs.core.IndexedSeq(G__22153__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__22152);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__22220 = null;
var G__22220__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22220__1 = (function (result){
var G__22187 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22187) : rf.call(null,G__22187));
});
var G__22220__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__22188 = i;
var G__22189 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22188,G__22189) : f.call(null,G__22188,G__22189));
})();
if((v == null)){
return result;
} else {
var G__22190 = result;
var G__22191 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22190,G__22191) : rf.call(null,G__22190,G__22191));
}
});
G__22220 = function(result,input){
switch(arguments.length){
case 0:
return G__22220__0.call(this);
case 1:
return G__22220__1.call(this,result);
case 2:
return G__22220__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22220.cljs$core$IFn$_invoke$arity$0 = G__22220__0;
G__22220.cljs$core$IFn$_invoke$arity$1 = G__22220__1;
G__22220.cljs$core$IFn$_invoke$arity$2 = G__22220__2;
return G__22220;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13056__auto___22221 = size;
var i_22222 = (0);
while(true){
if((i_22222 < n__13056__auto___22221)){
var x_22223 = (function (){var G__22216 = (idx + i_22222);
var G__22217 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22222);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22216,G__22217) : f.call(null,G__22216,G__22217));
})();
if((x_22223 == null)){
} else {
cljs.core.chunk_append(b,x_22223);
}

var G__22224 = (i_22222 + (1));
i_22222 = G__22224;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__22218 = idx;
var G__22219 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22218,G__22219) : f.call(null,G__22218,G__22219));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__22438 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22438) : p.call(null,G__22438));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__12157__auto__ = (function (){var G__22440 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22440) : p.call(null,G__22440));
})();
if(cljs.core.truth_(and__12157__auto__)){
var G__22441 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22441) : p.call(null,G__22441));
} else {
return and__12157__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__12157__auto__ = (function (){var G__22443 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22443) : p.call(null,G__22443));
})();
if(cljs.core.truth_(and__12157__auto__)){
var and__12157__auto____$1 = (function (){var G__22445 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22445) : p.call(null,G__22445));
})();
if(cljs.core.truth_(and__12157__auto____$1)){
var G__22446 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22446) : p.call(null,G__22446));
} else {
return and__12157__auto____$1;
}
} else {
return and__12157__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__22615__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__22615 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22616__i = 0, G__22616__a = new Array(arguments.length -  3);
while (G__22616__i < G__22616__a.length) {G__22616__a[G__22616__i] = arguments[G__22616__i + 3]; ++G__22616__i;}
  args = new cljs.core.IndexedSeq(G__22616__a,0);
} 
return G__22615__delegate.call(this,x,y,z,args);};
G__22615.cljs$lang$maxFixedArity = 3;
G__22615.cljs$lang$applyTo = (function (arglist__22617){
var x = cljs.core.first(arglist__22617);
arglist__22617 = cljs.core.next(arglist__22617);
var y = cljs.core.first(arglist__22617);
arglist__22617 = cljs.core.next(arglist__22617);
var z = cljs.core.first(arglist__22617);
var args = cljs.core.rest(arglist__22617);
return G__22615__delegate(x,y,z,args);
});
G__22615.cljs$core$IFn$_invoke$arity$variadic = G__22615__delegate;
return G__22615;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__22618 = null;
if (arguments.length > 3) {
var G__22619__i = 0, G__22619__a = new Array(arguments.length -  3);
while (G__22619__i < G__22619__a.length) {G__22619__a[G__22619__i] = arguments[G__22619__i + 3]; ++G__22619__i;}
G__22618 = new cljs.core.IndexedSeq(G__22619__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22618);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__12157__auto__ = (function (){var G__22478 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22478) : p1.call(null,G__22478));
})();
if(cljs.core.truth_(and__12157__auto__)){
var G__22479 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22479) : p2.call(null,G__22479));
} else {
return and__12157__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__12157__auto__ = (function (){var G__22481 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22481) : p1.call(null,G__22481));
})();
if(cljs.core.truth_(and__12157__auto__)){
var and__12157__auto____$1 = (function (){var G__22483 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22483) : p1.call(null,G__22483));
})();
if(cljs.core.truth_(and__12157__auto____$1)){
var and__12157__auto____$2 = (function (){var G__22485 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22485) : p2.call(null,G__22485));
})();
if(cljs.core.truth_(and__12157__auto____$2)){
var G__22486 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22486) : p2.call(null,G__22486));
} else {
return and__12157__auto____$2;
}
} else {
return and__12157__auto____$1;
}
} else {
return and__12157__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__12157__auto__ = (function (){var G__22488 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22488) : p1.call(null,G__22488));
})();
if(cljs.core.truth_(and__12157__auto__)){
var and__12157__auto____$1 = (function (){var G__22490 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22490) : p1.call(null,G__22490));
})();
if(cljs.core.truth_(and__12157__auto____$1)){
var and__12157__auto____$2 = (function (){var G__22492 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22492) : p1.call(null,G__22492));
})();
if(cljs.core.truth_(and__12157__auto____$2)){
var and__12157__auto____$3 = (function (){var G__22494 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22494) : p2.call(null,G__22494));
})();
if(cljs.core.truth_(and__12157__auto____$3)){
var and__12157__auto____$4 = (function (){var G__22496 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22496) : p2.call(null,G__22496));
})();
if(cljs.core.truth_(and__12157__auto____$4)){
var G__22497 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22497) : p2.call(null,G__22497));
} else {
return and__12157__auto____$4;
}
} else {
return and__12157__auto____$3;
}
} else {
return and__12157__auto____$2;
}
} else {
return and__12157__auto____$1;
}
} else {
return and__12157__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__22620__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__22225_SHARP_){
var and__12157__auto__ = (function (){var G__22502 = p1__22225_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22502) : p1.call(null,G__22502));
})();
if(cljs.core.truth_(and__12157__auto__)){
var G__22503 = p1__22225_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22503) : p2.call(null,G__22503));
} else {
return and__12157__auto__;
}
}),args)));
};
var G__22620 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22621__i = 0, G__22621__a = new Array(arguments.length -  3);
while (G__22621__i < G__22621__a.length) {G__22621__a[G__22621__i] = arguments[G__22621__i + 3]; ++G__22621__i;}
  args = new cljs.core.IndexedSeq(G__22621__a,0);
} 
return G__22620__delegate.call(this,x,y,z,args);};
G__22620.cljs$lang$maxFixedArity = 3;
G__22620.cljs$lang$applyTo = (function (arglist__22622){
var x = cljs.core.first(arglist__22622);
arglist__22622 = cljs.core.next(arglist__22622);
var y = cljs.core.first(arglist__22622);
arglist__22622 = cljs.core.next(arglist__22622);
var z = cljs.core.first(arglist__22622);
var args = cljs.core.rest(arglist__22622);
return G__22620__delegate(x,y,z,args);
});
G__22620.cljs$core$IFn$_invoke$arity$variadic = G__22620__delegate;
return G__22620;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__22623 = null;
if (arguments.length > 3) {
var G__22624__i = 0, G__22624__a = new Array(arguments.length -  3);
while (G__22624__i < G__22624__a.length) {G__22624__a[G__22624__i] = arguments[G__22624__i + 3]; ++G__22624__i;}
G__22623 = new cljs.core.IndexedSeq(G__22624__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22623);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__12157__auto__ = (function (){var G__22549 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22549) : p1.call(null,G__22549));
})();
if(cljs.core.truth_(and__12157__auto__)){
var and__12157__auto____$1 = (function (){var G__22551 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22551) : p2.call(null,G__22551));
})();
if(cljs.core.truth_(and__12157__auto____$1)){
var G__22552 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22552) : p3.call(null,G__22552));
} else {
return and__12157__auto____$1;
}
} else {
return and__12157__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__12157__auto__ = (function (){var G__22554 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22554) : p1.call(null,G__22554));
})();
if(cljs.core.truth_(and__12157__auto__)){
var and__12157__auto____$1 = (function (){var G__22556 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22556) : p2.call(null,G__22556));
})();
if(cljs.core.truth_(and__12157__auto____$1)){
var and__12157__auto____$2 = (function (){var G__22558 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22558) : p3.call(null,G__22558));
})();
if(cljs.core.truth_(and__12157__auto____$2)){
var and__12157__auto____$3 = (function (){var G__22560 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22560) : p1.call(null,G__22560));
})();
if(cljs.core.truth_(and__12157__auto____$3)){
var and__12157__auto____$4 = (function (){var G__22562 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22562) : p2.call(null,G__22562));
})();
if(cljs.core.truth_(and__12157__auto____$4)){
var G__22563 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22563) : p3.call(null,G__22563));
} else {
return and__12157__auto____$4;
}
} else {
return and__12157__auto____$3;
}
} else {
return and__12157__auto____$2;
}
} else {
return and__12157__auto____$1;
}
} else {
return and__12157__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__12157__auto__ = (function (){var G__22565 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22565) : p1.call(null,G__22565));
})();
if(cljs.core.truth_(and__12157__auto__)){
var and__12157__auto____$1 = (function (){var G__22567 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22567) : p2.call(null,G__22567));
})();
if(cljs.core.truth_(and__12157__auto____$1)){
var and__12157__auto____$2 = (function (){var G__22569 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22569) : p3.call(null,G__22569));
})();
if(cljs.core.truth_(and__12157__auto____$2)){
var and__12157__auto____$3 = (function (){var G__22571 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22571) : p1.call(null,G__22571));
})();
if(cljs.core.truth_(and__12157__auto____$3)){
var and__12157__auto____$4 = (function (){var G__22573 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22573) : p2.call(null,G__22573));
})();
if(cljs.core.truth_(and__12157__auto____$4)){
var and__12157__auto____$5 = (function (){var G__22575 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22575) : p3.call(null,G__22575));
})();
if(cljs.core.truth_(and__12157__auto____$5)){
var and__12157__auto____$6 = (function (){var G__22577 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22577) : p1.call(null,G__22577));
})();
if(cljs.core.truth_(and__12157__auto____$6)){
var and__12157__auto____$7 = (function (){var G__22579 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22579) : p2.call(null,G__22579));
})();
if(cljs.core.truth_(and__12157__auto____$7)){
var G__22580 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22580) : p3.call(null,G__22580));
} else {
return and__12157__auto____$7;
}
} else {
return and__12157__auto____$6;
}
} else {
return and__12157__auto____$5;
}
} else {
return and__12157__auto____$4;
}
} else {
return and__12157__auto____$3;
}
} else {
return and__12157__auto____$2;
}
} else {
return and__12157__auto____$1;
}
} else {
return and__12157__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__22625__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__22226_SHARP_){
var and__12157__auto__ = (function (){var G__22587 = p1__22226_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22587) : p1.call(null,G__22587));
})();
if(cljs.core.truth_(and__12157__auto__)){
var and__12157__auto____$1 = (function (){var G__22589 = p1__22226_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22589) : p2.call(null,G__22589));
})();
if(cljs.core.truth_(and__12157__auto____$1)){
var G__22590 = p1__22226_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22590) : p3.call(null,G__22590));
} else {
return and__12157__auto____$1;
}
} else {
return and__12157__auto__;
}
}),args)));
};
var G__22625 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22626__i = 0, G__22626__a = new Array(arguments.length -  3);
while (G__22626__i < G__22626__a.length) {G__22626__a[G__22626__i] = arguments[G__22626__i + 3]; ++G__22626__i;}
  args = new cljs.core.IndexedSeq(G__22626__a,0);
} 
return G__22625__delegate.call(this,x,y,z,args);};
G__22625.cljs$lang$maxFixedArity = 3;
G__22625.cljs$lang$applyTo = (function (arglist__22627){
var x = cljs.core.first(arglist__22627);
arglist__22627 = cljs.core.next(arglist__22627);
var y = cljs.core.first(arglist__22627);
arglist__22627 = cljs.core.next(arglist__22627);
var z = cljs.core.first(arglist__22627);
var args = cljs.core.rest(arglist__22627);
return G__22625__delegate(x,y,z,args);
});
G__22625.cljs$core$IFn$_invoke$arity$variadic = G__22625__delegate;
return G__22625;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__22628 = null;
if (arguments.length > 3) {
var G__22629__i = 0, G__22629__a = new Array(arguments.length -  3);
while (G__22629__i < G__22629__a.length) {G__22629__a[G__22629__i] = arguments[G__22629__i + 3]; ++G__22629__i;}
G__22628 = new cljs.core.IndexedSeq(G__22629__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22628);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__22630__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__22227_SHARP_){
var G__22606 = x;
return (p1__22227_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22227_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22606) : p1__22227_SHARP_.call(null,G__22606));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__22228_SHARP_){
var and__12157__auto__ = (function (){var G__22608 = x;
return (p1__22228_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22228_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22608) : p1__22228_SHARP_.call(null,G__22608));
})();
if(cljs.core.truth_(and__12157__auto__)){
var G__22609 = y;
return (p1__22228_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22228_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22609) : p1__22228_SHARP_.call(null,G__22609));
} else {
return and__12157__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__22229_SHARP_){
var and__12157__auto__ = (function (){var G__22611 = x;
return (p1__22229_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22229_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22611) : p1__22229_SHARP_.call(null,G__22611));
})();
if(cljs.core.truth_(and__12157__auto__)){
var and__12157__auto____$1 = (function (){var G__22613 = y;
return (p1__22229_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22229_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22613) : p1__22229_SHARP_.call(null,G__22613));
})();
if(cljs.core.truth_(and__12157__auto____$1)){
var G__22614 = z;
return (p1__22229_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22229_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22614) : p1__22229_SHARP_.call(null,G__22614));
} else {
return and__12157__auto____$1;
}
} else {
return and__12157__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__22631__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__22230_SHARP_){
return cljs.core.every_QMARK_(p1__22230_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__22631 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22632__i = 0, G__22632__a = new Array(arguments.length -  3);
while (G__22632__i < G__22632__a.length) {G__22632__a[G__22632__i] = arguments[G__22632__i + 3]; ++G__22632__i;}
  args = new cljs.core.IndexedSeq(G__22632__a,0);
} 
return G__22631__delegate.call(this,x,y,z,args);};
G__22631.cljs$lang$maxFixedArity = 3;
G__22631.cljs$lang$applyTo = (function (arglist__22633){
var x = cljs.core.first(arglist__22633);
arglist__22633 = cljs.core.next(arglist__22633);
var y = cljs.core.first(arglist__22633);
arglist__22633 = cljs.core.next(arglist__22633);
var z = cljs.core.first(arglist__22633);
var args = cljs.core.rest(arglist__22633);
return G__22631__delegate(x,y,z,args);
});
G__22631.cljs$core$IFn$_invoke$arity$variadic = G__22631__delegate;
return G__22631;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__22634 = null;
if (arguments.length > 3) {
var G__22635__i = 0, G__22635__a = new Array(arguments.length -  3);
while (G__22635__i < G__22635__a.length) {G__22635__a[G__22635__i] = arguments[G__22635__i + 3]; ++G__22635__i;}
G__22634 = new cljs.core.IndexedSeq(G__22635__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22634);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__22630 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__22636__i = 0, G__22636__a = new Array(arguments.length -  3);
while (G__22636__i < G__22636__a.length) {G__22636__a[G__22636__i] = arguments[G__22636__i + 3]; ++G__22636__i;}
  ps = new cljs.core.IndexedSeq(G__22636__a,0);
} 
return G__22630__delegate.call(this,p1,p2,p3,ps);};
G__22630.cljs$lang$maxFixedArity = 3;
G__22630.cljs$lang$applyTo = (function (arglist__22637){
var p1 = cljs.core.first(arglist__22637);
arglist__22637 = cljs.core.next(arglist__22637);
var p2 = cljs.core.first(arglist__22637);
arglist__22637 = cljs.core.next(arglist__22637);
var p3 = cljs.core.first(arglist__22637);
var ps = cljs.core.rest(arglist__22637);
return G__22630__delegate(p1,p2,p3,ps);
});
G__22630.cljs$core$IFn$_invoke$arity$variadic = G__22630__delegate;
return G__22630;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__22638 = null;
if (arguments.length > 3) {
var G__22639__i = 0, G__22639__a = new Array(arguments.length -  3);
while (G__22639__i < G__22639__a.length) {G__22639__a[G__22639__i] = arguments[G__22639__i + 3]; ++G__22639__i;}
G__22638 = new cljs.core.IndexedSeq(G__22639__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__22638);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__22845 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22845) : p.call(null,G__22845));
});
var sp1__2 = (function (x,y){
var or__12169__auto__ = (function (){var G__22847 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22847) : p.call(null,G__22847));
})();
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
var G__22848 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22848) : p.call(null,G__22848));
}
});
var sp1__3 = (function (x,y,z){
var or__12169__auto__ = (function (){var G__22850 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22850) : p.call(null,G__22850));
})();
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (function (){var G__22852 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22852) : p.call(null,G__22852));
})();
if(cljs.core.truth_(or__12169__auto____$1)){
return or__12169__auto____$1;
} else {
var G__22853 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22853) : p.call(null,G__22853));
}
}
});
var sp1__4 = (function() { 
var G__23014__delegate = function (x,y,z,args){
var or__12169__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__23014 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23015__i = 0, G__23015__a = new Array(arguments.length -  3);
while (G__23015__i < G__23015__a.length) {G__23015__a[G__23015__i] = arguments[G__23015__i + 3]; ++G__23015__i;}
  args = new cljs.core.IndexedSeq(G__23015__a,0);
} 
return G__23014__delegate.call(this,x,y,z,args);};
G__23014.cljs$lang$maxFixedArity = 3;
G__23014.cljs$lang$applyTo = (function (arglist__23016){
var x = cljs.core.first(arglist__23016);
arglist__23016 = cljs.core.next(arglist__23016);
var y = cljs.core.first(arglist__23016);
arglist__23016 = cljs.core.next(arglist__23016);
var z = cljs.core.first(arglist__23016);
var args = cljs.core.rest(arglist__23016);
return G__23014__delegate(x,y,z,args);
});
G__23014.cljs$core$IFn$_invoke$arity$variadic = G__23014__delegate;
return G__23014;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__23017 = null;
if (arguments.length > 3) {
var G__23018__i = 0, G__23018__a = new Array(arguments.length -  3);
while (G__23018__i < G__23018__a.length) {G__23018__a[G__23018__i] = arguments[G__23018__i + 3]; ++G__23018__i;}
G__23017 = new cljs.core.IndexedSeq(G__23018__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23017);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__12169__auto__ = (function (){var G__22885 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22885) : p1.call(null,G__22885));
})();
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
var G__22886 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22886) : p2.call(null,G__22886));
}
});
var sp2__2 = (function (x,y){
var or__12169__auto__ = (function (){var G__22888 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22888) : p1.call(null,G__22888));
})();
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (function (){var G__22890 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22890) : p1.call(null,G__22890));
})();
if(cljs.core.truth_(or__12169__auto____$1)){
return or__12169__auto____$1;
} else {
var or__12169__auto____$2 = (function (){var G__22892 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22892) : p2.call(null,G__22892));
})();
if(cljs.core.truth_(or__12169__auto____$2)){
return or__12169__auto____$2;
} else {
var G__22893 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22893) : p2.call(null,G__22893));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__12169__auto__ = (function (){var G__22895 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22895) : p1.call(null,G__22895));
})();
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (function (){var G__22897 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22897) : p1.call(null,G__22897));
})();
if(cljs.core.truth_(or__12169__auto____$1)){
return or__12169__auto____$1;
} else {
var or__12169__auto____$2 = (function (){var G__22899 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22899) : p1.call(null,G__22899));
})();
if(cljs.core.truth_(or__12169__auto____$2)){
return or__12169__auto____$2;
} else {
var or__12169__auto____$3 = (function (){var G__22901 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22901) : p2.call(null,G__22901));
})();
if(cljs.core.truth_(or__12169__auto____$3)){
return or__12169__auto____$3;
} else {
var or__12169__auto____$4 = (function (){var G__22903 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22903) : p2.call(null,G__22903));
})();
if(cljs.core.truth_(or__12169__auto____$4)){
return or__12169__auto____$4;
} else {
var G__22904 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22904) : p2.call(null,G__22904));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__23019__delegate = function (x,y,z,args){
var or__12169__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
return cljs.core.some(((function (or__12169__auto__){
return (function (p1__22640_SHARP_){
var or__12169__auto____$1 = (function (){var G__22906 = p1__22640_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22906) : p1.call(null,G__22906));
})();
if(cljs.core.truth_(or__12169__auto____$1)){
return or__12169__auto____$1;
} else {
var G__22907 = p1__22640_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22907) : p2.call(null,G__22907));
}
});})(or__12169__auto__))
,args);
}
};
var G__23019 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23020__i = 0, G__23020__a = new Array(arguments.length -  3);
while (G__23020__i < G__23020__a.length) {G__23020__a[G__23020__i] = arguments[G__23020__i + 3]; ++G__23020__i;}
  args = new cljs.core.IndexedSeq(G__23020__a,0);
} 
return G__23019__delegate.call(this,x,y,z,args);};
G__23019.cljs$lang$maxFixedArity = 3;
G__23019.cljs$lang$applyTo = (function (arglist__23021){
var x = cljs.core.first(arglist__23021);
arglist__23021 = cljs.core.next(arglist__23021);
var y = cljs.core.first(arglist__23021);
arglist__23021 = cljs.core.next(arglist__23021);
var z = cljs.core.first(arglist__23021);
var args = cljs.core.rest(arglist__23021);
return G__23019__delegate(x,y,z,args);
});
G__23019.cljs$core$IFn$_invoke$arity$variadic = G__23019__delegate;
return G__23019;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__23022 = null;
if (arguments.length > 3) {
var G__23023__i = 0, G__23023__a = new Array(arguments.length -  3);
while (G__23023__i < G__23023__a.length) {G__23023__a[G__23023__i] = arguments[G__23023__i + 3]; ++G__23023__i;}
G__23022 = new cljs.core.IndexedSeq(G__23023__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23022);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__12169__auto__ = (function (){var G__22953 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22953) : p1.call(null,G__22953));
})();
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (function (){var G__22955 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22955) : p2.call(null,G__22955));
})();
if(cljs.core.truth_(or__12169__auto____$1)){
return or__12169__auto____$1;
} else {
var G__22956 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22956) : p3.call(null,G__22956));
}
}
});
var sp3__2 = (function (x,y){
var or__12169__auto__ = (function (){var G__22958 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22958) : p1.call(null,G__22958));
})();
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (function (){var G__22960 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22960) : p2.call(null,G__22960));
})();
if(cljs.core.truth_(or__12169__auto____$1)){
return or__12169__auto____$1;
} else {
var or__12169__auto____$2 = (function (){var G__22962 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22962) : p3.call(null,G__22962));
})();
if(cljs.core.truth_(or__12169__auto____$2)){
return or__12169__auto____$2;
} else {
var or__12169__auto____$3 = (function (){var G__22964 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22964) : p1.call(null,G__22964));
})();
if(cljs.core.truth_(or__12169__auto____$3)){
return or__12169__auto____$3;
} else {
var or__12169__auto____$4 = (function (){var G__22966 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22966) : p2.call(null,G__22966));
})();
if(cljs.core.truth_(or__12169__auto____$4)){
return or__12169__auto____$4;
} else {
var G__22967 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22967) : p3.call(null,G__22967));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__12169__auto__ = (function (){var G__22969 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22969) : p1.call(null,G__22969));
})();
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (function (){var G__22971 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22971) : p2.call(null,G__22971));
})();
if(cljs.core.truth_(or__12169__auto____$1)){
return or__12169__auto____$1;
} else {
var or__12169__auto____$2 = (function (){var G__22973 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22973) : p3.call(null,G__22973));
})();
if(cljs.core.truth_(or__12169__auto____$2)){
return or__12169__auto____$2;
} else {
var or__12169__auto____$3 = (function (){var G__22975 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22975) : p1.call(null,G__22975));
})();
if(cljs.core.truth_(or__12169__auto____$3)){
return or__12169__auto____$3;
} else {
var or__12169__auto____$4 = (function (){var G__22977 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22977) : p2.call(null,G__22977));
})();
if(cljs.core.truth_(or__12169__auto____$4)){
return or__12169__auto____$4;
} else {
var or__12169__auto____$5 = (function (){var G__22979 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22979) : p3.call(null,G__22979));
})();
if(cljs.core.truth_(or__12169__auto____$5)){
return or__12169__auto____$5;
} else {
var or__12169__auto____$6 = (function (){var G__22981 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22981) : p1.call(null,G__22981));
})();
if(cljs.core.truth_(or__12169__auto____$6)){
return or__12169__auto____$6;
} else {
var or__12169__auto____$7 = (function (){var G__22983 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22983) : p2.call(null,G__22983));
})();
if(cljs.core.truth_(or__12169__auto____$7)){
return or__12169__auto____$7;
} else {
var G__22984 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22984) : p3.call(null,G__22984));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__23024__delegate = function (x,y,z,args){
var or__12169__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
return cljs.core.some(((function (or__12169__auto__){
return (function (p1__22641_SHARP_){
var or__12169__auto____$1 = (function (){var G__22986 = p1__22641_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22986) : p1.call(null,G__22986));
})();
if(cljs.core.truth_(or__12169__auto____$1)){
return or__12169__auto____$1;
} else {
var or__12169__auto____$2 = (function (){var G__22988 = p1__22641_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22988) : p2.call(null,G__22988));
})();
if(cljs.core.truth_(or__12169__auto____$2)){
return or__12169__auto____$2;
} else {
var G__22989 = p1__22641_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22989) : p3.call(null,G__22989));
}
}
});})(or__12169__auto__))
,args);
}
};
var G__23024 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23025__i = 0, G__23025__a = new Array(arguments.length -  3);
while (G__23025__i < G__23025__a.length) {G__23025__a[G__23025__i] = arguments[G__23025__i + 3]; ++G__23025__i;}
  args = new cljs.core.IndexedSeq(G__23025__a,0);
} 
return G__23024__delegate.call(this,x,y,z,args);};
G__23024.cljs$lang$maxFixedArity = 3;
G__23024.cljs$lang$applyTo = (function (arglist__23026){
var x = cljs.core.first(arglist__23026);
arglist__23026 = cljs.core.next(arglist__23026);
var y = cljs.core.first(arglist__23026);
arglist__23026 = cljs.core.next(arglist__23026);
var z = cljs.core.first(arglist__23026);
var args = cljs.core.rest(arglist__23026);
return G__23024__delegate(x,y,z,args);
});
G__23024.cljs$core$IFn$_invoke$arity$variadic = G__23024__delegate;
return G__23024;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__23027 = null;
if (arguments.length > 3) {
var G__23028__i = 0, G__23028__a = new Array(arguments.length -  3);
while (G__23028__i < G__23028__a.length) {G__23028__a[G__23028__i] = arguments[G__23028__i + 3]; ++G__23028__i;}
G__23027 = new cljs.core.IndexedSeq(G__23028__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23027);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__23029__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__22642_SHARP_){
var G__23005 = x;
return (p1__22642_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22642_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23005) : p1__22642_SHARP_.call(null,G__23005));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__22643_SHARP_){
var or__12169__auto__ = (function (){var G__23007 = x;
return (p1__22643_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22643_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23007) : p1__22643_SHARP_.call(null,G__23007));
})();
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
var G__23008 = y;
return (p1__22643_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22643_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23008) : p1__22643_SHARP_.call(null,G__23008));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__22644_SHARP_){
var or__12169__auto__ = (function (){var G__23010 = x;
return (p1__22644_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22644_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23010) : p1__22644_SHARP_.call(null,G__23010));
})();
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (function (){var G__23012 = y;
return (p1__22644_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22644_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23012) : p1__22644_SHARP_.call(null,G__23012));
})();
if(cljs.core.truth_(or__12169__auto____$1)){
return or__12169__auto____$1;
} else {
var G__23013 = z;
return (p1__22644_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22644_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23013) : p1__22644_SHARP_.call(null,G__23013));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__23030__delegate = function (x,y,z,args){
var or__12169__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
return cljs.core.some(((function (or__12169__auto__,ps__$1){
return (function (p1__22645_SHARP_){
return cljs.core.some(p1__22645_SHARP_,args);
});})(or__12169__auto__,ps__$1))
,ps__$1);
}
};
var G__23030 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23031__i = 0, G__23031__a = new Array(arguments.length -  3);
while (G__23031__i < G__23031__a.length) {G__23031__a[G__23031__i] = arguments[G__23031__i + 3]; ++G__23031__i;}
  args = new cljs.core.IndexedSeq(G__23031__a,0);
} 
return G__23030__delegate.call(this,x,y,z,args);};
G__23030.cljs$lang$maxFixedArity = 3;
G__23030.cljs$lang$applyTo = (function (arglist__23032){
var x = cljs.core.first(arglist__23032);
arglist__23032 = cljs.core.next(arglist__23032);
var y = cljs.core.first(arglist__23032);
arglist__23032 = cljs.core.next(arglist__23032);
var z = cljs.core.first(arglist__23032);
var args = cljs.core.rest(arglist__23032);
return G__23030__delegate(x,y,z,args);
});
G__23030.cljs$core$IFn$_invoke$arity$variadic = G__23030__delegate;
return G__23030;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__23033 = null;
if (arguments.length > 3) {
var G__23034__i = 0, G__23034__a = new Array(arguments.length -  3);
while (G__23034__i < G__23034__a.length) {G__23034__a[G__23034__i] = arguments[G__23034__i + 3]; ++G__23034__i;}
G__23033 = new cljs.core.IndexedSeq(G__23034__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23033);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__23029 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__23035__i = 0, G__23035__a = new Array(arguments.length -  3);
while (G__23035__i < G__23035__a.length) {G__23035__a[G__23035__i] = arguments[G__23035__i + 3]; ++G__23035__i;}
  ps = new cljs.core.IndexedSeq(G__23035__a,0);
} 
return G__23029__delegate.call(this,p1,p2,p3,ps);};
G__23029.cljs$lang$maxFixedArity = 3;
G__23029.cljs$lang$applyTo = (function (arglist__23036){
var p1 = cljs.core.first(arglist__23036);
arglist__23036 = cljs.core.next(arglist__23036);
var p2 = cljs.core.first(arglist__23036);
arglist__23036 = cljs.core.next(arglist__23036);
var p3 = cljs.core.first(arglist__23036);
var ps = cljs.core.rest(arglist__23036);
return G__23029__delegate(p1,p2,p3,ps);
});
G__23029.cljs$core$IFn$_invoke$arity$variadic = G__23029__delegate;
return G__23029;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__23037 = null;
if (arguments.length > 3) {
var G__23038__i = 0, G__23038__a = new Array(arguments.length -  3);
while (G__23038__i < G__23038__a.length) {G__23038__a[G__23038__i] = arguments[G__23038__i + 3]; ++G__23038__i;}
G__23037 = new cljs.core.IndexedSeq(G__23038__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__23037);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__23093 = null;
var G__23093__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23093__1 = (function (result){
var G__23079 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23079) : rf.call(null,G__23079));
});
var G__23093__2 = (function (result,input){
var G__23080 = result;
var G__23081 = (function (){var G__23082 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23082) : f.call(null,G__23082));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23080,G__23081) : rf.call(null,G__23080,G__23081));
});
var G__23093__3 = (function() { 
var G__23094__delegate = function (result,input,inputs){
var G__23083 = result;
var G__23084 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23083,G__23084) : rf.call(null,G__23083,G__23084));
};
var G__23094 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__23095__i = 0, G__23095__a = new Array(arguments.length -  2);
while (G__23095__i < G__23095__a.length) {G__23095__a[G__23095__i] = arguments[G__23095__i + 2]; ++G__23095__i;}
  inputs = new cljs.core.IndexedSeq(G__23095__a,0);
} 
return G__23094__delegate.call(this,result,input,inputs);};
G__23094.cljs$lang$maxFixedArity = 2;
G__23094.cljs$lang$applyTo = (function (arglist__23096){
var result = cljs.core.first(arglist__23096);
arglist__23096 = cljs.core.next(arglist__23096);
var input = cljs.core.first(arglist__23096);
var inputs = cljs.core.rest(arglist__23096);
return G__23094__delegate(result,input,inputs);
});
G__23094.cljs$core$IFn$_invoke$arity$variadic = G__23094__delegate;
return G__23094;
})()
;
G__23093 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__23093__0.call(this);
case 1:
return G__23093__1.call(this,result);
case 2:
return G__23093__2.call(this,result,input);
default:
var G__23097 = null;
if (arguments.length > 2) {
var G__23098__i = 0, G__23098__a = new Array(arguments.length -  2);
while (G__23098__i < G__23098__a.length) {G__23098__a[G__23098__i] = arguments[G__23098__i + 2]; ++G__23098__i;}
G__23097 = new cljs.core.IndexedSeq(G__23098__a,0);
}
return G__23093__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__23097);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23093.cljs$lang$maxFixedArity = 2;
G__23093.cljs$lang$applyTo = G__23093__3.cljs$lang$applyTo;
G__23093.cljs$core$IFn$_invoke$arity$0 = G__23093__0;
G__23093.cljs$core$IFn$_invoke$arity$1 = G__23093__1;
G__23093.cljs$core$IFn$_invoke$arity$2 = G__23093__2;
G__23093.cljs$core$IFn$_invoke$arity$variadic = G__23093__3.cljs$core$IFn$_invoke$arity$variadic;
return G__23093;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13056__auto___23099 = size;
var i_23100 = (0);
while(true){
if((i_23100 < n__13056__auto___23099)){
cljs.core.chunk_append(b,(function (){var G__23085 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23100);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23085) : f.call(null,G__23085));
})());

var G__23101 = (i_23100 + (1));
i_23100 = G__23101;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__23086 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23086) : f.call(null,G__23086));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__23087 = cljs.core.first(s1);
var G__23088 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23087,G__23088) : f.call(null,G__23087,G__23088));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__23089 = cljs.core.first(s1);
var G__23090 = cljs.core.first(s2);
var G__23091 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23089,G__23090,G__23091) : f.call(null,G__23089,G__23090,G__23091));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__23102__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__23039_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__23039_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__23102 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__23103__i = 0, G__23103__a = new Array(arguments.length -  4);
while (G__23103__i < G__23103__a.length) {G__23103__a[G__23103__i] = arguments[G__23103__i + 4]; ++G__23103__i;}
  colls = new cljs.core.IndexedSeq(G__23103__a,0);
} 
return G__23102__delegate.call(this,f,c1,c2,c3,colls);};
G__23102.cljs$lang$maxFixedArity = 4;
G__23102.cljs$lang$applyTo = (function (arglist__23104){
var f = cljs.core.first(arglist__23104);
arglist__23104 = cljs.core.next(arglist__23104);
var c1 = cljs.core.first(arglist__23104);
arglist__23104 = cljs.core.next(arglist__23104);
var c2 = cljs.core.first(arglist__23104);
arglist__23104 = cljs.core.next(arglist__23104);
var c3 = cljs.core.first(arglist__23104);
var colls = cljs.core.rest(arglist__23104);
return G__23102__delegate(f,c1,c2,c3,colls);
});
G__23102.cljs$core$IFn$_invoke$arity$variadic = G__23102__delegate;
return G__23102;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__23105 = null;
if (arguments.length > 4) {
var G__23106__i = 0, G__23106__a = new Array(arguments.length -  4);
while (G__23106__i < G__23106__a.length) {G__23106__a[G__23106__i] = arguments[G__23106__i + 4]; ++G__23106__i;}
G__23105 = new cljs.core.IndexedSeq(G__23106__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__23105);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__23115 = null;
var G__23115__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23115__1 = (function (result){
var G__23112 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23112) : rf.call(null,G__23112));
});
var G__23115__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__23113 = result;
var G__23114 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23113,G__23114) : rf.call(null,G__23113,G__23114));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__23115 = function(result,input){
switch(arguments.length){
case 0:
return G__23115__0.call(this);
case 1:
return G__23115__1.call(this,result);
case 2:
return G__23115__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23115.cljs$core$IFn$_invoke$arity$0 = G__23115__0;
G__23115.cljs$core$IFn$_invoke$arity$1 = G__23115__1;
G__23115.cljs$core$IFn$_invoke$arity$2 = G__23115__2;
return G__23115;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__23122 = null;
var G__23122__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23122__1 = (function (result){
var G__23119 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23119) : rf.call(null,G__23119));
});
var G__23122__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__23120 = result;
var G__23121 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23120,G__23121) : rf.call(null,G__23120,G__23121));
}
});
G__23122 = function(result,input){
switch(arguments.length){
case 0:
return G__23122__0.call(this);
case 1:
return G__23122__1.call(this,result);
case 2:
return G__23122__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23122.cljs$core$IFn$_invoke$arity$0 = G__23122__0;
G__23122.cljs$core$IFn$_invoke$arity$1 = G__23122__1;
G__23122.cljs$core$IFn$_invoke$arity$2 = G__23122__2;
return G__23122;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__23123 = (n__$1 - (1));
var G__23124 = cljs.core.rest(s);
n__$1 = G__23123;
coll__$1 = G__23124;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__23127 = cljs.core.next(s);
var G__23128 = cljs.core.next(lead);
s = G__23127;
lead = G__23128;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__23141 = null;
var G__23141__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23141__1 = (function (result){
var G__23135 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23135) : rf.call(null,G__23135));
});
var G__23141__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__12157__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__12157__auto__)){
var G__23136 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23136) : pred.call(null,G__23136));
} else {
return and__12157__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__23137 = result;
var G__23138 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23137,G__23138) : rf.call(null,G__23137,G__23138));
}
});
G__23141 = function(result,input){
switch(arguments.length){
case 0:
return G__23141__0.call(this);
case 1:
return G__23141__1.call(this,result);
case 2:
return G__23141__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23141.cljs$core$IFn$_invoke$arity$0 = G__23141__0;
G__23141.cljs$core$IFn$_invoke$arity$1 = G__23141__1;
G__23141.cljs$core$IFn$_invoke$arity$2 = G__23141__2;
return G__23141;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__12157__auto__ = s;
if(and__12157__auto__){
var G__23140 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__23140) : pred__$1.call(null,G__23140));
} else {
return and__12157__auto__;
}
})())){
var G__23142 = pred__$1;
var G__23143 = cljs.core.rest(s);
pred__$1 = G__23142;
coll__$1 = G__23143;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__23152 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23152) : f.call(null,G__23152));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__23155__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__23155 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__23156__i = 0, G__23156__a = new Array(arguments.length -  2);
while (G__23156__i < G__23156__a.length) {G__23156__a[G__23156__i] = arguments[G__23156__i + 2]; ++G__23156__i;}
  colls = new cljs.core.IndexedSeq(G__23156__a,0);
} 
return G__23155__delegate.call(this,c1,c2,colls);};
G__23155.cljs$lang$maxFixedArity = 2;
G__23155.cljs$lang$applyTo = (function (arglist__23157){
var c1 = cljs.core.first(arglist__23157);
arglist__23157 = cljs.core.next(arglist__23157);
var c2 = cljs.core.first(arglist__23157);
var colls = cljs.core.rest(arglist__23157);
return G__23155__delegate(c1,c2,colls);
});
G__23155.cljs$core$IFn$_invoke$arity$variadic = G__23155__delegate;
return G__23155;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__23158 = null;
if (arguments.length > 2) {
var G__23159__i = 0, G__23159__a = new Array(arguments.length -  2);
while (G__23159__i < G__23159__a.length) {G__23159__a[G__23159__i] = arguments[G__23159__i + 2]; ++G__23159__i;}
G__23158 = new cljs.core.IndexedSeq(G__23159__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__23158);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__23174 = null;
var G__23174__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23174__1 = (function (result){
var G__23167 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23167) : rf.call(null,G__23167));
});
var G__23174__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__23168 = result;
var G__23169 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23168,G__23169) : rf.call(null,G__23168,G__23169));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__23170 = sepr;
var G__23171 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23170,G__23171) : rf.call(null,G__23170,G__23171));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__23172 = result;
var G__23173 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23172,G__23173) : rf.call(null,G__23172,G__23173));
}
});
G__23174 = function(result,input){
switch(arguments.length){
case 0:
return G__23174__0.call(this);
case 1:
return G__23174__1.call(this,result);
case 2:
return G__23174__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23174.cljs$core$IFn$_invoke$arity$0 = G__23174__0;
G__23174.cljs$core$IFn$_invoke$arity$1 = G__23174__1;
G__23174.cljs$core$IFn$_invoke$arity$2 = G__23174__2;
return G__23174;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__23183__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__23183 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__23184__i = 0, G__23184__a = new Array(arguments.length -  1);
while (G__23184__i < G__23184__a.length) {G__23184__a[G__23184__i] = arguments[G__23184__i + 1]; ++G__23184__i;}
  colls = new cljs.core.IndexedSeq(G__23184__a,0);
} 
return G__23183__delegate.call(this,f,colls);};
G__23183.cljs$lang$maxFixedArity = 1;
G__23183.cljs$lang$applyTo = (function (arglist__23185){
var f = cljs.core.first(arglist__23185);
var colls = cljs.core.rest(arglist__23185);
return G__23183__delegate(f,colls);
});
G__23183.cljs$core$IFn$_invoke$arity$variadic = G__23183__delegate;
return G__23183;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__23186 = null;
if (arguments.length > 1) {
var G__23187__i = 0, G__23187__a = new Array(arguments.length -  1);
while (G__23187__i < G__23187__a.length) {G__23187__a[G__23187__i] = arguments[G__23187__i + 1]; ++G__23187__i;}
G__23186 = new cljs.core.IndexedSeq(G__23187__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__23186);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__23206 = null;
var G__23206__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23206__1 = (function (result){
var G__23200 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23200) : rf.call(null,G__23200));
});
var G__23206__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__23201 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23201) : pred.call(null,G__23201));
})())){
var G__23202 = result;
var G__23203 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23202,G__23203) : rf.call(null,G__23202,G__23203));
} else {
return result;
}
});
G__23206 = function(result,input){
switch(arguments.length){
case 0:
return G__23206__0.call(this);
case 1:
return G__23206__1.call(this,result);
case 2:
return G__23206__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23206.cljs$core$IFn$_invoke$arity$0 = G__23206__0;
G__23206.cljs$core$IFn$_invoke$arity$1 = G__23206__1;
G__23206.cljs$core$IFn$_invoke$arity$2 = G__23206__2;
return G__23206;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13056__auto___23207 = size;
var i_23208 = (0);
while(true){
if((i_23208 < n__13056__auto___23207)){
if(cljs.core.truth_((function (){var G__23204 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23208);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23204) : pred.call(null,G__23204));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23208));
} else {
}

var G__23209 = (i_23208 + (1));
i_23208 = G__23209;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__23205 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23205) : pred.call(null,G__23205));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__23216 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__23216) : branch_QMARK_.call(null,G__23216));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__23217 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__23217) : children.call(null,G__23217));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__23218_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__23218_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__23221 = to;
if(G__23221){
var bit__12843__auto__ = (G__23221.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__12843__auto__) || (G__23221.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__23222 = to;
if(G__23222){
var bit__12843__auto__ = (G__23222.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__12843__auto__) || (G__23222.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__23224 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23224) : f.call(null,G__23224));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__23225__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__23225 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__23226__i = 0, G__23226__a = new Array(arguments.length -  4);
while (G__23226__i < G__23226__a.length) {G__23226__a[G__23226__i] = arguments[G__23226__i + 4]; ++G__23226__i;}
  colls = new cljs.core.IndexedSeq(G__23226__a,0);
} 
return G__23225__delegate.call(this,f,c1,c2,c3,colls);};
G__23225.cljs$lang$maxFixedArity = 4;
G__23225.cljs$lang$applyTo = (function (arglist__23227){
var f = cljs.core.first(arglist__23227);
arglist__23227 = cljs.core.next(arglist__23227);
var c1 = cljs.core.first(arglist__23227);
arglist__23227 = cljs.core.next(arglist__23227);
var c2 = cljs.core.first(arglist__23227);
arglist__23227 = cljs.core.next(arglist__23227);
var c3 = cljs.core.first(arglist__23227);
var colls = cljs.core.rest(arglist__23227);
return G__23225__delegate(f,c1,c2,c3,colls);
});
G__23225.cljs$core$IFn$_invoke$arity$variadic = G__23225__delegate;
return G__23225;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__23228 = null;
if (arguments.length > 4) {
var G__23229__i = 0, G__23229__a = new Array(arguments.length -  4);
while (G__23229__i < G__23229__a.length) {G__23229__a[G__23229__i] = arguments[G__23229__i + 4]; ++G__23229__i;}
G__23228 = new cljs.core.IndexedSeq(G__23229__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__23228);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__23231 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23231) : pred.call(null,G__23231));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__23246 = m__$1;
if(G__23246){
var bit__12850__auto__ = (G__23246.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__12850__auto__) || (G__23246.cljs$core$ILookup$)){
return true;
} else {
if((!G__23246.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__23246);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__23246);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__23247 = sentinel;
var G__23248 = m__$2;
var G__23249 = cljs.core.next(ks__$1);
sentinel = G__23247;
m__$1 = G__23248;
ks__$1 = G__23249;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__23250,v){
var vec__23255 = p__23250;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23255,(0),null);
var ks = cljs.core.nthnext(vec__23255,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__23256,f){
var vec__23294 = p__23256;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23294,(0),null);
var ks = cljs.core.nthnext(vec__23294,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23295 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23295) : f.call(null,G__23295));
})());
}
});
var update_in__4 = (function (m,p__23257,f,a){
var vec__23296 = p__23257;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23296,(0),null);
var ks = cljs.core.nthnext(vec__23296,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23297 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23298 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23297,G__23298) : f.call(null,G__23297,G__23298));
})());
}
});
var update_in__5 = (function (m,p__23258,f,a,b){
var vec__23299 = p__23258;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23299,(0),null);
var ks = cljs.core.nthnext(vec__23299,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23300 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23301 = a;
var G__23302 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23300,G__23301,G__23302) : f.call(null,G__23300,G__23301,G__23302));
})());
}
});
var update_in__6 = (function (m,p__23259,f,a,b,c){
var vec__23303 = p__23259;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23303,(0),null);
var ks = cljs.core.nthnext(vec__23303,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23304 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23305 = a;
var G__23306 = b;
var G__23307 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23304,G__23305,G__23306,G__23307) : f.call(null,G__23304,G__23305,G__23306,G__23307));
})());
}
});
var update_in__7 = (function() { 
var G__23309__delegate = function (m,p__23260,f,a,b,c,args){
var vec__23308 = p__23260;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23308,(0),null);
var ks = cljs.core.nthnext(vec__23308,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__23309 = function (m,p__23260,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__23310__i = 0, G__23310__a = new Array(arguments.length -  6);
while (G__23310__i < G__23310__a.length) {G__23310__a[G__23310__i] = arguments[G__23310__i + 6]; ++G__23310__i;}
  args = new cljs.core.IndexedSeq(G__23310__a,0);
} 
return G__23309__delegate.call(this,m,p__23260,f,a,b,c,args);};
G__23309.cljs$lang$maxFixedArity = 6;
G__23309.cljs$lang$applyTo = (function (arglist__23311){
var m = cljs.core.first(arglist__23311);
arglist__23311 = cljs.core.next(arglist__23311);
var p__23260 = cljs.core.first(arglist__23311);
arglist__23311 = cljs.core.next(arglist__23311);
var f = cljs.core.first(arglist__23311);
arglist__23311 = cljs.core.next(arglist__23311);
var a = cljs.core.first(arglist__23311);
arglist__23311 = cljs.core.next(arglist__23311);
var b = cljs.core.first(arglist__23311);
arglist__23311 = cljs.core.next(arglist__23311);
var c = cljs.core.first(arglist__23311);
var args = cljs.core.rest(arglist__23311);
return G__23309__delegate(m,p__23260,f,a,b,c,args);
});
G__23309.cljs$core$IFn$_invoke$arity$variadic = G__23309__delegate;
return G__23309;
})()
;
update_in = function(m,p__23260,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__23260,f);
case 4:
return update_in__4.call(this,m,p__23260,f,a);
case 5:
return update_in__5.call(this,m,p__23260,f,a,b);
case 6:
return update_in__6.call(this,m,p__23260,f,a,b,c);
default:
var G__23312 = null;
if (arguments.length > 6) {
var G__23313__i = 0, G__23313__a = new Array(arguments.length -  6);
while (G__23313__i < G__23313__a.length) {G__23313__a[G__23313__i] = arguments[G__23313__i + 6]; ++G__23313__i;}
G__23312 = new cljs.core.IndexedSeq(G__23313__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__23260,f,a,b,c, G__23312);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23324 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23324) : f.call(null,G__23324));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23325 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23326 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23325,G__23326) : f.call(null,G__23325,G__23326));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23327 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23328 = x;
var G__23329 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23327,G__23328,G__23329) : f.call(null,G__23327,G__23328,G__23329));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23330 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23331 = x;
var G__23332 = y;
var G__23333 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23330,G__23331,G__23332,G__23333) : f.call(null,G__23330,G__23331,G__23332,G__23333));
})());
});
var update__7 = (function() { 
var G__23334__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__23334 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__23335__i = 0, G__23335__a = new Array(arguments.length -  6);
while (G__23335__i < G__23335__a.length) {G__23335__a[G__23335__i] = arguments[G__23335__i + 6]; ++G__23335__i;}
  more = new cljs.core.IndexedSeq(G__23335__a,0);
} 
return G__23334__delegate.call(this,m,k,f,x,y,z,more);};
G__23334.cljs$lang$maxFixedArity = 6;
G__23334.cljs$lang$applyTo = (function (arglist__23336){
var m = cljs.core.first(arglist__23336);
arglist__23336 = cljs.core.next(arglist__23336);
var k = cljs.core.first(arglist__23336);
arglist__23336 = cljs.core.next(arglist__23336);
var f = cljs.core.first(arglist__23336);
arglist__23336 = cljs.core.next(arglist__23336);
var x = cljs.core.first(arglist__23336);
arglist__23336 = cljs.core.next(arglist__23336);
var y = cljs.core.first(arglist__23336);
arglist__23336 = cljs.core.next(arglist__23336);
var z = cljs.core.first(arglist__23336);
var more = cljs.core.rest(arglist__23336);
return G__23334__delegate(m,k,f,x,y,z,more);
});
G__23334.cljs$core$IFn$_invoke$arity$variadic = G__23334__delegate;
return G__23334;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__23337 = null;
if (arguments.length > 6) {
var G__23338__i = 0, G__23338__a = new Array(arguments.length -  6);
while (G__23338__i < G__23338__a.length) {G__23338__a[G__23338__i] = arguments[G__23338__i + 6]; ++G__23338__i;}
G__23337 = new cljs.core.IndexedSeq(G__23338__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__23337);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__23339 = (ll - (5));
var G__23340 = r;
ll = G__23339;
ret = G__23340;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__23345 = cljs.core.pv_aget(node,(0));
var G__23346 = (level - (5));
node = G__23345;
level = G__23346;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__23347 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__23348 = (level - (5));
node = G__23347;
level = G__23348;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__23358 = init__$2;
var G__23359 = (j + i);
var G__23360 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23358,G__23359,G__23360) : f.call(null,G__23358,G__23359,G__23360));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__23371 = (j + (1));
var G__23372 = init__$3;
j = G__23371;
init__$2 = G__23372;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23361 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23361) : cljs.core.deref.call(null,G__23361));
} else {
var G__23373 = (i + len);
var G__23374 = init__$2;
i = G__23373;
init__$1 = G__23374;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12590__auto__ = self__.__hash;
if(!((h__12590__auto__ == null))){
return h__12590__auto__;
} else {
var h__12590__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12590__auto____$1;

return h__12590__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__23362 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__23362) : cljs.core.tv_editable_root.call(null,G__23362));
})(),(function (){var G__23363 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__23363) : cljs.core.tv_editable_tail.call(null,G__23363));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__23364 = init__$2;
var G__23365 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23364,G__23365) : f.call(null,G__23364,G__23365));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__23375 = (j + (1));
var G__23376 = init__$3;
j = G__23375;
init__$2 = G__23376;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23366 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23366) : cljs.core.deref.call(null,G__23366));
} else {
var G__23377 = (i + len);
var G__23378 = init__$2;
i = G__23377;
init__$1 = G__23378;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__23367 = coll__$1;
var G__23368 = cljs.core.first_array_for_longvec(coll__$1);
var G__23369 = (0);
var G__23370 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23367,G__23368,G__23369,G__23370) : cljs.core.chunked_seq.call(null,G__23367,G__23368,G__23369,G__23370));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__13056__auto___23379 = len;
var i_23380 = (0);
while(true){
if((i_23380 < n__13056__auto___23379)){
(new_tail[i_23380] = (self__.tail[i_23380]));

var G__23381 = (i_23380 + (1));
i_23380 = G__23381;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__23382 = null;
var G__23382__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__23382__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__23382 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23382__2.call(this,self__,k);
case 3:
return G__23382__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23382.cljs$core$IFn$_invoke$arity$2 = G__23382__2;
G__23382.cljs$core$IFn$_invoke$arity$3 = G__23382__3;
return G__23382;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args23357){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23357)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__23383 = (i + (1));
var G__23384 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__23383;
out = G__23384;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23385__i = 0, G__23385__a = new Array(arguments.length -  0);
while (G__23385__i < G__23385__a.length) {G__23385__a[G__23385__i] = arguments[G__23385__i + 0]; ++G__23385__i;}
  args = new cljs.core.IndexedSeq(G__23385__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__23386){
var args = cljs.core.seq(arglist__23386);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__23387 = self__.vec;
var G__23388 = self__.node;
var G__23389 = self__.i;
var G__23390 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23387,G__23388,G__23389,G__23390) : cljs.core.chunked_seq.call(null,G__23387,G__23388,G__23389,G__23390));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12590__auto__ = self__.__hash;
if(!((h__12590__auto__ == null))){
return h__12590__auto__;
} else {
var h__12590__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12590__auto____$1;

return h__12590__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__23391 = self__.vec;
var G__23392 = (self__.i + self__.off);
var G__23393 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__23391,G__23392,G__23393) : cljs.core.subvec.call(null,G__23391,G__23392,G__23393));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__23394 = self__.vec;
var G__23395 = (self__.i + self__.off);
var G__23396 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__23394,G__23395,G__23396) : cljs.core.subvec.call(null,G__23394,G__23395,G__23396));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__23397 = self__.vec;
var G__23398 = self__.node;
var G__23399 = self__.i;
var G__23400 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23397,G__23398,G__23399,G__23400) : cljs.core.chunked_seq.call(null,G__23397,G__23398,G__23399,G__23400));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__23401 = self__.vec;
var G__23402 = cljs.core.unchecked_array_for(self__.vec,end);
var G__23403 = end;
var G__23404 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23401,G__23402,G__23403,G__23404) : cljs.core.chunked_seq.call(null,G__23401,G__23402,G__23403,G__23404));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__23405 = self__.vec;
var G__23406 = self__.node;
var G__23407 = self__.i;
var G__23408 = self__.off;
var G__23409 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__23405,G__23406,G__23407,G__23408,G__23409) : cljs.core.chunked_seq.call(null,G__23405,G__23406,G__23407,G__23408,G__23409));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__23410 = self__.vec;
var G__23411 = cljs.core.unchecked_array_for(self__.vec,end);
var G__23412 = end;
var G__23413 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23410,G__23411,G__23412,G__23413) : cljs.core.chunked_seq.call(null,G__23410,G__23411,G__23412,G__23413));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__23415 = self__.meta;
var G__23416 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__23417 = self__.start;
var G__23418 = (function (){var x__12486__auto__ = self__.end;
var y__12487__auto__ = (v_pos + (1));
return ((x__12486__auto__ > y__12487__auto__) ? x__12486__auto__ : y__12487__auto__);
})();
var G__23419 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__23415,G__23416,G__23417,G__23418,G__23419) : cljs.core.build_subvec.call(null,G__23415,G__23416,G__23417,G__23418,G__23419));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__23420 = self__.meta;
var G__23421 = self__.v;
var G__23422 = self__.start;
var G__23423 = (self__.end - (1));
var G__23424 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__23420,G__23421,G__23422,G__23423,G__23424) : cljs.core.build_subvec.call(null,G__23420,G__23421,G__23422,G__23423,G__23424));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12590__auto__ = self__.__hash;
if(!((h__12590__auto__ == null))){
return h__12590__auto__;
} else {
var h__12590__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12590__auto____$1;

return h__12590__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__23426 = meta__$1;
var G__23427 = self__.v;
var G__23428 = self__.start;
var G__23429 = self__.end;
var G__23430 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__23426,G__23427,G__23428,G__23429,G__23430) : cljs.core.build_subvec.call(null,G__23426,G__23427,G__23428,G__23429,G__23430));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__23431 = self__.meta;
var G__23432 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__23433 = self__.start;
var G__23434 = (self__.end + (1));
var G__23435 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__23431,G__23432,G__23433,G__23434,G__23435) : cljs.core.build_subvec.call(null,G__23431,G__23432,G__23433,G__23434,G__23435));
});

cljs.core.Subvec.prototype.call = (function() {
var G__23436 = null;
var G__23436__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__23436__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__23436 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23436__2.call(this,self__,k);
case 3:
return G__23436__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23436.cljs$core$IFn$_invoke$arity$2 = G__23436__2;
G__23436.cljs$core$IFn$_invoke$arity$3 = G__23436__3;
return G__23436;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args23414){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23414)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__23437 = meta;
var G__23438 = v.v;
var G__23439 = (v.start + start);
var G__23440 = (v.start + end);
var G__23441 = __hash;
meta = G__23437;
v = G__23438;
start = G__23439;
end = G__23440;
__hash = G__23441;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj23448 = {};
return obj23448;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__23456 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__23457 = (level - (5));
node = G__23456;
level = G__23457;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__23461 = null;
var G__23461__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23461__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23461 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23461__2.call(this,self__,k);
case 3:
return G__23461__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23461.cljs$core$IFn$_invoke$arity$2 = G__23461__2;
G__23461.cljs$core$IFn$_invoke$arity$3 = G__23461__3;
return G__23461;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args23458){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23458)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12590__auto__ = self__.__hash;
if(!((h__12590__auto__ == null))){
return h__12590__auto__;
} else {
var h__12590__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12590__auto____$1;

return h__12590__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12590__auto__ = self__.__hash;
if(!((h__12590__auto__ == null))){
return h__12590__auto__;
} else {
var h__12590__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12590__auto____$1;

return h__12590__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__12169__auto__ = self__.front;
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__12169__auto__ = self__.rear;
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__23462 = (i + incr);
i = G__23462;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__23463 = (i + (1));
var G__23464 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__23463;
out = G__23464;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj23468 = {};
return obj23468;
})();
var l = ks.length;
var i_23469 = (0);
while(true){
if((i_23469 < l)){
var k_23470 = (ks[i_23469]);
(new_obj[k_23470] = (obj[k_23470]));

var G__23471 = (i_23469 + (1));
i_23469 = G__23471;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__12157__auto__ = (function (){var G__23475 = k;
return goog.isString(G__23475);
})();
if(cljs.core.truth_(and__12157__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__12157__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__23476 = init__$1;
var G__23477 = k;
var G__23478 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23476,G__23477,G__23478) : f.call(null,G__23476,G__23477,G__23478));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23479 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23479) : cljs.core.deref.call(null,G__23479));
} else {
var G__23485 = cljs.core.rest(keys__$1);
var G__23486 = init__$2;
keys__$1 = G__23485;
init__$1 = G__23486;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12590__auto__ = self__.__hash;
if(!((h__12590__auto__ == null))){
return h__12590__auto__;
} else {
var h__12590__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__12590__auto____$1;

return h__12590__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__12157__auto__ = (function (){var G__23481 = k;
return goog.isString(G__23481);
})();
if(cljs.core.truth_(and__12157__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__12157__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__23482 = k;
return goog.isString(G__23482);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__12157__auto__ = (function (){var G__23484 = k;
return goog.isString(G__23484);
})();
if(cljs.core.truth_(and__12157__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__12157__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__23472_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__23472_SHARP_,(self__.strobj[p1__23472_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__23487 = null;
var G__23487__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23487__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23487 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23487__2.call(this,self__,k);
case 3:
return G__23487__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23487.cljs$core$IFn$_invoke$arity$2 = G__23487__2;
G__23487.cljs$core$IFn$_invoke$arity$3 = G__23487__3;
return G__23487;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args23473){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23473)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj23489 = {};
return obj23489;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__23490 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23490,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23490,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__23491 = (i + (2));
i = G__23491;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__23492 = (i + (2));
i = G__23492;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__23493 = (i + (2));
i = G__23493;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__23494 = (i + (2));
i = G__23494;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__23495 = (i + (2));
i = G__23495;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__12169__auto__ = (function (){var G__23499 = k;
return goog.isString(G__23499);
})();
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_23500 = (0);
while(true){
if((i_23500 < l)){
(narr[i_23500] = (arr[i_23500]));

var G__23501 = (i_23500 + (1));
i_23500 = G__23501;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__23503 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__23503) : cljs.core.keys.call(null,G__23503));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__23504 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__23504) : cljs.core.vals.call(null,G__23504));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__23505 = cljs.core.seq(coll);
var chunk__23506 = null;
var count__23507 = (0);
var i__23508 = (0);
while(true){
if((i__23508 < count__23507)){
var vec__23509 = chunk__23506.cljs$core$IIndexed$_nth$arity$2(null,i__23508);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23509,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23509,(1),null);
var G__23510_23523 = v;
var G__23511_23524 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23510_23523,G__23511_23524) : f.call(null,G__23510_23523,G__23511_23524));

var G__23525 = seq__23505;
var G__23526 = chunk__23506;
var G__23527 = count__23507;
var G__23528 = (i__23508 + (1));
seq__23505 = G__23525;
chunk__23506 = G__23526;
count__23507 = G__23527;
i__23508 = G__23528;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23505);
if(temp__4126__auto__){
var seq__23505__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23505__$1)){
var c__12956__auto__ = cljs.core.chunk_first(seq__23505__$1);
var G__23529 = cljs.core.chunk_rest(seq__23505__$1);
var G__23530 = c__12956__auto__;
var G__23531 = cljs.core.count(c__12956__auto__);
var G__23532 = (0);
seq__23505 = G__23529;
chunk__23506 = G__23530;
count__23507 = G__23531;
i__23508 = G__23532;
continue;
} else {
var vec__23512 = cljs.core.first(seq__23505__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23512,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23512,(1),null);
var G__23513_23533 = v;
var G__23514_23534 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23513_23533,G__23514_23534) : f.call(null,G__23513_23533,G__23514_23534));

var G__23535 = cljs.core.next(seq__23505__$1);
var G__23536 = null;
var G__23537 = (0);
var G__23538 = (0);
seq__23505 = G__23535;
chunk__23506 = G__23536;
count__23507 = G__23537;
i__23508 = G__23538;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__23515 = init__$1;
var G__23516 = (self__.arr[i]);
var G__23517 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23515,G__23516,G__23517) : f.call(null,G__23515,G__23516,G__23517));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23518 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23518) : cljs.core.deref.call(null,G__23518));
} else {
var G__23539 = (i + (2));
var G__23540 = init__$2;
i = G__23539;
init__$1 = G__23540;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12590__auto__ = self__.__hash;
if(!((h__12590__auto__ == null))){
return h__12590__auto__;
} else {
var h__12590__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__12590__auto____$1;

return h__12590__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__23519 = other;
if(G__23519){
var bit__12843__auto__ = (G__23519.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__12843__auto__) || (G__23519.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__23541 = (i + (2));
i = G__23541;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj23521 = {};
return obj23521;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__23542 = (s + (2));
var G__23543 = d;
s = G__23542;
d = G__23543;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__23544 = (s + (2));
var G__23545 = (d + (2));
s = G__23544;
d = G__23545;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__23522 = cljs.core.aclone(self__.arr);
(G__23522[(idx + (1))] = v);

return G__23522;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__23546 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__23547 = cljs.core.next(es);
ret = G__23546;
es = G__23547;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__23548 = null;
var G__23548__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23548__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23548 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23548__2.call(this,self__,k);
case 3:
return G__23548__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23548.cljs$core$IFn$_invoke$arity$2 = G__23548__2;
G__23548.cljs$core$IFn$_invoke$arity$3 = G__23548__3;
return G__23548;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args23502){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23502)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__23549 = (i + (2));
var G__23550 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__23549;
ret = G__23550;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__23551_23559 = self__.arr;
G__23551_23559.pop();

G__23551_23559.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__23552 = self__.len;
var G__23553 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__23552,G__23553) : cljs.core.array__GT_transient_hash_map.call(null,G__23552,G__23553));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__23554 = o;
if(G__23554){
var bit__12850__auto__ = (G__23554.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__12850__auto__) || (G__23554.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__23554.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__23554);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__23554);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__23555 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__23555) : cljs.core.key.call(null,G__23555));
})(),(function (){var G__23556 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__23556) : cljs.core.val.call(null,G__23556));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__23560 = cljs.core.next(es);
var G__23561 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__23557 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__23557) : cljs.core.key.call(null,G__23557));
})(),(function (){var G__23558 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__23558) : cljs.core.val.call(null,G__23558));
})());
es = G__23560;
tcoll__$2 = G__23561;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__23562 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__23563 = (i + (2));
out = G__23562;
i = G__23563;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__23566 = cljs.core.aclone(arr);
(G__23566[i] = a);

return G__23566;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__23567 = cljs.core.aclone(arr);
(G__23567[i] = a);

(G__23567[j] = b);

return G__23567;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__23572 = init__$1;
var G__23573 = k;
var G__23574 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23572,G__23573,G__23574) : f.call(null,G__23572,G__23573,G__23574));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23575 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23575) : cljs.core.deref.call(null,G__23575));
} else {
var G__23576 = (i + (2));
var G__23577 = init__$2;
i = G__23576;
init__$1 = G__23577;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__23578 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__23578) : cljs.core.create_inode_seq.call(null,G__23578));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_23592 = (0);
var j_23593 = (0);
while(true){
if((i_23592 < (32))){
if((((self__.bitmap >>> i_23592) & (1)) === (0))){
var G__23594 = (i_23592 + (1));
var G__23595 = j_23593;
i_23592 = G__23594;
j_23593 = G__23595;
continue;
} else {
(nodes[i_23592] = ((!(((self__.arr[j_23593]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_23593])),(self__.arr[j_23593]),(self__.arr[(j_23593 + (1))]),added_leaf_QMARK_):(self__.arr[(j_23593 + (1))])));

var G__23596 = (i_23592 + (1));
var G__23597 = (j_23593 + (2));
i_23592 = G__23596;
j_23593 = G__23597;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__23579 = edit__$1;
var G__23580 = (shift + (5));
var G__23581 = key_or_nil;
var G__23582 = val_or_node;
var G__23583 = hash;
var G__23584 = key;
var G__23585 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__23579,G__23580,G__23581,G__23582,G__23583,G__23584,G__23585) : cljs.core.create_node.call(null,G__23579,G__23580,G__23581,G__23582,G__23583,G__23584,G__23585));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_23598 = (0);
var j_23599 = (0);
while(true){
if((i_23598 < (32))){
if((((self__.bitmap >>> i_23598) & (1)) === (0))){
var G__23600 = (i_23598 + (1));
var G__23601 = j_23599;
i_23598 = G__23600;
j_23599 = G__23601;
continue;
} else {
(nodes[i_23598] = ((!(((self__.arr[j_23599]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_23599])),(self__.arr[j_23599]),(self__.arr[(j_23599 + (1))]),added_leaf_QMARK_):(self__.arr[(j_23599 + (1))])));

var G__23602 = (i_23598 + (1));
var G__23603 = (j_23599 + (2));
i_23598 = G__23602;
j_23599 = G__23603;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__23586 = (shift + (5));
var G__23587 = key_or_nil;
var G__23588 = val_or_node;
var G__23589 = hash;
var G__23590 = key;
var G__23591 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__23586,G__23587,G__23588,G__23589,G__23590,G__23591) : cljs.core.create_node.call(null,G__23586,G__23587,G__23588,G__23589,G__23590,G__23591));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__23604 = (i + (1));
var G__23605 = (j + (2));
var G__23606 = (bitmap | ((1) << i));
i = G__23604;
j = G__23605;
bitmap = G__23606;
continue;
} else {
var G__23607 = (i + (1));
var G__23608 = j;
var G__23609 = bitmap;
i = G__23607;
j = G__23608;
bitmap = G__23609;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__23610 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__23610) : cljs.core.create_array_node_seq.call(null,G__23610));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23611 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23611) : cljs.core.deref.call(null,G__23611));
} else {
var G__23612 = (i + (1));
var G__23613 = init__$2;
i = G__23612;
init__$1 = G__23613;
continue;
}
} else {
var G__23614 = (i + (1));
var G__23615 = init__$1;
i = G__23614;
init__$1 = G__23615;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__23616 = (i + (2));
i = G__23616;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__23617 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__23617) : cljs.core.create_inode_seq.call(null,G__23617));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12590__auto__ = self__.__hash;
if(!((h__12590__auto__ == null))){
return h__12590__auto__;
} else {
var h__12590__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12590__auto____$1;

return h__12590__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__23618 = self__.nodes;
var G__23619 = (self__.i + (2));
var G__23620 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__23618,G__23619,G__23620) : cljs.core.create_inode_seq.call(null,G__23618,G__23619,G__23620));
} else {
var G__23621 = self__.nodes;
var G__23622 = self__.i;
var G__23623 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__23621,G__23622,G__23623) : cljs.core.create_inode_seq.call(null,G__23621,G__23622,G__23623));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__23627 = (j + (2));
j = G__23627;
continue;
}
} else {
var G__23628 = (j + (2));
j = G__23628;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12590__auto__ = self__.__hash;
if(!((h__12590__auto__ == null))){
return h__12590__auto__;
} else {
var h__12590__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12590__auto____$1;

return h__12590__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__23629 = null;
var G__23630 = self__.nodes;
var G__23631 = self__.i;
var G__23632 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__23629,G__23630,G__23631,G__23632) : cljs.core.create_array_node_seq.call(null,G__23629,G__23630,G__23631,G__23632));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__23637 = (j + (1));
j = G__23637;
continue;
}
} else {
var G__23638 = (j + (1));
j = G__23638;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__23640 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__23640) : cljs.core.keys.call(null,G__23640));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__23641 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__23641) : cljs.core.vals.call(null,G__23641));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__23642 = cljs.core.seq(coll);
var chunk__23643 = null;
var count__23644 = (0);
var i__23645 = (0);
while(true){
if((i__23645 < count__23644)){
var vec__23646 = chunk__23643.cljs$core$IIndexed$_nth$arity$2(null,i__23645);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23646,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23646,(1),null);
var G__23647_23658 = v;
var G__23648_23659 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23647_23658,G__23648_23659) : f.call(null,G__23647_23658,G__23648_23659));

var G__23660 = seq__23642;
var G__23661 = chunk__23643;
var G__23662 = count__23644;
var G__23663 = (i__23645 + (1));
seq__23642 = G__23660;
chunk__23643 = G__23661;
count__23644 = G__23662;
i__23645 = G__23663;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23642);
if(temp__4126__auto__){
var seq__23642__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23642__$1)){
var c__12956__auto__ = cljs.core.chunk_first(seq__23642__$1);
var G__23664 = cljs.core.chunk_rest(seq__23642__$1);
var G__23665 = c__12956__auto__;
var G__23666 = cljs.core.count(c__12956__auto__);
var G__23667 = (0);
seq__23642 = G__23664;
chunk__23643 = G__23665;
count__23644 = G__23666;
i__23645 = G__23667;
continue;
} else {
var vec__23649 = cljs.core.first(seq__23642__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23649,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23649,(1),null);
var G__23650_23668 = v;
var G__23651_23669 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23650_23668,G__23651_23669) : f.call(null,G__23650_23668,G__23651_23669));

var G__23670 = cljs.core.next(seq__23642__$1);
var G__23671 = null;
var G__23672 = (0);
var G__23673 = (0);
seq__23642 = G__23670;
chunk__23643 = G__23671;
count__23644 = G__23672;
i__23645 = G__23673;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__23652 = init;
var G__23653 = null;
var G__23654 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23652,G__23653,G__23654) : f.call(null,G__23652,G__23653,G__23654));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__23655 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23655) : cljs.core.deref.call(null,G__23655));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12590__auto__ = self__.__hash;
if(!((h__12590__auto__ == null))){
return h__12590__auto__;
} else {
var h__12590__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__12590__auto____$1;

return h__12590__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj23657 = {};
return obj23657;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__23674 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__23675 = cljs.core.next(es);
ret = G__23674;
es = G__23675;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__23676 = null;
var G__23676__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23676__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23676 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23676__2.call(this,self__,k);
case 3:
return G__23676__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23676.cljs$core$IFn$_invoke$arity$2 = G__23676__2;
G__23676.cljs$core$IFn$_invoke$arity$3 = G__23676__3;
return G__23676;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args23639){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23639)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__23677 = (i + (2));
var G__23678 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__23677;
ret = G__23678;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__23679 = (i + (1));
var G__23680 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__23679;
out = G__23680;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__23681 = o;
if(G__23681){
var bit__12850__auto__ = (G__23681.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__12850__auto__) || (G__23681.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__23681.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__23681);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__23681);
}
})()){
return tcoll.assoc_BANG_((function (){var G__23682 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__23682) : cljs.core.key.call(null,G__23682));
})(),(function (){var G__23683 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__23683) : cljs.core.val.call(null,G__23683));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__23686 = cljs.core.next(es);
var G__23687 = tcoll__$1.assoc_BANG_((function (){var G__23684 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__23684) : cljs.core.key.call(null,G__23684));
})(),(function (){var G__23685 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__23685) : cljs.core.val.call(null,G__23685));
})());
es = G__23686;
tcoll__$1 = G__23687;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__23688 = ((ascending_QMARK_)?t.left:t.right);
var G__23689 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__23688;
stack__$1 = G__23689;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12590__auto__ = self__.__hash;
if(!((h__12590__auto__ == null))){
return h__12590__auto__;
} else {
var h__12590__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12590__auto____$1;

return h__12590__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__23702 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23702) : cljs.core.deref.call(null,G__23702));
} else {
var init__$2 = (function (){var G__23703 = init__$1;
var G__23704 = node.key;
var G__23705 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23703,G__23704,G__23705) : f.call(null,G__23703,G__23704,G__23705));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23706 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23706) : cljs.core.deref.call(null,G__23706));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__23707 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23707) : cljs.core.deref.call(null,G__23707));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12590__auto__ = self__.__hash;
if(!((h__12590__auto__ == null))){
return h__12590__auto__;
} else {
var h__12590__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12590__auto____$1;

return h__12590__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__23709 = null;
var G__23709__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23709__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23709 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23709__2.call(this,self__,k);
case 3:
return G__23709__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23709.cljs$core$IFn$_invoke$arity$2 = G__23709__2;
G__23709.cljs$core$IFn$_invoke$arity$3 = G__23709__3;
return G__23709;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args23708){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23708)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12590__auto__ = self__.__hash;
if(!((h__12590__auto__ == null))){
return h__12590__auto__;
} else {
var h__12590__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12590__auto____$1;

return h__12590__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__23711 = null;
var G__23711__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23711__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23711 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23711__2.call(this,self__,k);
case 3:
return G__23711__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23711.cljs$core$IFn$_invoke$arity$2 = G__23711__2;
G__23711.cljs$core$IFn$_invoke$arity$3 = G__23711__3;
return G__23711;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args23710){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23710)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__23724 = k;
var G__23725 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__23724,G__23725) : comp.call(null,G__23724,G__23725));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__23744 = k;
var G__23745 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__23744,G__23745) : comp.call(null,G__23744,G__23745));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__23756 = k;
var G__23757 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__23756,G__23757) : comp.call(null,G__23756,G__23757));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__23759 = cljs.core.seq(coll);
var chunk__23760 = null;
var count__23761 = (0);
var i__23762 = (0);
while(true){
if((i__23762 < count__23761)){
var vec__23763 = chunk__23760.cljs$core$IIndexed$_nth$arity$2(null,i__23762);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23763,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23763,(1),null);
var G__23764_23776 = v;
var G__23765_23777 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23764_23776,G__23765_23777) : f.call(null,G__23764_23776,G__23765_23777));

var G__23778 = seq__23759;
var G__23779 = chunk__23760;
var G__23780 = count__23761;
var G__23781 = (i__23762 + (1));
seq__23759 = G__23778;
chunk__23760 = G__23779;
count__23761 = G__23780;
i__23762 = G__23781;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23759);
if(temp__4126__auto__){
var seq__23759__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23759__$1)){
var c__12956__auto__ = cljs.core.chunk_first(seq__23759__$1);
var G__23782 = cljs.core.chunk_rest(seq__23759__$1);
var G__23783 = c__12956__auto__;
var G__23784 = cljs.core.count(c__12956__auto__);
var G__23785 = (0);
seq__23759 = G__23782;
chunk__23760 = G__23783;
count__23761 = G__23784;
i__23762 = G__23785;
continue;
} else {
var vec__23766 = cljs.core.first(seq__23759__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23766,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23766,(1),null);
var G__23767_23786 = v;
var G__23768_23787 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23767_23786,G__23768_23787) : f.call(null,G__23767_23786,G__23768_23787));

var G__23788 = cljs.core.next(seq__23759__$1);
var G__23789 = null;
var G__23790 = (0);
var G__23791 = (0);
seq__23759 = G__23788;
chunk__23760 = G__23789;
count__23761 = G__23790;
i__23762 = G__23791;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__23769 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__23769) : cljs.core.keys.call(null,G__23769));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__23770 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__23770) : cljs.core.vals.call(null,G__23770));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__23771 = k;
var G__23772 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__23771,G__23772) : self__.comp.call(null,G__23771,G__23772));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__23792 = t.left;
t = G__23792;
continue;
} else {
var G__23793 = t.right;
t = G__23793;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12590__auto__ = self__.__hash;
if(!((h__12590__auto__ == null))){
return h__12590__auto__;
} else {
var h__12590__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__12590__auto____$1;

return h__12590__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__23794 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__23795 = cljs.core.next(es);
ret = G__23794;
es = G__23795;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__23796 = null;
var G__23796__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23796__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23796 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23796__2.call(this,self__,k);
case 3:
return G__23796__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23796.cljs$core$IFn$_invoke$arity$2 = G__23796__2;
G__23796.cljs$core$IFn$_invoke$arity$3 = G__23796__3;
return G__23796;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args23758){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23758)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__23773 = k;
var G__23774 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__23773,G__23774) : self__.comp.call(null,G__23773,G__23774));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__23797 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__23798 = t.left;
stack = G__23797;
t = G__23798;
continue;
} else {
var G__23799 = stack;
var G__23800 = t.right;
stack = G__23799;
t = G__23800;
continue;
}
} else {
if((c > (0))){
var G__23801 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__23802 = t.right;
stack = G__23801;
t = G__23802;
continue;
} else {
var G__23803 = stack;
var G__23804 = t.left;
stack = G__23803;
t = G__23804;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__23775 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__23775) : cljs.core.key.call(null,G__23775));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__23805 = cljs.core.nnext(in$);
var G__23806 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__23805;
out = G__23806;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__23807__i = 0, G__23807__a = new Array(arguments.length -  0);
while (G__23807__i < G__23807__a.length) {G__23807__a[G__23807__i] = arguments[G__23807__i + 0]; ++G__23807__i;}
  keyvals = new cljs.core.IndexedSeq(G__23807__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__23808){
var keyvals = cljs.core.seq(arglist__23808);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__23809__i = 0, G__23809__a = new Array(arguments.length -  0);
while (G__23809__i < G__23809__a.length) {G__23809__a[G__23809__i] = arguments[G__23809__i + 0]; ++G__23809__i;}
  keyvals = new cljs.core.IndexedSeq(G__23809__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__23810){
var keyvals = cljs.core.seq(arglist__23810);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj23814 = {};
return obj23814;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__23815 = cljs.core.nnext(kvs);
kvs = G__23815;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__23816__i = 0, G__23816__a = new Array(arguments.length -  0);
while (G__23816__i < G__23816__a.length) {G__23816__a[G__23816__i] = arguments[G__23816__i + 0]; ++G__23816__i;}
  keyvals = new cljs.core.IndexedSeq(G__23816__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__23817){
var keyvals = cljs.core.seq(arglist__23817);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__23818 = cljs.core.nnext(in$);
var G__23819 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__23818;
out = G__23819;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__23820__i = 0, G__23820__a = new Array(arguments.length -  0);
while (G__23820__i < G__23820__a.length) {G__23820__a[G__23820__i] = arguments[G__23820__i + 0]; ++G__23820__i;}
  keyvals = new cljs.core.IndexedSeq(G__23820__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__23821){
var keyvals = cljs.core.seq(arglist__23821);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__23822 = cljs.core.nnext(in$);
var G__23823 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__23822;
out = G__23823;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__23824__i = 0, G__23824__a = new Array(arguments.length -  1);
while (G__23824__i < G__23824__a.length) {G__23824__a[G__23824__i] = arguments[G__23824__i + 1]; ++G__23824__i;}
  keyvals = new cljs.core.IndexedSeq(G__23824__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__23825){
var comparator = cljs.core.first(arglist__23825);
var keyvals = cljs.core.rest(arglist__23825);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__23826 = self__.mseq;
if(G__23826){
var bit__12850__auto__ = (G__23826.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__12850__auto__) || (G__23826.cljs$core$INext$)){
return true;
} else {
if((!G__23826.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__23826);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__23826);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__23827 = self__.mseq;
if(G__23827){
var bit__12850__auto__ = (G__23827.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__12850__auto__) || (G__23827.cljs$core$INext$)){
return true;
} else {
if((!G__23827.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__23827);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__23827);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__23828 = self__.mseq;
if(G__23828){
var bit__12850__auto__ = (G__23828.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__12850__auto__) || (G__23828.cljs$core$INext$)){
return true;
} else {
if((!G__23828.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__23828);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__23828);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__23829 = self__.mseq;
if(G__23829){
var bit__12850__auto__ = (G__23829.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__12850__auto__) || (G__23829.cljs$core$INext$)){
return true;
} else {
if((!G__23829.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__23829);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__23829);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__23830_SHARP_,p2__23831_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__12169__auto__ = p1__23830_SHARP_;
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__23831_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__23832__i = 0, G__23832__a = new Array(arguments.length -  0);
while (G__23832__i < G__23832__a.length) {G__23832__a[G__23832__i] = arguments[G__23832__i + 0]; ++G__23832__i;}
  maps = new cljs.core.IndexedSeq(G__23832__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__23833){
var maps = cljs.core.seq(arglist__23833);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23836 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23837 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23836,G__23837) : f.call(null,G__23836,G__23837));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__12169__auto__ = m1;
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__23838__i = 0, G__23838__a = new Array(arguments.length -  1);
while (G__23838__i < G__23838__a.length) {G__23838__a[G__23838__i] = arguments[G__23838__i + 1]; ++G__23838__i;}
  maps = new cljs.core.IndexedSeq(G__23838__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__23839){
var f = cljs.core.first(arglist__23839);
var maps = cljs.core.rest(arglist__23839);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__23840 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__23841 = cljs.core.next(keys);
ret = G__23840;
keys = G__23841;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__23844 = cljs.core.seq(coll);
var chunk__23845 = null;
var count__23846 = (0);
var i__23847 = (0);
while(true){
if((i__23847 < count__23846)){
var vec__23848 = chunk__23845.cljs$core$IIndexed$_nth$arity$2(null,i__23847);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23848,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23848,(1),null);
var G__23849_23854 = v;
var G__23850_23855 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23849_23854,G__23850_23855) : f.call(null,G__23849_23854,G__23850_23855));

var G__23856 = seq__23844;
var G__23857 = chunk__23845;
var G__23858 = count__23846;
var G__23859 = (i__23847 + (1));
seq__23844 = G__23856;
chunk__23845 = G__23857;
count__23846 = G__23858;
i__23847 = G__23859;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23844);
if(temp__4126__auto__){
var seq__23844__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23844__$1)){
var c__12956__auto__ = cljs.core.chunk_first(seq__23844__$1);
var G__23860 = cljs.core.chunk_rest(seq__23844__$1);
var G__23861 = c__12956__auto__;
var G__23862 = cljs.core.count(c__12956__auto__);
var G__23863 = (0);
seq__23844 = G__23860;
chunk__23845 = G__23861;
count__23846 = G__23862;
i__23847 = G__23863;
continue;
} else {
var vec__23851 = cljs.core.first(seq__23844__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23851,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23851,(1),null);
var G__23852_23864 = v;
var G__23853_23865 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23852_23864,G__23853_23865) : f.call(null,G__23852_23864,G__23853_23865));

var G__23866 = cljs.core.next(seq__23844__$1);
var G__23867 = null;
var G__23868 = (0);
var G__23869 = (0);
seq__23844 = G__23866;
chunk__23845 = G__23867;
count__23846 = G__23868;
i__23847 = G__23869;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12590__auto__ = self__.__hash;
if(!((h__12590__auto__ == null))){
return h__12590__auto__;
} else {
var h__12590__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__12590__auto____$1;

return h__12590__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__23842_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__23842_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__23870 = null;
var G__23870__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23870__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23870 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23870__2.call(this,self__,k);
case 3:
return G__23870__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23870.cljs$core$IFn$_invoke$arity$2 = G__23870__2;
G__23870.cljs$core$IFn$_invoke$arity$3 = G__23870__3;
return G__23870;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args23843){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23843)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__23871 = (i + (1));
var G__23872 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__23871;
out = G__23872;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__23873 = (i + (1));
var G__23874 = cljs.core._conj_BANG_(out,(items[i]));
i = G__23873;
out = G__23874;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__23876 = null;
var G__23876__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__23876__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__23876 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23876__2.call(this,self__,k);
case 3:
return G__23876__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23876.cljs$core$IFn$_invoke$arity$2 = G__23876__2;
G__23876.cljs$core$IFn$_invoke$arity$3 = G__23876__3;
return G__23876;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args23875){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23875)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__23879 = cljs.core.seq(coll);
var chunk__23880 = null;
var count__23881 = (0);
var i__23882 = (0);
while(true){
if((i__23882 < count__23881)){
var vec__23883 = chunk__23880.cljs$core$IIndexed$_nth$arity$2(null,i__23882);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23883,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23883,(1),null);
var G__23884_23889 = v;
var G__23885_23890 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23884_23889,G__23885_23890) : f.call(null,G__23884_23889,G__23885_23890));

var G__23891 = seq__23879;
var G__23892 = chunk__23880;
var G__23893 = count__23881;
var G__23894 = (i__23882 + (1));
seq__23879 = G__23891;
chunk__23880 = G__23892;
count__23881 = G__23893;
i__23882 = G__23894;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23879);
if(temp__4126__auto__){
var seq__23879__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23879__$1)){
var c__12956__auto__ = cljs.core.chunk_first(seq__23879__$1);
var G__23895 = cljs.core.chunk_rest(seq__23879__$1);
var G__23896 = c__12956__auto__;
var G__23897 = cljs.core.count(c__12956__auto__);
var G__23898 = (0);
seq__23879 = G__23895;
chunk__23880 = G__23896;
count__23881 = G__23897;
i__23882 = G__23898;
continue;
} else {
var vec__23886 = cljs.core.first(seq__23879__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23886,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23886,(1),null);
var G__23887_23899 = v;
var G__23888_23900 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23887_23899,G__23888_23900) : f.call(null,G__23887_23899,G__23888_23900));

var G__23901 = cljs.core.next(seq__23879__$1);
var G__23902 = null;
var G__23903 = (0);
var G__23904 = (0);
seq__23879 = G__23901;
chunk__23880 = G__23902;
count__23881 = G__23903;
i__23882 = G__23904;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12590__auto__ = self__.__hash;
if(!((h__12590__auto__ == null))){
return h__12590__auto__;
} else {
var h__12590__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__12590__auto____$1;

return h__12590__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__23877_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__23877_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__23905 = null;
var G__23905__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23905__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23905 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23905__2.call(this,self__,k);
case 3:
return G__23905__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23905.cljs$core$IFn$_invoke$arity$2 = G__23905__2;
G__23905.cljs$core$IFn$_invoke$arity$3 = G__23905__3;
return G__23905;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args23878){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23878)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__13050__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__13050__auto__.length)){
var G__23906 = (i + (1));
var G__23907 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__23906;
res = G__23907;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__23908 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__23909 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__23908;
out = G__23909;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__23910__delegate = function (keys){
return cljs.core.set(keys);
};
var G__23910 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__23911__i = 0, G__23911__a = new Array(arguments.length -  0);
while (G__23911__i < G__23911__a.length) {G__23911__a[G__23911__i] = arguments[G__23911__i + 0]; ++G__23911__i;}
  keys = new cljs.core.IndexedSeq(G__23911__a,0);
} 
return G__23910__delegate.call(this,keys);};
G__23910.cljs$lang$maxFixedArity = 0;
G__23910.cljs$lang$applyTo = (function (arglist__23912){
var keys = cljs.core.seq(arglist__23912);
return G__23910__delegate(keys);
});
G__23910.cljs$core$IFn$_invoke$arity$variadic = G__23910__delegate;
return G__23910;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__23913 = null;
if (arguments.length > 0) {
var G__23914__i = 0, G__23914__a = new Array(arguments.length -  0);
while (G__23914__i < G__23914__a.length) {G__23914__a[G__23914__i] = arguments[G__23914__i + 0]; ++G__23914__i;}
G__23913 = new cljs.core.IndexedSeq(G__23914__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__23913);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__23915__i = 0, G__23915__a = new Array(arguments.length -  0);
while (G__23915__i < G__23915__a.length) {G__23915__a[G__23915__i] = arguments[G__23915__i + 0]; ++G__23915__i;}
  keys = new cljs.core.IndexedSeq(G__23915__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__23916){
var keys = cljs.core.seq(arglist__23916);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__23917__i = 0, G__23917__a = new Array(arguments.length -  1);
while (G__23917__i < G__23917__a.length) {G__23917__a[G__23917__i] = arguments[G__23917__i + 1]; ++G__23917__i;}
  keys = new cljs.core.IndexedSeq(G__23917__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__23918){
var comparator = cljs.core.first(arglist__23918);
var keys = cljs.core.rest(arglist__23918);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__23919_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__23919_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__23919_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__23920_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__23920_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__23920_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__23941 = null;
var G__23941__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23941__1 = (function (result){
var G__23931 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23931) : rf.call(null,G__23931));
});
var G__23941__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__23932 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23932) : cljs.core.deref.call(null,G__23932));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__23933 = result;
var G__23934 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23933,G__23934) : rf.call(null,G__23933,G__23934));
}
});
G__23941 = function(result,input){
switch(arguments.length){
case 0:
return G__23941__0.call(this);
case 1:
return G__23941__1.call(this,result);
case 2:
return G__23941__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23941.cljs$core$IFn$_invoke$arity$0 = G__23941__0;
G__23941.cljs$core$IFn$_invoke$arity$1 = G__23941__1;
G__23941.cljs$core$IFn$_invoke$arity$2 = G__23941__2;
return G__23941;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__23939,seen__$1){
while(true){
var vec__23940 = p__23939;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23940,(0),null);
var xs__$1 = vec__23940;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__23942 = cljs.core.rest(s);
var G__23943 = seen__$1;
p__23939 = G__23942;
seen__$1 = G__23943;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__23944 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__23945 = cljs.core.next(s__$1);
ret = G__23944;
s__$1 = G__23945;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__23947 = x;
if(G__23947){
var bit__12843__auto__ = (G__23947.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__12843__auto__) || (G__23947.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__23948 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__23949 = cljs.core.next(ks);
var G__23950 = cljs.core.next(vs);
map = G__23948;
ks = G__23949;
vs = G__23950;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__23961 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__23961) : k.call(null,G__23961));
})() > (function (){var G__23962 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__23962) : k.call(null,G__23962));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__23963__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__23951_SHARP_,p2__23952_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__23951_SHARP_,p2__23952_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__23963 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__23964__i = 0, G__23964__a = new Array(arguments.length -  3);
while (G__23964__i < G__23964__a.length) {G__23964__a[G__23964__i] = arguments[G__23964__i + 3]; ++G__23964__i;}
  more = new cljs.core.IndexedSeq(G__23964__a,0);
} 
return G__23963__delegate.call(this,k,x,y,more);};
G__23963.cljs$lang$maxFixedArity = 3;
G__23963.cljs$lang$applyTo = (function (arglist__23965){
var k = cljs.core.first(arglist__23965);
arglist__23965 = cljs.core.next(arglist__23965);
var x = cljs.core.first(arglist__23965);
arglist__23965 = cljs.core.next(arglist__23965);
var y = cljs.core.first(arglist__23965);
var more = cljs.core.rest(arglist__23965);
return G__23963__delegate(k,x,y,more);
});
G__23963.cljs$core$IFn$_invoke$arity$variadic = G__23963__delegate;
return G__23963;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__23966 = null;
if (arguments.length > 3) {
var G__23967__i = 0, G__23967__a = new Array(arguments.length -  3);
while (G__23967__i < G__23967__a.length) {G__23967__a[G__23967__i] = arguments[G__23967__i + 3]; ++G__23967__i;}
G__23966 = new cljs.core.IndexedSeq(G__23967__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__23966);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__23978 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__23978) : k.call(null,G__23978));
})() < (function (){var G__23979 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__23979) : k.call(null,G__23979));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__23980__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__23968_SHARP_,p2__23969_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__23968_SHARP_,p2__23969_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__23980 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__23981__i = 0, G__23981__a = new Array(arguments.length -  3);
while (G__23981__i < G__23981__a.length) {G__23981__a[G__23981__i] = arguments[G__23981__i + 3]; ++G__23981__i;}
  more = new cljs.core.IndexedSeq(G__23981__a,0);
} 
return G__23980__delegate.call(this,k,x,y,more);};
G__23980.cljs$lang$maxFixedArity = 3;
G__23980.cljs$lang$applyTo = (function (arglist__23982){
var k = cljs.core.first(arglist__23982);
arglist__23982 = cljs.core.next(arglist__23982);
var x = cljs.core.first(arglist__23982);
arglist__23982 = cljs.core.next(arglist__23982);
var y = cljs.core.first(arglist__23982);
var more = cljs.core.rest(arglist__23982);
return G__23980__delegate(k,x,y,more);
});
G__23980.cljs$core$IFn$_invoke$arity$variadic = G__23980__delegate;
return G__23980;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__23983 = null;
if (arguments.length > 3) {
var G__23984__i = 0, G__23984__a = new Array(arguments.length -  3);
while (G__23984__i < G__23984__a.length) {G__23984__a[G__23984__i] = arguments[G__23984__i + 3]; ++G__23984__i;}
G__23983 = new cljs.core.IndexedSeq(G__23984__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__23983);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__24001 = null;
var G__24001__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24001__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__23996 = result;
var G__23997 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23996,G__23997) : rf.call(null,G__23996,G__23997));
})());
})());
var G__23998 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23998) : rf.call(null,G__23998));
});
var G__24001__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__23999 = result;
var G__24000 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23999,G__24000) : rf.call(null,G__23999,G__24000));
} else {
return result;
}
});
G__24001 = function(result,input){
switch(arguments.length){
case 0:
return G__24001__0.call(this);
case 1:
return G__24001__1.call(this,result);
case 2:
return G__24001__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24001.cljs$core$IFn$_invoke$arity$0 = G__24001__0;
G__24001.cljs$core$IFn$_invoke$arity$1 = G__24001__1;
G__24001.cljs$core$IFn$_invoke$arity$2 = G__24001__2;
return G__24001;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__24014 = null;
var G__24014__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24014__1 = (function (result){
var G__24009 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24009) : rf.call(null,G__24009));
});
var G__24014__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__24010 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24010) : pred.call(null,G__24010));
})())){
var G__24011 = result;
var G__24012 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24011,G__24012) : rf.call(null,G__24011,G__24012));
} else {
return cljs.core.reduced(result);
}
});
G__24014 = function(result,input){
switch(arguments.length){
case 0:
return G__24014__0.call(this);
case 1:
return G__24014__1.call(this,result);
case 2:
return G__24014__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24014.cljs$core$IFn$_invoke$arity$0 = G__24014__0;
G__24014.cljs$core$IFn$_invoke$arity$1 = G__24014__1;
G__24014.cljs$core$IFn$_invoke$arity$2 = G__24014__2;
return G__24014;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__24013 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24013) : pred.call(null,G__24013));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__24019 = (function (){var G__24021 = cljs.core._entry_key(sc,e);
var G__24022 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__24021,G__24022) : comp.call(null,G__24021,G__24022));
})();
var G__24020 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__24019,G__24020) : test.call(null,G__24019,G__24020));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__24026 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24026,(0),null);
var s = vec__24026;
if(cljs.core.truth_((function (){var G__24027 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__24027) : include.call(null,G__24027));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__24028 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24028,(0),null);
var s = vec__24028;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__24032 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24032,(0),null);
var s = vec__24032;
if(cljs.core.truth_((function (){var G__24033 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__24033) : include.call(null,G__24033));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__24034 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24034,(0),null);
var s = vec__24034;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__24035 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__24035) : Math.ceil.call(null,G__24035));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__12590__auto__ = self__.__hash;
if(!((h__12590__auto__ == null))){
return h__12590__auto__;
} else {
var h__12590__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__12590__auto____$1;

return h__12590__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__24036 = ret;
var G__24037 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24036,G__24037) : f.call(null,G__24036,G__24037));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__24038 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24038) : cljs.core.deref.call(null,G__24038));
} else {
var G__24039 = (i + self__.step);
var G__24040 = ret__$1;
i = G__24039;
ret = G__24040;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__24058 = null;
var G__24058__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24058__1 = (function (result){
var G__24055 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24055) : rf.call(null,G__24055));
});
var G__24058__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__24056 = result;
var G__24057 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24056,G__24057) : rf.call(null,G__24056,G__24057));
} else {
return result;
}
});
G__24058 = function(result,input){
switch(arguments.length){
case 0:
return G__24058__0.call(this);
case 1:
return G__24058__1.call(this,result);
case 2:
return G__24058__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24058.cljs$core$IFn$_invoke$arity$0 = G__24058__0;
G__24058.cljs$core$IFn$_invoke$arity$1 = G__24058__1;
G__24058.cljs$core$IFn$_invoke$arity$2 = G__24058__2;
return G__24058;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__24080 = null;
var G__24080__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24080__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__24071 = result;
var G__24072 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24071,G__24072) : rf.call(null,G__24071,G__24072));
})());
})());
var G__24073 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24073) : rf.call(null,G__24073));
});
var G__24080__2 = (function (result,input){
var pval = (function (){var G__24074 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24074) : cljs.core.deref.call(null,G__24074));
})();
var val = (function (){var G__24075 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24075) : f.call(null,G__24075));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__24076 = result;
var G__24077 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24076,G__24077) : rf.call(null,G__24076,G__24077));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__24080 = function(result,input){
switch(arguments.length){
case 0:
return G__24080__0.call(this);
case 1:
return G__24080__1.call(this,result);
case 2:
return G__24080__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24080.cljs$core$IFn$_invoke$arity$0 = G__24080__0;
G__24080.cljs$core$IFn$_invoke$arity$1 = G__24080__1;
G__24080.cljs$core$IFn$_invoke$arity$2 = G__24080__2;
return G__24080;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__24078 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24078) : f.call(null,G__24078));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__24059_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__24079 = p1__24059_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24079) : f.call(null,G__24079));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__24089 = init;
var G__24090 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24089,G__24090) : f.call(null,G__24089,G__24090));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__24185 = null;
var G__24185__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__24185__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24143 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24143) : f.call(null,G__24143));
})()],null));
});
var G__24185__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24144 = x;
var G__24145 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24144,G__24145) : f.call(null,G__24144,G__24145));
})()],null));
});
var G__24185__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24146 = x;
var G__24147 = y;
var G__24148 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24146,G__24147,G__24148) : f.call(null,G__24146,G__24147,G__24148));
})()],null));
});
var G__24185__4 = (function() { 
var G__24186__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__24186 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24187__i = 0, G__24187__a = new Array(arguments.length -  3);
while (G__24187__i < G__24187__a.length) {G__24187__a[G__24187__i] = arguments[G__24187__i + 3]; ++G__24187__i;}
  args = new cljs.core.IndexedSeq(G__24187__a,0);
} 
return G__24186__delegate.call(this,x,y,z,args);};
G__24186.cljs$lang$maxFixedArity = 3;
G__24186.cljs$lang$applyTo = (function (arglist__24188){
var x = cljs.core.first(arglist__24188);
arglist__24188 = cljs.core.next(arglist__24188);
var y = cljs.core.first(arglist__24188);
arglist__24188 = cljs.core.next(arglist__24188);
var z = cljs.core.first(arglist__24188);
var args = cljs.core.rest(arglist__24188);
return G__24186__delegate(x,y,z,args);
});
G__24186.cljs$core$IFn$_invoke$arity$variadic = G__24186__delegate;
return G__24186;
})()
;
G__24185 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__24185__0.call(this);
case 1:
return G__24185__1.call(this,x);
case 2:
return G__24185__2.call(this,x,y);
case 3:
return G__24185__3.call(this,x,y,z);
default:
var G__24189 = null;
if (arguments.length > 3) {
var G__24190__i = 0, G__24190__a = new Array(arguments.length -  3);
while (G__24190__i < G__24190__a.length) {G__24190__a[G__24190__i] = arguments[G__24190__i + 3]; ++G__24190__i;}
G__24189 = new cljs.core.IndexedSeq(G__24190__a,0);
}
return G__24185__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24189);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24185.cljs$lang$maxFixedArity = 3;
G__24185.cljs$lang$applyTo = G__24185__4.cljs$lang$applyTo;
G__24185.cljs$core$IFn$_invoke$arity$0 = G__24185__0;
G__24185.cljs$core$IFn$_invoke$arity$1 = G__24185__1;
G__24185.cljs$core$IFn$_invoke$arity$2 = G__24185__2;
G__24185.cljs$core$IFn$_invoke$arity$3 = G__24185__3;
G__24185.cljs$core$IFn$_invoke$arity$variadic = G__24185__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24185;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__24191 = null;
var G__24191__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__24191__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24149 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24149) : f.call(null,G__24149));
})(),(function (){var G__24150 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__24150) : g.call(null,G__24150));
})()],null));
});
var G__24191__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24151 = x;
var G__24152 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24151,G__24152) : f.call(null,G__24151,G__24152));
})(),(function (){var G__24153 = x;
var G__24154 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__24153,G__24154) : g.call(null,G__24153,G__24154));
})()],null));
});
var G__24191__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24155 = x;
var G__24156 = y;
var G__24157 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24155,G__24156,G__24157) : f.call(null,G__24155,G__24156,G__24157));
})(),(function (){var G__24158 = x;
var G__24159 = y;
var G__24160 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__24158,G__24159,G__24160) : g.call(null,G__24158,G__24159,G__24160));
})()],null));
});
var G__24191__4 = (function() { 
var G__24192__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__24192 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24193__i = 0, G__24193__a = new Array(arguments.length -  3);
while (G__24193__i < G__24193__a.length) {G__24193__a[G__24193__i] = arguments[G__24193__i + 3]; ++G__24193__i;}
  args = new cljs.core.IndexedSeq(G__24193__a,0);
} 
return G__24192__delegate.call(this,x,y,z,args);};
G__24192.cljs$lang$maxFixedArity = 3;
G__24192.cljs$lang$applyTo = (function (arglist__24194){
var x = cljs.core.first(arglist__24194);
arglist__24194 = cljs.core.next(arglist__24194);
var y = cljs.core.first(arglist__24194);
arglist__24194 = cljs.core.next(arglist__24194);
var z = cljs.core.first(arglist__24194);
var args = cljs.core.rest(arglist__24194);
return G__24192__delegate(x,y,z,args);
});
G__24192.cljs$core$IFn$_invoke$arity$variadic = G__24192__delegate;
return G__24192;
})()
;
G__24191 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__24191__0.call(this);
case 1:
return G__24191__1.call(this,x);
case 2:
return G__24191__2.call(this,x,y);
case 3:
return G__24191__3.call(this,x,y,z);
default:
var G__24195 = null;
if (arguments.length > 3) {
var G__24196__i = 0, G__24196__a = new Array(arguments.length -  3);
while (G__24196__i < G__24196__a.length) {G__24196__a[G__24196__i] = arguments[G__24196__i + 3]; ++G__24196__i;}
G__24195 = new cljs.core.IndexedSeq(G__24196__a,0);
}
return G__24191__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24195);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24191.cljs$lang$maxFixedArity = 3;
G__24191.cljs$lang$applyTo = G__24191__4.cljs$lang$applyTo;
G__24191.cljs$core$IFn$_invoke$arity$0 = G__24191__0;
G__24191.cljs$core$IFn$_invoke$arity$1 = G__24191__1;
G__24191.cljs$core$IFn$_invoke$arity$2 = G__24191__2;
G__24191.cljs$core$IFn$_invoke$arity$3 = G__24191__3;
G__24191.cljs$core$IFn$_invoke$arity$variadic = G__24191__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24191;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__24197 = null;
var G__24197__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__24197__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24161 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24161) : f.call(null,G__24161));
})(),(function (){var G__24162 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__24162) : g.call(null,G__24162));
})(),(function (){var G__24163 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__24163) : h.call(null,G__24163));
})()],null));
});
var G__24197__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24164 = x;
var G__24165 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24164,G__24165) : f.call(null,G__24164,G__24165));
})(),(function (){var G__24166 = x;
var G__24167 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__24166,G__24167) : g.call(null,G__24166,G__24167));
})(),(function (){var G__24168 = x;
var G__24169 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__24168,G__24169) : h.call(null,G__24168,G__24169));
})()],null));
});
var G__24197__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24170 = x;
var G__24171 = y;
var G__24172 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24170,G__24171,G__24172) : f.call(null,G__24170,G__24171,G__24172));
})(),(function (){var G__24173 = x;
var G__24174 = y;
var G__24175 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__24173,G__24174,G__24175) : g.call(null,G__24173,G__24174,G__24175));
})(),(function (){var G__24176 = x;
var G__24177 = y;
var G__24178 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__24176,G__24177,G__24178) : h.call(null,G__24176,G__24177,G__24178));
})()],null));
});
var G__24197__4 = (function() { 
var G__24198__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__24198 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24199__i = 0, G__24199__a = new Array(arguments.length -  3);
while (G__24199__i < G__24199__a.length) {G__24199__a[G__24199__i] = arguments[G__24199__i + 3]; ++G__24199__i;}
  args = new cljs.core.IndexedSeq(G__24199__a,0);
} 
return G__24198__delegate.call(this,x,y,z,args);};
G__24198.cljs$lang$maxFixedArity = 3;
G__24198.cljs$lang$applyTo = (function (arglist__24200){
var x = cljs.core.first(arglist__24200);
arglist__24200 = cljs.core.next(arglist__24200);
var y = cljs.core.first(arglist__24200);
arglist__24200 = cljs.core.next(arglist__24200);
var z = cljs.core.first(arglist__24200);
var args = cljs.core.rest(arglist__24200);
return G__24198__delegate(x,y,z,args);
});
G__24198.cljs$core$IFn$_invoke$arity$variadic = G__24198__delegate;
return G__24198;
})()
;
G__24197 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__24197__0.call(this);
case 1:
return G__24197__1.call(this,x);
case 2:
return G__24197__2.call(this,x,y);
case 3:
return G__24197__3.call(this,x,y,z);
default:
var G__24201 = null;
if (arguments.length > 3) {
var G__24202__i = 0, G__24202__a = new Array(arguments.length -  3);
while (G__24202__i < G__24202__a.length) {G__24202__a[G__24202__i] = arguments[G__24202__i + 3]; ++G__24202__i;}
G__24201 = new cljs.core.IndexedSeq(G__24202__a,0);
}
return G__24197__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24201);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24197.cljs$lang$maxFixedArity = 3;
G__24197.cljs$lang$applyTo = G__24197__4.cljs$lang$applyTo;
G__24197.cljs$core$IFn$_invoke$arity$0 = G__24197__0;
G__24197.cljs$core$IFn$_invoke$arity$1 = G__24197__1;
G__24197.cljs$core$IFn$_invoke$arity$2 = G__24197__2;
G__24197.cljs$core$IFn$_invoke$arity$3 = G__24197__3;
G__24197.cljs$core$IFn$_invoke$arity$variadic = G__24197__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24197;
})()
});
var juxt__4 = (function() { 
var G__24203__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__24204 = null;
var G__24204__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__24091_SHARP_,p2__24092_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24091_SHARP_,(function (){return (p2__24092_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__24092_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__24092_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__24204__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__24093_SHARP_,p2__24094_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24093_SHARP_,(function (){var G__24179 = x;
return (p2__24094_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__24094_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24179) : p2__24094_SHARP_.call(null,G__24179));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__24204__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__24095_SHARP_,p2__24096_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24095_SHARP_,(function (){var G__24180 = x;
var G__24181 = y;
return (p2__24096_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__24096_SHARP_.cljs$core$IFn$_invoke$arity$2(G__24180,G__24181) : p2__24096_SHARP_.call(null,G__24180,G__24181));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__24204__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__24097_SHARP_,p2__24098_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24097_SHARP_,(function (){var G__24182 = x;
var G__24183 = y;
var G__24184 = z;
return (p2__24098_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__24098_SHARP_.cljs$core$IFn$_invoke$arity$3(G__24182,G__24183,G__24184) : p2__24098_SHARP_.call(null,G__24182,G__24183,G__24184));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__24204__4 = (function() { 
var G__24205__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__24099_SHARP_,p2__24100_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24099_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__24100_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__24205 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24206__i = 0, G__24206__a = new Array(arguments.length -  3);
while (G__24206__i < G__24206__a.length) {G__24206__a[G__24206__i] = arguments[G__24206__i + 3]; ++G__24206__i;}
  args = new cljs.core.IndexedSeq(G__24206__a,0);
} 
return G__24205__delegate.call(this,x,y,z,args);};
G__24205.cljs$lang$maxFixedArity = 3;
G__24205.cljs$lang$applyTo = (function (arglist__24207){
var x = cljs.core.first(arglist__24207);
arglist__24207 = cljs.core.next(arglist__24207);
var y = cljs.core.first(arglist__24207);
arglist__24207 = cljs.core.next(arglist__24207);
var z = cljs.core.first(arglist__24207);
var args = cljs.core.rest(arglist__24207);
return G__24205__delegate(x,y,z,args);
});
G__24205.cljs$core$IFn$_invoke$arity$variadic = G__24205__delegate;
return G__24205;
})()
;
G__24204 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__24204__0.call(this);
case 1:
return G__24204__1.call(this,x);
case 2:
return G__24204__2.call(this,x,y);
case 3:
return G__24204__3.call(this,x,y,z);
default:
var G__24208 = null;
if (arguments.length > 3) {
var G__24209__i = 0, G__24209__a = new Array(arguments.length -  3);
while (G__24209__i < G__24209__a.length) {G__24209__a[G__24209__i] = arguments[G__24209__i + 3]; ++G__24209__i;}
G__24208 = new cljs.core.IndexedSeq(G__24209__a,0);
}
return G__24204__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24208);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24204.cljs$lang$maxFixedArity = 3;
G__24204.cljs$lang$applyTo = G__24204__4.cljs$lang$applyTo;
G__24204.cljs$core$IFn$_invoke$arity$0 = G__24204__0;
G__24204.cljs$core$IFn$_invoke$arity$1 = G__24204__1;
G__24204.cljs$core$IFn$_invoke$arity$2 = G__24204__2;
G__24204.cljs$core$IFn$_invoke$arity$3 = G__24204__3;
G__24204.cljs$core$IFn$_invoke$arity$variadic = G__24204__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24204;
})()
;})(fs__$1))
};
var G__24203 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__24210__i = 0, G__24210__a = new Array(arguments.length -  3);
while (G__24210__i < G__24210__a.length) {G__24210__a[G__24210__i] = arguments[G__24210__i + 3]; ++G__24210__i;}
  fs = new cljs.core.IndexedSeq(G__24210__a,0);
} 
return G__24203__delegate.call(this,f,g,h,fs);};
G__24203.cljs$lang$maxFixedArity = 3;
G__24203.cljs$lang$applyTo = (function (arglist__24211){
var f = cljs.core.first(arglist__24211);
arglist__24211 = cljs.core.next(arglist__24211);
var g = cljs.core.first(arglist__24211);
arglist__24211 = cljs.core.next(arglist__24211);
var h = cljs.core.first(arglist__24211);
var fs = cljs.core.rest(arglist__24211);
return G__24203__delegate(f,g,h,fs);
});
G__24203.cljs$core$IFn$_invoke$arity$variadic = G__24203__delegate;
return G__24203;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__24212 = null;
if (arguments.length > 3) {
var G__24213__i = 0, G__24213__a = new Array(arguments.length -  3);
while (G__24213__i < G__24213__a.length) {G__24213__a[G__24213__i] = arguments[G__24213__i + 3]; ++G__24213__i;}
G__24212 = new cljs.core.IndexedSeq(G__24213__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__24212);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__24214 = cljs.core.next(coll);
coll = G__24214;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__24215 = (n - (1));
var G__24216 = cljs.core.next(coll);
n = G__24215;
coll = G__24216;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__24220 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24220,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24220,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24220,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_24228 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__12169__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__24229_24235 = cljs.core.first(coll);
var G__24230_24236 = writer;
var G__24231_24237 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__24229_24235,G__24230_24236,G__24231_24237) : print_one.call(null,G__24229_24235,G__24230_24236,G__24231_24237));
} else {
}

var coll_24238__$1 = cljs.core.next(coll);
var n_24239 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_24238__$1) && (((n_24239 == null)) || (!((n_24239 === (0)))))){
cljs.core._write(writer,sep);

var G__24232_24240 = cljs.core.first(coll_24238__$1);
var G__24233_24241 = writer;
var G__24234_24242 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__24232_24240,G__24233_24241,G__24234_24242) : print_one.call(null,G__24232_24240,G__24233_24241,G__24234_24242));

var G__24243 = cljs.core.next(coll_24238__$1);
var G__24244 = (n_24239 - (1));
coll_24238__$1 = G__24243;
n_24239 = G__24244;
continue;
} else {
if((cljs.core.seq(coll_24238__$1)) && ((n_24239 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__12169__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_24228;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__24249 = cljs.core.seq(ss);
var chunk__24250 = null;
var count__24251 = (0);
var i__24252 = (0);
while(true){
if((i__24252 < count__24251)){
var s = chunk__24250.cljs$core$IIndexed$_nth$arity$2(null,i__24252);
cljs.core._write(writer,s);

var G__24253 = seq__24249;
var G__24254 = chunk__24250;
var G__24255 = count__24251;
var G__24256 = (i__24252 + (1));
seq__24249 = G__24253;
chunk__24250 = G__24254;
count__24251 = G__24255;
i__24252 = G__24256;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__24249);
if(temp__4126__auto__){
var seq__24249__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24249__$1)){
var c__12956__auto__ = cljs.core.chunk_first(seq__24249__$1);
var G__24257 = cljs.core.chunk_rest(seq__24249__$1);
var G__24258 = c__12956__auto__;
var G__24259 = cljs.core.count(c__12956__auto__);
var G__24260 = (0);
seq__24249 = G__24257;
chunk__24250 = G__24258;
count__24251 = G__24259;
i__24252 = G__24260;
continue;
} else {
var s = cljs.core.first(seq__24249__$1);
cljs.core._write(writer,s);

var G__24261 = cljs.core.next(seq__24249__$1);
var G__24262 = null;
var G__24263 = (0);
var G__24264 = (0);
seq__24249 = G__24261;
chunk__24250 = G__24262;
count__24251 = G__24263;
i__24252 = G__24264;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__24265__i = 0, G__24265__a = new Array(arguments.length -  1);
while (G__24265__i < G__24265__a.length) {G__24265__a[G__24265__i] = arguments[G__24265__i + 1]; ++G__24265__i;}
  ss = new cljs.core.IndexedSeq(G__24265__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__24266){
var writer = cljs.core.first(arglist__24266);
var ss = cljs.core.rest(arglist__24266);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj24268 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj24268;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__24271 = "[\\\\\"\b\f\n\r\t]";
var G__24272 = "g";
return RegExp(G__24271,G__24272);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__12157__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__12157__auto__)){
var and__12157__auto____$1 = (function (){var G__24286 = obj;
if(G__24286){
var bit__12850__auto__ = (G__24286.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__12850__auto__) || (G__24286.cljs$core$IMeta$)){
return true;
} else {
if((!G__24286.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__24286);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__24286);
}
})();
if(and__12157__auto____$1){
return cljs.core.meta(obj);
} else {
return and__12157__auto____$1;
}
} else {
return and__12157__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__24287_24297 = cljs.core.meta(obj);
var G__24288_24298 = writer;
var G__24289_24299 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__24287_24297,G__24288_24298,G__24289_24299) : cljs.core.pr_writer.call(null,G__24287_24297,G__24288_24298,G__24289_24299));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__24290 = obj;
if(G__24290){
var bit__12843__auto__ = (G__24290.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__12843__auto__) || (G__24290.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__24291 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__24292 = cljs.core.pr_writer;
var G__24293 = writer;
var G__24294 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__24291,G__24292,G__24293,G__24294) : cljs.core.print_map.call(null,G__24291,G__24292,G__24293,G__24294));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__24295 = obj;
return goog.isString(G__24295);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__24300 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__24300;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__24296 = obj;
if(G__24296){
var bit__12850__auto__ = (G__24296.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__12850__auto__) || (G__24296.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__24296.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__24296);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__24296);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__24304 = obj;
var G__24305 = writer;
var G__24306 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__24304,G__24305,G__24306) : alt_impl.call(null,G__24304,G__24305,G__24306));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__24311 = cljs.core.seq(cljs.core.next(objs));
var chunk__24312 = null;
var count__24313 = (0);
var i__24314 = (0);
while(true){
if((i__24314 < count__24313)){
var obj = chunk__24312.cljs$core$IIndexed$_nth$arity$2(null,i__24314);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__24315 = seq__24311;
var G__24316 = chunk__24312;
var G__24317 = count__24313;
var G__24318 = (i__24314 + (1));
seq__24311 = G__24315;
chunk__24312 = G__24316;
count__24313 = G__24317;
i__24314 = G__24318;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__24311);
if(temp__4126__auto__){
var seq__24311__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24311__$1)){
var c__12956__auto__ = cljs.core.chunk_first(seq__24311__$1);
var G__24319 = cljs.core.chunk_rest(seq__24311__$1);
var G__24320 = c__12956__auto__;
var G__24321 = cljs.core.count(c__12956__auto__);
var G__24322 = (0);
seq__24311 = G__24319;
chunk__24312 = G__24320;
count__24313 = G__24321;
i__24314 = G__24322;
continue;
} else {
var obj = cljs.core.first(seq__24311__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__24323 = cljs.core.next(seq__24311__$1);
var G__24324 = null;
var G__24325 = (0);
var G__24326 = (0);
seq__24311 = G__24323;
chunk__24312 = G__24324;
count__24313 = G__24325;
i__24314 = G__24326;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24327__i = 0, G__24327__a = new Array(arguments.length -  0);
while (G__24327__i < G__24327__a.length) {G__24327__a[G__24327__i] = arguments[G__24327__i + 0]; ++G__24327__i;}
  objs = new cljs.core.IndexedSeq(G__24327__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__24328){
var objs = cljs.core.seq(arglist__24328);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24329__i = 0, G__24329__a = new Array(arguments.length -  0);
while (G__24329__i < G__24329__a.length) {G__24329__a[G__24329__i] = arguments[G__24329__i + 0]; ++G__24329__i;}
  objs = new cljs.core.IndexedSeq(G__24329__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__24330){
var objs = cljs.core.seq(arglist__24330);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24331__i = 0, G__24331__a = new Array(arguments.length -  0);
while (G__24331__i < G__24331__a.length) {G__24331__a[G__24331__i] = arguments[G__24331__i + 0]; ++G__24331__i;}
  objs = new cljs.core.IndexedSeq(G__24331__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__24332){
var objs = cljs.core.seq(arglist__24332);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24333__i = 0, G__24333__a = new Array(arguments.length -  0);
while (G__24333__i < G__24333__a.length) {G__24333__a[G__24333__i] = arguments[G__24333__i + 0]; ++G__24333__i;}
  objs = new cljs.core.IndexedSeq(G__24333__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__24334){
var objs = cljs.core.seq(arglist__24334);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24335__i = 0, G__24335__a = new Array(arguments.length -  0);
while (G__24335__i < G__24335__a.length) {G__24335__a[G__24335__i] = arguments[G__24335__i + 0]; ++G__24335__i;}
  objs = new cljs.core.IndexedSeq(G__24335__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__24336){
var objs = cljs.core.seq(arglist__24336);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24337__i = 0, G__24337__a = new Array(arguments.length -  0);
while (G__24337__i < G__24337__a.length) {G__24337__a[G__24337__i] = arguments[G__24337__i + 0]; ++G__24337__i;}
  objs = new cljs.core.IndexedSeq(G__24337__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__24338){
var objs = cljs.core.seq(arglist__24338);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24339__i = 0, G__24339__a = new Array(arguments.length -  0);
while (G__24339__i < G__24339__a.length) {G__24339__a[G__24339__i] = arguments[G__24339__i + 0]; ++G__24339__i;}
  objs = new cljs.core.IndexedSeq(G__24339__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__24340){
var objs = cljs.core.seq(arglist__24340);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24341__i = 0, G__24341__a = new Array(arguments.length -  0);
while (G__24341__i < G__24341__a.length) {G__24341__a[G__24341__i] = arguments[G__24341__i + 0]; ++G__24341__i;}
  objs = new cljs.core.IndexedSeq(G__24341__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__24342){
var objs = cljs.core.seq(arglist__24342);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__24349_24355 = cljs.core.key(e);
var G__24350_24356 = w;
var G__24351_24357 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__24349_24355,G__24350_24356,G__24351_24357) : print_one.call(null,G__24349_24355,G__24350_24356,G__24351_24357));

cljs.core._write(w," ");

var G__24352 = cljs.core.val(e);
var G__24353 = w;
var G__24354 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__24352,G__24353,G__24354) : print_one.call(null,G__24352,G__24353,G__24354));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__24358__i = 0, G__24358__a = new Array(arguments.length -  2);
while (G__24358__i < G__24358__a.length) {G__24358__a[G__24358__i] = arguments[G__24358__i + 2]; ++G__24358__i;}
  args = new cljs.core.IndexedSeq(G__24358__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__24359){
var iref = cljs.core.first(arglist__24359);
arglist__24359 = cljs.core.next(arglist__24359);
var f = cljs.core.first(arglist__24359);
var args = cljs.core.rest(arglist__24359);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__24362 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__24362) : cljs.core.atom.call(null,G__24362));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__24364 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24364) : cljs.core.deref.call(null,G__24364));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__24365_SHARP_,p2__24366_SHARP_){
var ret = (function (){var G__24369 = p1__24365_SHARP_;
var G__24370 = p2__24366_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24369,G__24370) : rf.call(null,G__24369,G__24370));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__24373 = null;
var G__24373__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24373__1 = (function (result){
var G__24372 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24372) : rf.call(null,G__24372));
});
var G__24373__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__24373 = function(result,input){
switch(arguments.length){
case 0:
return G__24373__0.call(this);
case 1:
return G__24373__1.call(this,result);
case 2:
return G__24373__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24373.cljs$core$IFn$_invoke$arity$0 = G__24373__0;
G__24373.cljs$core$IFn$_invoke$arity$1 = G__24373__1;
G__24373.cljs$core$IFn$_invoke$arity$2 = G__24373__2;
return G__24373;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__24382 = null;
var G__24382__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24382__1 = (function (result){
var G__24378 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24378) : rf.call(null,G__24378));
});
var G__24382__2 = (function (result,input){
var prior = (function (){var G__24379 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24379) : cljs.core.deref.call(null,G__24379));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__24380 = result;
var G__24381 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24380,G__24381) : rf.call(null,G__24380,G__24381));
}
});
G__24382 = function(result,input){
switch(arguments.length){
case 0:
return G__24382__0.call(this);
case 1:
return G__24382__1.call(this,result);
case 2:
return G__24382__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24382.cljs$core$IFn$_invoke$arity$0 = G__24382__0;
G__24382.cljs$core$IFn$_invoke$arity$1 = G__24382__1;
G__24382.cljs$core$IFn$_invoke$arity$2 = G__24382__2;
return G__24382;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13147__auto__ = this;
return cljs.core.es6_iterator(this__13147__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__24384_SHARP_,p2__24383_SHARP_){
var G__24386 = p2__24383_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__24386) : proc.call(null,G__24386));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj24388 = {};
return obj24388;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__12157__auto__ = x;
if(and__12157__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__12157__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__12813__auto__ = (((x == null))?null:x);
return (function (){var or__12169__auto__ = (cljs.core._clj__GT_js[(function (){var G__24392 = x__12813__auto__;
return goog.typeOf(G__24392);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__12157__auto__ = x;
if(and__12157__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__12157__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__12813__auto__ = (((x == null))?null:x);
return (function (){var or__12169__auto__ = (cljs.core._key__GT_js[(function (){var G__24396 = x__12813__auto__;
return goog.typeOf(G__24396);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__24399 = k;
if(G__24399){
var bit__12850__auto__ = null;
if(cljs.core.truth_((function (){var or__12169__auto__ = bit__12850__auto__;
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
return G__24399.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__24399.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__24399);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__24399);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__24400 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__24400) : cljs.core.clj__GT_js.call(null,G__24400));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__24416 = x;
if(G__24416){
var bit__12850__auto__ = null;
if(cljs.core.truth_((function (){var or__12169__auto__ = bit__12850__auto__;
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
return G__24416.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__24416.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__24416);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__24416);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj24418 = {};
return obj24418;
})();
var seq__24419_24429 = cljs.core.seq(x);
var chunk__24420_24430 = null;
var count__24421_24431 = (0);
var i__24422_24432 = (0);
while(true){
if((i__24422_24432 < count__24421_24431)){
var vec__24423_24433 = chunk__24420_24430.cljs$core$IIndexed$_nth$arity$2(null,i__24422_24432);
var k_24434 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24423_24433,(0),null);
var v_24435 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24423_24433,(1),null);
(m[cljs.core.key__GT_js(k_24434)] = clj__GT_js(v_24435));

var G__24436 = seq__24419_24429;
var G__24437 = chunk__24420_24430;
var G__24438 = count__24421_24431;
var G__24439 = (i__24422_24432 + (1));
seq__24419_24429 = G__24436;
chunk__24420_24430 = G__24437;
count__24421_24431 = G__24438;
i__24422_24432 = G__24439;
continue;
} else {
var temp__4126__auto___24440 = cljs.core.seq(seq__24419_24429);
if(temp__4126__auto___24440){
var seq__24419_24441__$1 = temp__4126__auto___24440;
if(cljs.core.chunked_seq_QMARK_(seq__24419_24441__$1)){
var c__12956__auto___24442 = cljs.core.chunk_first(seq__24419_24441__$1);
var G__24443 = cljs.core.chunk_rest(seq__24419_24441__$1);
var G__24444 = c__12956__auto___24442;
var G__24445 = cljs.core.count(c__12956__auto___24442);
var G__24446 = (0);
seq__24419_24429 = G__24443;
chunk__24420_24430 = G__24444;
count__24421_24431 = G__24445;
i__24422_24432 = G__24446;
continue;
} else {
var vec__24424_24447 = cljs.core.first(seq__24419_24441__$1);
var k_24448 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24424_24447,(0),null);
var v_24449 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24424_24447,(1),null);
(m[cljs.core.key__GT_js(k_24448)] = clj__GT_js(v_24449));

var G__24450 = cljs.core.next(seq__24419_24441__$1);
var G__24451 = null;
var G__24452 = (0);
var G__24453 = (0);
seq__24419_24429 = G__24450;
chunk__24420_24430 = G__24451;
count__24421_24431 = G__24452;
i__24422_24432 = G__24453;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__24425_24454 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__24426_24455 = null;
var count__24427_24456 = (0);
var i__24428_24457 = (0);
while(true){
if((i__24428_24457 < count__24427_24456)){
var x_24458__$1 = chunk__24426_24455.cljs$core$IIndexed$_nth$arity$2(null,i__24428_24457);
arr.push(x_24458__$1);

var G__24459 = seq__24425_24454;
var G__24460 = chunk__24426_24455;
var G__24461 = count__24427_24456;
var G__24462 = (i__24428_24457 + (1));
seq__24425_24454 = G__24459;
chunk__24426_24455 = G__24460;
count__24427_24456 = G__24461;
i__24428_24457 = G__24462;
continue;
} else {
var temp__4126__auto___24463 = cljs.core.seq(seq__24425_24454);
if(temp__4126__auto___24463){
var seq__24425_24464__$1 = temp__4126__auto___24463;
if(cljs.core.chunked_seq_QMARK_(seq__24425_24464__$1)){
var c__12956__auto___24465 = cljs.core.chunk_first(seq__24425_24464__$1);
var G__24466 = cljs.core.chunk_rest(seq__24425_24464__$1);
var G__24467 = c__12956__auto___24465;
var G__24468 = cljs.core.count(c__12956__auto___24465);
var G__24469 = (0);
seq__24425_24454 = G__24466;
chunk__24426_24455 = G__24467;
count__24427_24456 = G__24468;
i__24428_24457 = G__24469;
continue;
} else {
var x_24470__$1 = cljs.core.first(seq__24425_24464__$1);
arr.push(x_24470__$1);

var G__24471 = cljs.core.next(seq__24425_24464__$1);
var G__24472 = null;
var G__24473 = (0);
var G__24474 = (0);
seq__24425_24454 = G__24471;
chunk__24426_24455 = G__24472;
count__24427_24456 = G__24473;
i__24428_24457 = G__24474;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj24476 = {};
return obj24476;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__12157__auto__ = x;
if(and__12157__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__12157__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__12813__auto__ = (((x == null))?null:x);
return (function (){var or__12169__auto__ = (cljs.core._js__GT_clj[(function (){var G__24480 = x__12813__auto__;
return goog.typeOf(G__24480);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__24537__delegate = function (x,opts){
var map__24510 = opts;
var map__24510__$1 = ((cljs.core.seq_QMARK_(map__24510))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__24510):map__24510);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24510__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__24510,map__24510__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__24526 = x__$1;
if(G__24526){
var bit__12850__auto__ = null;
if(cljs.core.truth_((function (){var or__12169__auto__ = bit__12850__auto__;
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
return G__24526.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__24526.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__24526);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__24526);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__12925__auto__ = ((function (map__24510,map__24510__$1,keywordize_keys,keyfn){
return (function iter__24527(s__24528){
return (new cljs.core.LazySeq(null,((function (map__24510,map__24510__$1,keywordize_keys,keyfn){
return (function (){
var s__24528__$1 = s__24528;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__24528__$1);
if(temp__4126__auto__){
var s__24528__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__24528__$2)){
var c__12923__auto__ = cljs.core.chunk_first(s__24528__$2);
var size__12924__auto__ = cljs.core.count(c__12923__auto__);
var b__24530 = cljs.core.chunk_buffer(size__12924__auto__);
if((function (){var i__24529 = (0);
while(true){
if((i__24529 < size__12924__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__12923__auto__,i__24529);
cljs.core.chunk_append(b__24530,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__24535 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__24535) : keyfn.call(null,G__24535));
})(),thisfn((x__$1[k]))], null));

var G__24538 = (i__24529 + (1));
i__24529 = G__24538;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__24530),iter__24527(cljs.core.chunk_rest(s__24528__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__24530),null);
}
} else {
var k = cljs.core.first(s__24528__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__24536 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__24536) : keyfn.call(null,G__24536));
})(),thisfn((x__$1[k]))], null),iter__24527(cljs.core.rest(s__24528__$2)));
}
} else {
return null;
}
break;
}
});})(map__24510,map__24510__$1,keywordize_keys,keyfn))
,null,null));
});})(map__24510,map__24510__$1,keywordize_keys,keyfn))
;
return iter__12925__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__24510,map__24510__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__24537 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__24539__i = 0, G__24539__a = new Array(arguments.length -  1);
while (G__24539__i < G__24539__a.length) {G__24539__a[G__24539__i] = arguments[G__24539__i + 1]; ++G__24539__i;}
  opts = new cljs.core.IndexedSeq(G__24539__a,0);
} 
return G__24537__delegate.call(this,x,opts);};
G__24537.cljs$lang$maxFixedArity = 1;
G__24537.cljs$lang$applyTo = (function (arglist__24540){
var x = cljs.core.first(arglist__24540);
var opts = cljs.core.rest(arglist__24540);
return G__24537__delegate(x,opts);
});
G__24537.cljs$core$IFn$_invoke$arity$variadic = G__24537__delegate;
return G__24537;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__24541 = null;
if (arguments.length > 1) {
var G__24542__i = 0, G__24542__a = new Array(arguments.length -  1);
while (G__24542__i < G__24542__a.length) {G__24542__a[G__24542__i] = arguments[G__24542__i + 1]; ++G__24542__i;}
G__24541 = new cljs.core.IndexedSeq(G__24542__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__24541);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__24545 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__24545) : cljs.core.atom.call(null,G__24545));
})();
return ((function (mem){
return (function() { 
var G__24547__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__24546 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24546) : cljs.core.deref.call(null,G__24546));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__24547 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__24548__i = 0, G__24548__a = new Array(arguments.length -  0);
while (G__24548__i < G__24548__a.length) {G__24548__a[G__24548__i] = arguments[G__24548__i + 0]; ++G__24548__i;}
  args = new cljs.core.IndexedSeq(G__24548__a,0);
} 
return G__24547__delegate.call(this,args);};
G__24547.cljs$lang$maxFixedArity = 0;
G__24547.cljs$lang$applyTo = (function (arglist__24549){
var args = cljs.core.seq(arglist__24549);
return G__24547__delegate(args);
});
G__24547.cljs$core$IFn$_invoke$arity$variadic = G__24547__delegate;
return G__24547;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__24551 = ret;
f = G__24551;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__24552__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__24552 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__24553__i = 0, G__24553__a = new Array(arguments.length -  1);
while (G__24553__i < G__24553__a.length) {G__24553__a[G__24553__i] = arguments[G__24553__i + 1]; ++G__24553__i;}
  args = new cljs.core.IndexedSeq(G__24553__a,0);
} 
return G__24552__delegate.call(this,f,args);};
G__24552.cljs$lang$maxFixedArity = 1;
G__24552.cljs$lang$applyTo = (function (arglist__24554){
var f = cljs.core.first(arglist__24554);
var args = cljs.core.rest(arglist__24554);
return G__24552__delegate(f,args);
});
G__24552.cljs$core$IFn$_invoke$arity$variadic = G__24552__delegate;
return G__24552;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__24555 = null;
if (arguments.length > 1) {
var G__24556__i = 0, G__24556__a = new Array(arguments.length -  1);
while (G__24556__i < G__24556__a.length) {G__24556__a[G__24556__i] = arguments[G__24556__i + 1]; ++G__24556__i;}
G__24555 = new cljs.core.IndexedSeq(G__24556__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__24555);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__24559 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__24559) : Math.floor.call(null,G__24559));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__24561 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24561) : f.call(null,G__24561));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__24563 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__24563) : cljs.core.atom.call(null,G__24563));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__24564__i = 0, G__24564__a = new Array(arguments.length -  1);
while (G__24564__i < G__24564__a.length) {G__24564__a[G__24564__i] = arguments[G__24564__i + 1]; ++G__24564__i;}
  args = new cljs.core.IndexedSeq(G__24564__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__24565){
var f = cljs.core.first(arglist__24565);
var args = cljs.core.rest(arglist__24565);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__24630 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24630) : cljs.core.deref.call(null,G__24630));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__12169__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
var and__12157__auto__ = cljs.core.vector_QMARK_(parent);
if(and__12157__auto__){
var and__12157__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__12157__auto____$1){
var and__12157__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__12157__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__24655 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__24653 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__24653) : child.call(null,G__24653));
})(),(function (){var G__24654 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__24654) : parent.call(null,G__24654));
})());
var G__24656 = (i + (1));
ret = G__24655;
i = G__24656;
continue;
}
break;
}
} else {
return and__12157__auto____$2;
}
} else {
return and__12157__auto____$1;
}
} else {
return and__12157__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__24660 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24660) : cljs.core.deref.call(null,G__24660));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__24664 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24664) : cljs.core.deref.call(null,G__24664));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__24668 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24668) : cljs.core.deref.call(null,G__24668));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__24677 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__24677) : targets.call(null,G__24677));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__24678 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__24678) : sources.call(null,G__24678));
})()));
});})(tp,td,ta))
;
var or__12169__auto__ = ((cljs.core.contains_QMARK_((function (){var G__24682 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__24682) : tp.call(null,G__24682));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__24683 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__24683) : ta.call(null,G__24683));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__24684 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__24684) : ta.call(null,G__24684));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__24691 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__24691) : parentMap.call(null,G__24691));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__24692 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__24692) : parentMap.call(null,G__24692));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__24685_SHARP_){
return cljs.core.cons(cljs.core.first(p1__24685_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__24685_SHARP_),cljs.core.second(p1__24685_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__24693 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__24693) : parentMap.call(null,G__24693));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__24686_SHARP_,p2__24687_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__24686_SHARP_,p2__24687_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__24696 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24696) : cljs.core.deref.call(null,G__24696));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__24697 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24697) : cljs.core.deref.call(null,G__24697));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__24713 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24713) : cljs.core.deref.call(null,G__24713));
})().call(null,x);
var or__12169__auto__ = (cljs.core.truth_((function (){var and__12157__auto__ = xprefs;
if(cljs.core.truth_(and__12157__auto__)){
var G__24715 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__24715) : xprefs.call(null,G__24715));
} else {
return and__12157__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__24716 = cljs.core.rest(ps);
ps = G__24716;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__12169__auto____$1)){
return or__12169__auto____$1;
} else {
var or__12169__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__24717 = cljs.core.rest(ps);
ps = G__24717;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__12169__auto____$2)){
return or__12169__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__12169__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__12169__auto__)){
return or__12169__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__24731){
var vec__24732 = p__24731;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24732,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24732,(1),null);
var e = vec__24732;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__24733 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24733) : cljs.core.deref.call(null,G__24733));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__12169__auto__ = (be == null);
if(or__12169__auto__){
return or__12169__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__24734 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24734) : cljs.core.deref.call(null,G__24734));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__24735 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24735) : cljs.core.deref.call(null,G__24735));
})(),(function (){var G__24736 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24736) : cljs.core.deref.call(null,G__24736));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj24738 = {};
return obj24738;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__12157__auto__ = mf;
if(and__12157__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__12157__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__12813__auto__ = (((mf == null))?null:mf);
return (function (){var or__12169__auto__ = (cljs.core._reset[(function (){var G__24742 = x__12813__auto__;
return goog.typeOf(G__24742);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._reset["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__12157__auto__ = mf;
if(and__12157__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__12157__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__12813__auto__ = (((mf == null))?null:mf);
return (function (){var or__12169__auto__ = (cljs.core._add_method[(function (){var G__24746 = x__12813__auto__;
return goog.typeOf(G__24746);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._add_method["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__12157__auto__ = mf;
if(and__12157__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__12157__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__12813__auto__ = (((mf == null))?null:mf);
return (function (){var or__12169__auto__ = (cljs.core._remove_method[(function (){var G__24750 = x__12813__auto__;
return goog.typeOf(G__24750);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._remove_method["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__12157__auto__ = mf;
if(and__12157__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__12157__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__12813__auto__ = (((mf == null))?null:mf);
return (function (){var or__12169__auto__ = (cljs.core._prefer_method[(function (){var G__24754 = x__12813__auto__;
return goog.typeOf(G__24754);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__12157__auto__ = mf;
if(and__12157__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__12157__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__12813__auto__ = (((mf == null))?null:mf);
return (function (){var or__12169__auto__ = (cljs.core._get_method[(function (){var G__24758 = x__12813__auto__;
return goog.typeOf(G__24758);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._get_method["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__12157__auto__ = mf;
if(and__12157__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__12157__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__12813__auto__ = (((mf == null))?null:mf);
return (function (){var or__12169__auto__ = (cljs.core._methods[(function (){var G__24762 = x__12813__auto__;
return goog.typeOf(G__24762);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._methods["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__12157__auto__ = mf;
if(and__12157__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__12157__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__12813__auto__ = (((mf == null))?null:mf);
return (function (){var or__12169__auto__ = (cljs.core._prefers[(function (){var G__24766 = x__12813__auto__;
return goog.typeOf(G__24766);
})()]);
if(or__12169__auto__){
return or__12169__auto__;
} else {
var or__12169__auto____$1 = (cljs.core._prefers["_"]);
if(or__12169__auto____$1){
return or__12169__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__24768 = this$__$1;
return goog.getUid(G__24768);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__24769 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24769) : cljs.core.deref.call(null,G__24769));
})(),(function (){var G__24770 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24770) : cljs.core.deref.call(null,G__24770));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__24771 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24771) : cljs.core.deref.call(null,G__24771));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__24772 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24772) : cljs.core.deref.call(null,G__24772));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__24773 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24773) : cljs.core.deref.call(null,G__24773));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__24774 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24774) : cljs.core.deref.call(null,G__24774));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__25615 = null;
var G__25615__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__25615__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24775 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__24775) : self__.dispatch_fn.call(null,G__24775));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24776 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__24776) : target_fn.call(null,G__24776));
});
var G__25615__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24777 = a;
var G__24778 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__24777,G__24778) : self__.dispatch_fn.call(null,G__24777,G__24778));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24779 = a;
var G__24780 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__24779,G__24780) : target_fn.call(null,G__24779,G__24780));
});
var G__25615__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24781 = a;
var G__24782 = b;
var G__24783 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__24781,G__24782,G__24783) : self__.dispatch_fn.call(null,G__24781,G__24782,G__24783));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24784 = a;
var G__24785 = b;
var G__24786 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__24784,G__24785,G__24786) : target_fn.call(null,G__24784,G__24785,G__24786));
});
var G__25615__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24787 = a;
var G__24788 = b;
var G__24789 = c;
var G__24790 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__24787,G__24788,G__24789,G__24790) : self__.dispatch_fn.call(null,G__24787,G__24788,G__24789,G__24790));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24791 = a;
var G__24792 = b;
var G__24793 = c;
var G__24794 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__24791,G__24792,G__24793,G__24794) : target_fn.call(null,G__24791,G__24792,G__24793,G__24794));
});
var G__25615__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24795 = a;
var G__24796 = b;
var G__24797 = c;
var G__24798 = d;
var G__24799 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__24795,G__24796,G__24797,G__24798,G__24799) : self__.dispatch_fn.call(null,G__24795,G__24796,G__24797,G__24798,G__24799));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24800 = a;
var G__24801 = b;
var G__24802 = c;
var G__24803 = d;
var G__24804 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__24800,G__24801,G__24802,G__24803,G__24804) : target_fn.call(null,G__24800,G__24801,G__24802,G__24803,G__24804));
});
var G__25615__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24805 = a;
var G__24806 = b;
var G__24807 = c;
var G__24808 = d;
var G__24809 = e;
var G__24810 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__24805,G__24806,G__24807,G__24808,G__24809,G__24810) : self__.dispatch_fn.call(null,G__24805,G__24806,G__24807,G__24808,G__24809,G__24810));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24811 = a;
var G__24812 = b;
var G__24813 = c;
var G__24814 = d;
var G__24815 = e;
var G__24816 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__24811,G__24812,G__24813,G__24814,G__24815,G__24816) : target_fn.call(null,G__24811,G__24812,G__24813,G__24814,G__24815,G__24816));
});
var G__25615__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24817 = a;
var G__24818 = b;
var G__24819 = c;
var G__24820 = d;
var G__24821 = e;
var G__24822 = f;
var G__24823 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__24817,G__24818,G__24819,G__24820,G__24821,G__24822,G__24823) : self__.dispatch_fn.call(null,G__24817,G__24818,G__24819,G__24820,G__24821,G__24822,G__24823));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24824 = a;
var G__24825 = b;
var G__24826 = c;
var G__24827 = d;
var G__24828 = e;
var G__24829 = f;
var G__24830 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__24824,G__24825,G__24826,G__24827,G__24828,G__24829,G__24830) : target_fn.call(null,G__24824,G__24825,G__24826,G__24827,G__24828,G__24829,G__24830));
});
var G__25615__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24831 = a;
var G__24832 = b;
var G__24833 = c;
var G__24834 = d;
var G__24835 = e;
var G__24836 = f;
var G__24837 = g;
var G__24838 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__24831,G__24832,G__24833,G__24834,G__24835,G__24836,G__24837,G__24838) : self__.dispatch_fn.call(null,G__24831,G__24832,G__24833,G__24834,G__24835,G__24836,G__24837,G__24838));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24839 = a;
var G__24840 = b;
var G__24841 = c;
var G__24842 = d;
var G__24843 = e;
var G__24844 = f;
var G__24845 = g;
var G__24846 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__24839,G__24840,G__24841,G__24842,G__24843,G__24844,G__24845,G__24846) : target_fn.call(null,G__24839,G__24840,G__24841,G__24842,G__24843,G__24844,G__24845,G__24846));
});
var G__25615__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24847 = a;
var G__24848 = b;
var G__24849 = c;
var G__24850 = d;
var G__24851 = e;
var G__24852 = f;
var G__24853 = g;
var G__24854 = h;
var G__24855 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__24847,G__24848,G__24849,G__24850,G__24851,G__24852,G__24853,G__24854,G__24855) : self__.dispatch_fn.call(null,G__24847,G__24848,G__24849,G__24850,G__24851,G__24852,G__24853,G__24854,G__24855));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24856 = a;
var G__24857 = b;
var G__24858 = c;
var G__24859 = d;
var G__24860 = e;
var G__24861 = f;
var G__24862 = g;
var G__24863 = h;
var G__24864 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__24856,G__24857,G__24858,G__24859,G__24860,G__24861,G__24862,G__24863,G__24864) : target_fn.call(null,G__24856,G__24857,G__24858,G__24859,G__24860,G__24861,G__24862,G__24863,G__24864));
});
var G__25615__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24865 = a;
var G__24866 = b;
var G__24867 = c;
var G__24868 = d;
var G__24869 = e;
var G__24870 = f;
var G__24871 = g;
var G__24872 = h;
var G__24873 = i;
var G__24874 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__24865,G__24866,G__24867,G__24868,G__24869,G__24870,G__24871,G__24872,G__24873,G__24874) : self__.dispatch_fn.call(null,G__24865,G__24866,G__24867,G__24868,G__24869,G__24870,G__24871,G__24872,G__24873,G__24874));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24875 = a;
var G__24876 = b;
var G__24877 = c;
var G__24878 = d;
var G__24879 = e;
var G__24880 = f;
var G__24881 = g;
var G__24882 = h;
var G__24883 = i;
var G__24884 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__24875,G__24876,G__24877,G__24878,G__24879,G__24880,G__24881,G__24882,G__24883,G__24884) : target_fn.call(null,G__24875,G__24876,G__24877,G__24878,G__24879,G__24880,G__24881,G__24882,G__24883,G__24884));
});
var G__25615__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24885 = a;
var G__24886 = b;
var G__24887 = c;
var G__24888 = d;
var G__24889 = e;
var G__24890 = f;
var G__24891 = g;
var G__24892 = h;
var G__24893 = i;
var G__24894 = j;
var G__24895 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__24885,G__24886,G__24887,G__24888,G__24889,G__24890,G__24891,G__24892,G__24893,G__24894,G__24895) : self__.dispatch_fn.call(null,G__24885,G__24886,G__24887,G__24888,G__24889,G__24890,G__24891,G__24892,G__24893,G__24894,G__24895));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24896 = a;
var G__24897 = b;
var G__24898 = c;
var G__24899 = d;
var G__24900 = e;
var G__24901 = f;
var G__24902 = g;
var G__24903 = h;
var G__24904 = i;
var G__24905 = j;
var G__24906 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__24896,G__24897,G__24898,G__24899,G__24900,G__24901,G__24902,G__24903,G__24904,G__24905,G__24906) : target_fn.call(null,G__24896,G__24897,G__24898,G__24899,G__24900,G__24901,G__24902,G__24903,G__24904,G__24905,G__24906));
});
var G__25615__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24907 = a;
var G__24908 = b;
var G__24909 = c;
var G__24910 = d;
var G__24911 = e;
var G__24912 = f;
var G__24913 = g;
var G__24914 = h;
var G__24915 = i;
var G__24916 = j;
var G__24917 = k;
var G__24918 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__24907,G__24908,G__24909,G__24910,G__24911,G__24912,G__24913,G__24914,G__24915,G__24916,G__24917,G__24918) : self__.dispatch_fn.call(null,G__24907,G__24908,G__24909,G__24910,G__24911,G__24912,G__24913,G__24914,G__24915,G__24916,G__24917,G__24918));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24919 = a;
var G__24920 = b;
var G__24921 = c;
var G__24922 = d;
var G__24923 = e;
var G__24924 = f;
var G__24925 = g;
var G__24926 = h;
var G__24927 = i;
var G__24928 = j;
var G__24929 = k;
var G__24930 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__24919,G__24920,G__24921,G__24922,G__24923,G__24924,G__24925,G__24926,G__24927,G__24928,G__24929,G__24930) : target_fn.call(null,G__24919,G__24920,G__24921,G__24922,G__24923,G__24924,G__24925,G__24926,G__24927,G__24928,G__24929,G__24930));
});
var G__25615__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24931 = a;
var G__24932 = b;
var G__24933 = c;
var G__24934 = d;
var G__24935 = e;
var G__24936 = f;
var G__24937 = g;
var G__24938 = h;
var G__24939 = i;
var G__24940 = j;
var G__24941 = k;
var G__24942 = l;
var G__24943 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__24931,G__24932,G__24933,G__24934,G__24935,G__24936,G__24937,G__24938,G__24939,G__24940,G__24941,G__24942,G__24943) : self__.dispatch_fn.call(null,G__24931,G__24932,G__24933,G__24934,G__24935,G__24936,G__24937,G__24938,G__24939,G__24940,G__24941,G__24942,G__24943));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24944 = a;
var G__24945 = b;
var G__24946 = c;
var G__24947 = d;
var G__24948 = e;
var G__24949 = f;
var G__24950 = g;
var G__24951 = h;
var G__24952 = i;
var G__24953 = j;
var G__24954 = k;
var G__24955 = l;
var G__24956 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__24944,G__24945,G__24946,G__24947,G__24948,G__24949,G__24950,G__24951,G__24952,G__24953,G__24954,G__24955,G__24956) : target_fn.call(null,G__24944,G__24945,G__24946,G__24947,G__24948,G__24949,G__24950,G__24951,G__24952,G__24953,G__24954,G__24955,G__24956));
});
var G__25615__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24957 = a;
var G__24958 = b;
var G__24959 = c;
var G__24960 = d;
var G__24961 = e;
var G__24962 = f;
var G__24963 = g;
var G__24964 = h;
var G__24965 = i;
var G__24966 = j;
var G__24967 = k;
var G__24968 = l;
var G__24969 = m;
var G__24970 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__24957,G__24958,G__24959,G__24960,G__24961,G__24962,G__24963,G__24964,G__24965,G__24966,G__24967,G__24968,G__24969,G__24970) : self__.dispatch_fn.call(null,G__24957,G__24958,G__24959,G__24960,G__24961,G__24962,G__24963,G__24964,G__24965,G__24966,G__24967,G__24968,G__24969,G__24970));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24971 = a;
var G__24972 = b;
var G__24973 = c;
var G__24974 = d;
var G__24975 = e;
var G__24976 = f;
var G__24977 = g;
var G__24978 = h;
var G__24979 = i;
var G__24980 = j;
var G__24981 = k;
var G__24982 = l;
var G__24983 = m;
var G__24984 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__24971,G__24972,G__24973,G__24974,G__24975,G__24976,G__24977,G__24978,G__24979,G__24980,G__24981,G__24982,G__24983,G__24984) : target_fn.call(null,G__24971,G__24972,G__24973,G__24974,G__24975,G__24976,G__24977,G__24978,G__24979,G__24980,G__24981,G__24982,G__24983,G__24984));
});
var G__25615__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24985 = a;
var G__24986 = b;
var G__24987 = c;
var G__24988 = d;
var G__24989 = e;
var G__24990 = f;
var G__24991 = g;
var G__24992 = h;
var G__24993 = i;
var G__24994 = j;
var G__24995 = k;
var G__24996 = l;
var G__24997 = m;
var G__24998 = n;
var G__24999 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__24985,G__24986,G__24987,G__24988,G__24989,G__24990,G__24991,G__24992,G__24993,G__24994,G__24995,G__24996,G__24997,G__24998,G__24999) : self__.dispatch_fn.call(null,G__24985,G__24986,G__24987,G__24988,G__24989,G__24990,G__24991,G__24992,G__24993,G__24994,G__24995,G__24996,G__24997,G__24998,G__24999));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25000 = a;
var G__25001 = b;
var G__25002 = c;
var G__25003 = d;
var G__25004 = e;
var G__25005 = f;
var G__25006 = g;
var G__25007 = h;
var G__25008 = i;
var G__25009 = j;
var G__25010 = k;
var G__25011 = l;
var G__25012 = m;
var G__25013 = n;
var G__25014 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__25000,G__25001,G__25002,G__25003,G__25004,G__25005,G__25006,G__25007,G__25008,G__25009,G__25010,G__25011,G__25012,G__25013,G__25014) : target_fn.call(null,G__25000,G__25001,G__25002,G__25003,G__25004,G__25005,G__25006,G__25007,G__25008,G__25009,G__25010,G__25011,G__25012,G__25013,G__25014));
});
var G__25615__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25015 = a;
var G__25016 = b;
var G__25017 = c;
var G__25018 = d;
var G__25019 = e;
var G__25020 = f;
var G__25021 = g;
var G__25022 = h;
var G__25023 = i;
var G__25024 = j;
var G__25025 = k;
var G__25026 = l;
var G__25027 = m;
var G__25028 = n;
var G__25029 = o;
var G__25030 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__25015,G__25016,G__25017,G__25018,G__25019,G__25020,G__25021,G__25022,G__25023,G__25024,G__25025,G__25026,G__25027,G__25028,G__25029,G__25030) : self__.dispatch_fn.call(null,G__25015,G__25016,G__25017,G__25018,G__25019,G__25020,G__25021,G__25022,G__25023,G__25024,G__25025,G__25026,G__25027,G__25028,G__25029,G__25030));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25031 = a;
var G__25032 = b;
var G__25033 = c;
var G__25034 = d;
var G__25035 = e;
var G__25036 = f;
var G__25037 = g;
var G__25038 = h;
var G__25039 = i;
var G__25040 = j;
var G__25041 = k;
var G__25042 = l;
var G__25043 = m;
var G__25044 = n;
var G__25045 = o;
var G__25046 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__25031,G__25032,G__25033,G__25034,G__25035,G__25036,G__25037,G__25038,G__25039,G__25040,G__25041,G__25042,G__25043,G__25044,G__25045,G__25046) : target_fn.call(null,G__25031,G__25032,G__25033,G__25034,G__25035,G__25036,G__25037,G__25038,G__25039,G__25040,G__25041,G__25042,G__25043,G__25044,G__25045,G__25046));
});
var G__25615__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25047 = a;
var G__25048 = b;
var G__25049 = c;
var G__25050 = d;
var G__25051 = e;
var G__25052 = f;
var G__25053 = g;
var G__25054 = h;
var G__25055 = i;
var G__25056 = j;
var G__25057 = k;
var G__25058 = l;
var G__25059 = m;
var G__25060 = n;
var G__25061 = o;
var G__25062 = p;
var G__25063 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__25047,G__25048,G__25049,G__25050,G__25051,G__25052,G__25053,G__25054,G__25055,G__25056,G__25057,G__25058,G__25059,G__25060,G__25061,G__25062,G__25063) : self__.dispatch_fn.call(null,G__25047,G__25048,G__25049,G__25050,G__25051,G__25052,G__25053,G__25054,G__25055,G__25056,G__25057,G__25058,G__25059,G__25060,G__25061,G__25062,G__25063));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25064 = a;
var G__25065 = b;
var G__25066 = c;
var G__25067 = d;
var G__25068 = e;
var G__25069 = f;
var G__25070 = g;
var G__25071 = h;
var G__25072 = i;
var G__25073 = j;
var G__25074 = k;
var G__25075 = l;
var G__25076 = m;
var G__25077 = n;
var G__25078 = o;
var G__25079 = p;
var G__25080 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__25064,G__25065,G__25066,G__25067,G__25068,G__25069,G__25070,G__25071,G__25072,G__25073,G__25074,G__25075,G__25076,G__25077,G__25078,G__25079,G__25080) : target_fn.call(null,G__25064,G__25065,G__25066,G__25067,G__25068,G__25069,G__25070,G__25071,G__25072,G__25073,G__25074,G__25075,G__25076,G__25077,G__25078,G__25079,G__25080));
});
var G__25615__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25081 = a;
var G__25082 = b;
var G__25083 = c;
var G__25084 = d;
var G__25085 = e;
var G__25086 = f;
var G__25087 = g;
var G__25088 = h;
var G__25089 = i;
var G__25090 = j;
var G__25091 = k;
var G__25092 = l;
var G__25093 = m;
var G__25094 = n;
var G__25095 = o;
var G__25096 = p;
var G__25097 = q;
var G__25098 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__25081,G__25082,G__25083,G__25084,G__25085,G__25086,G__25087,G__25088,G__25089,G__25090,G__25091,G__25092,G__25093,G__25094,G__25095,G__25096,G__25097,G__25098) : self__.dispatch_fn.call(null,G__25081,G__25082,G__25083,G__25084,G__25085,G__25086,G__25087,G__25088,G__25089,G__25090,G__25091,G__25092,G__25093,G__25094,G__25095,G__25096,G__25097,G__25098));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25099 = a;
var G__25100 = b;
var G__25101 = c;
var G__25102 = d;
var G__25103 = e;
var G__25104 = f;
var G__25105 = g;
var G__25106 = h;
var G__25107 = i;
var G__25108 = j;
var G__25109 = k;
var G__25110 = l;
var G__25111 = m;
var G__25112 = n;
var G__25113 = o;
var G__25114 = p;
var G__25115 = q;
var G__25116 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__25099,G__25100,G__25101,G__25102,G__25103,G__25104,G__25105,G__25106,G__25107,G__25108,G__25109,G__25110,G__25111,G__25112,G__25113,G__25114,G__25115,G__25116) : target_fn.call(null,G__25099,G__25100,G__25101,G__25102,G__25103,G__25104,G__25105,G__25106,G__25107,G__25108,G__25109,G__25110,G__25111,G__25112,G__25113,G__25114,G__25115,G__25116));
});
var G__25615__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25117 = a;
var G__25118 = b;
var G__25119 = c;
var G__25120 = d;
var G__25121 = e;
var G__25122 = f;
var G__25123 = g;
var G__25124 = h;
var G__25125 = i;
var G__25126 = j;
var G__25127 = k;
var G__25128 = l;
var G__25129 = m;
var G__25130 = n;
var G__25131 = o;
var G__25132 = p;
var G__25133 = q;
var G__25134 = r;
var G__25135 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__25117,G__25118,G__25119,G__25120,G__25121,G__25122,G__25123,G__25124,G__25125,G__25126,G__25127,G__25128,G__25129,G__25130,G__25131,G__25132,G__25133,G__25134,G__25135) : self__.dispatch_fn.call(null,G__25117,G__25118,G__25119,G__25120,G__25121,G__25122,G__25123,G__25124,G__25125,G__25126,G__25127,G__25128,G__25129,G__25130,G__25131,G__25132,G__25133,G__25134,G__25135));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25136 = a;
var G__25137 = b;
var G__25138 = c;
var G__25139 = d;
var G__25140 = e;
var G__25141 = f;
var G__25142 = g;
var G__25143 = h;
var G__25144 = i;
var G__25145 = j;
var G__25146 = k;
var G__25147 = l;
var G__25148 = m;
var G__25149 = n;
var G__25150 = o;
var G__25151 = p;
var G__25152 = q;
var G__25153 = r;
var G__25154 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__25136,G__25137,G__25138,G__25139,G__25140,G__25141,G__25142,G__25143,G__25144,G__25145,G__25146,G__25147,G__25148,G__25149,G__25150,G__25151,G__25152,G__25153,G__25154) : target_fn.call(null,G__25136,G__25137,G__25138,G__25139,G__25140,G__25141,G__25142,G__25143,G__25144,G__25145,G__25146,G__25147,G__25148,G__25149,G__25150,G__25151,G__25152,G__25153,G__25154));
});
var G__25615__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25155 = a;
var G__25156 = b;
var G__25157 = c;
var G__25158 = d;
var G__25159 = e;
var G__25160 = f;
var G__25161 = g;
var G__25162 = h;
var G__25163 = i;
var G__25164 = j;
var G__25165 = k;
var G__25166 = l;
var G__25167 = m;
var G__25168 = n;
var G__25169 = o;
var G__25170 = p;
var G__25171 = q;
var G__25172 = r;
var G__25173 = s;
var G__25174 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__25155,G__25156,G__25157,G__25158,G__25159,G__25160,G__25161,G__25162,G__25163,G__25164,G__25165,G__25166,G__25167,G__25168,G__25169,G__25170,G__25171,G__25172,G__25173,G__25174) : self__.dispatch_fn.call(null,G__25155,G__25156,G__25157,G__25158,G__25159,G__25160,G__25161,G__25162,G__25163,G__25164,G__25165,G__25166,G__25167,G__25168,G__25169,G__25170,G__25171,G__25172,G__25173,G__25174));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25175 = a;
var G__25176 = b;
var G__25177 = c;
var G__25178 = d;
var G__25179 = e;
var G__25180 = f;
var G__25181 = g;
var G__25182 = h;
var G__25183 = i;
var G__25184 = j;
var G__25185 = k;
var G__25186 = l;
var G__25187 = m;
var G__25188 = n;
var G__25189 = o;
var G__25190 = p;
var G__25191 = q;
var G__25192 = r;
var G__25193 = s;
var G__25194 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__25175,G__25176,G__25177,G__25178,G__25179,G__25180,G__25181,G__25182,G__25183,G__25184,G__25185,G__25186,G__25187,G__25188,G__25189,G__25190,G__25191,G__25192,G__25193,G__25194) : target_fn.call(null,G__25175,G__25176,G__25177,G__25178,G__25179,G__25180,G__25181,G__25182,G__25183,G__25184,G__25185,G__25186,G__25187,G__25188,G__25189,G__25190,G__25191,G__25192,G__25193,G__25194));
});
var G__25615__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__25615 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__25615__1.call(this,self__);
case 2:
return G__25615__2.call(this,self__,a);
case 3:
return G__25615__3.call(this,self__,a,b);
case 4:
return G__25615__4.call(this,self__,a,b,c);
case 5:
return G__25615__5.call(this,self__,a,b,c,d);
case 6:
return G__25615__6.call(this,self__,a,b,c,d,e);
case 7:
return G__25615__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__25615__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__25615__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__25615__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__25615__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__25615__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__25615__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__25615__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__25615__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__25615__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__25615__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__25615__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__25615__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__25615__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__25615__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__25615__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25615.cljs$core$IFn$_invoke$arity$1 = G__25615__1;
G__25615.cljs$core$IFn$_invoke$arity$2 = G__25615__2;
G__25615.cljs$core$IFn$_invoke$arity$3 = G__25615__3;
G__25615.cljs$core$IFn$_invoke$arity$4 = G__25615__4;
G__25615.cljs$core$IFn$_invoke$arity$5 = G__25615__5;
G__25615.cljs$core$IFn$_invoke$arity$6 = G__25615__6;
G__25615.cljs$core$IFn$_invoke$arity$7 = G__25615__7;
G__25615.cljs$core$IFn$_invoke$arity$8 = G__25615__8;
G__25615.cljs$core$IFn$_invoke$arity$9 = G__25615__9;
G__25615.cljs$core$IFn$_invoke$arity$10 = G__25615__10;
G__25615.cljs$core$IFn$_invoke$arity$11 = G__25615__11;
G__25615.cljs$core$IFn$_invoke$arity$12 = G__25615__12;
G__25615.cljs$core$IFn$_invoke$arity$13 = G__25615__13;
G__25615.cljs$core$IFn$_invoke$arity$14 = G__25615__14;
G__25615.cljs$core$IFn$_invoke$arity$15 = G__25615__15;
G__25615.cljs$core$IFn$_invoke$arity$16 = G__25615__16;
G__25615.cljs$core$IFn$_invoke$arity$17 = G__25615__17;
G__25615.cljs$core$IFn$_invoke$arity$18 = G__25615__18;
G__25615.cljs$core$IFn$_invoke$arity$19 = G__25615__19;
G__25615.cljs$core$IFn$_invoke$arity$20 = G__25615__20;
G__25615.cljs$core$IFn$_invoke$arity$21 = G__25615__21;
G__25615.cljs$core$IFn$_invoke$arity$22 = G__25615__22;
return G__25615;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args24767){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24767)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25195 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__25195) : self__.dispatch_fn.call(null,G__25195));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25196 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__25196) : target_fn.call(null,G__25196));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25197 = a;
var G__25198 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__25197,G__25198) : self__.dispatch_fn.call(null,G__25197,G__25198));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25199 = a;
var G__25200 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__25199,G__25200) : target_fn.call(null,G__25199,G__25200));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25201 = a;
var G__25202 = b;
var G__25203 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__25201,G__25202,G__25203) : self__.dispatch_fn.call(null,G__25201,G__25202,G__25203));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25204 = a;
var G__25205 = b;
var G__25206 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__25204,G__25205,G__25206) : target_fn.call(null,G__25204,G__25205,G__25206));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25207 = a;
var G__25208 = b;
var G__25209 = c;
var G__25210 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__25207,G__25208,G__25209,G__25210) : self__.dispatch_fn.call(null,G__25207,G__25208,G__25209,G__25210));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25211 = a;
var G__25212 = b;
var G__25213 = c;
var G__25214 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__25211,G__25212,G__25213,G__25214) : target_fn.call(null,G__25211,G__25212,G__25213,G__25214));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25215 = a;
var G__25216 = b;
var G__25217 = c;
var G__25218 = d;
var G__25219 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__25215,G__25216,G__25217,G__25218,G__25219) : self__.dispatch_fn.call(null,G__25215,G__25216,G__25217,G__25218,G__25219));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25220 = a;
var G__25221 = b;
var G__25222 = c;
var G__25223 = d;
var G__25224 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__25220,G__25221,G__25222,G__25223,G__25224) : target_fn.call(null,G__25220,G__25221,G__25222,G__25223,G__25224));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25225 = a;
var G__25226 = b;
var G__25227 = c;
var G__25228 = d;
var G__25229 = e;
var G__25230 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__25225,G__25226,G__25227,G__25228,G__25229,G__25230) : self__.dispatch_fn.call(null,G__25225,G__25226,G__25227,G__25228,G__25229,G__25230));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25231 = a;
var G__25232 = b;
var G__25233 = c;
var G__25234 = d;
var G__25235 = e;
var G__25236 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__25231,G__25232,G__25233,G__25234,G__25235,G__25236) : target_fn.call(null,G__25231,G__25232,G__25233,G__25234,G__25235,G__25236));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25237 = a;
var G__25238 = b;
var G__25239 = c;
var G__25240 = d;
var G__25241 = e;
var G__25242 = f;
var G__25243 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__25237,G__25238,G__25239,G__25240,G__25241,G__25242,G__25243) : self__.dispatch_fn.call(null,G__25237,G__25238,G__25239,G__25240,G__25241,G__25242,G__25243));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25244 = a;
var G__25245 = b;
var G__25246 = c;
var G__25247 = d;
var G__25248 = e;
var G__25249 = f;
var G__25250 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__25244,G__25245,G__25246,G__25247,G__25248,G__25249,G__25250) : target_fn.call(null,G__25244,G__25245,G__25246,G__25247,G__25248,G__25249,G__25250));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25251 = a;
var G__25252 = b;
var G__25253 = c;
var G__25254 = d;
var G__25255 = e;
var G__25256 = f;
var G__25257 = g;
var G__25258 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__25251,G__25252,G__25253,G__25254,G__25255,G__25256,G__25257,G__25258) : self__.dispatch_fn.call(null,G__25251,G__25252,G__25253,G__25254,G__25255,G__25256,G__25257,G__25258));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25259 = a;
var G__25260 = b;
var G__25261 = c;
var G__25262 = d;
var G__25263 = e;
var G__25264 = f;
var G__25265 = g;
var G__25266 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__25259,G__25260,G__25261,G__25262,G__25263,G__25264,G__25265,G__25266) : target_fn.call(null,G__25259,G__25260,G__25261,G__25262,G__25263,G__25264,G__25265,G__25266));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25267 = a;
var G__25268 = b;
var G__25269 = c;
var G__25270 = d;
var G__25271 = e;
var G__25272 = f;
var G__25273 = g;
var G__25274 = h;
var G__25275 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__25267,G__25268,G__25269,G__25270,G__25271,G__25272,G__25273,G__25274,G__25275) : self__.dispatch_fn.call(null,G__25267,G__25268,G__25269,G__25270,G__25271,G__25272,G__25273,G__25274,G__25275));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25276 = a;
var G__25277 = b;
var G__25278 = c;
var G__25279 = d;
var G__25280 = e;
var G__25281 = f;
var G__25282 = g;
var G__25283 = h;
var G__25284 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__25276,G__25277,G__25278,G__25279,G__25280,G__25281,G__25282,G__25283,G__25284) : target_fn.call(null,G__25276,G__25277,G__25278,G__25279,G__25280,G__25281,G__25282,G__25283,G__25284));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25285 = a;
var G__25286 = b;
var G__25287 = c;
var G__25288 = d;
var G__25289 = e;
var G__25290 = f;
var G__25291 = g;
var G__25292 = h;
var G__25293 = i;
var G__25294 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__25285,G__25286,G__25287,G__25288,G__25289,G__25290,G__25291,G__25292,G__25293,G__25294) : self__.dispatch_fn.call(null,G__25285,G__25286,G__25287,G__25288,G__25289,G__25290,G__25291,G__25292,G__25293,G__25294));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25295 = a;
var G__25296 = b;
var G__25297 = c;
var G__25298 = d;
var G__25299 = e;
var G__25300 = f;
var G__25301 = g;
var G__25302 = h;
var G__25303 = i;
var G__25304 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__25295,G__25296,G__25297,G__25298,G__25299,G__25300,G__25301,G__25302,G__25303,G__25304) : target_fn.call(null,G__25295,G__25296,G__25297,G__25298,G__25299,G__25300,G__25301,G__25302,G__25303,G__25304));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25305 = a;
var G__25306 = b;
var G__25307 = c;
var G__25308 = d;
var G__25309 = e;
var G__25310 = f;
var G__25311 = g;
var G__25312 = h;
var G__25313 = i;
var G__25314 = j;
var G__25315 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__25305,G__25306,G__25307,G__25308,G__25309,G__25310,G__25311,G__25312,G__25313,G__25314,G__25315) : self__.dispatch_fn.call(null,G__25305,G__25306,G__25307,G__25308,G__25309,G__25310,G__25311,G__25312,G__25313,G__25314,G__25315));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25316 = a;
var G__25317 = b;
var G__25318 = c;
var G__25319 = d;
var G__25320 = e;
var G__25321 = f;
var G__25322 = g;
var G__25323 = h;
var G__25324 = i;
var G__25325 = j;
var G__25326 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__25316,G__25317,G__25318,G__25319,G__25320,G__25321,G__25322,G__25323,G__25324,G__25325,G__25326) : target_fn.call(null,G__25316,G__25317,G__25318,G__25319,G__25320,G__25321,G__25322,G__25323,G__25324,G__25325,G__25326));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25327 = a;
var G__25328 = b;
var G__25329 = c;
var G__25330 = d;
var G__25331 = e;
var G__25332 = f;
var G__25333 = g;
var G__25334 = h;
var G__25335 = i;
var G__25336 = j;
var G__25337 = k;
var G__25338 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__25327,G__25328,G__25329,G__25330,G__25331,G__25332,G__25333,G__25334,G__25335,G__25336,G__25337,G__25338) : self__.dispatch_fn.call(null,G__25327,G__25328,G__25329,G__25330,G__25331,G__25332,G__25333,G__25334,G__25335,G__25336,G__25337,G__25338));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25339 = a;
var G__25340 = b;
var G__25341 = c;
var G__25342 = d;
var G__25343 = e;
var G__25344 = f;
var G__25345 = g;
var G__25346 = h;
var G__25347 = i;
var G__25348 = j;
var G__25349 = k;
var G__25350 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__25339,G__25340,G__25341,G__25342,G__25343,G__25344,G__25345,G__25346,G__25347,G__25348,G__25349,G__25350) : target_fn.call(null,G__25339,G__25340,G__25341,G__25342,G__25343,G__25344,G__25345,G__25346,G__25347,G__25348,G__25349,G__25350));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25351 = a;
var G__25352 = b;
var G__25353 = c;
var G__25354 = d;
var G__25355 = e;
var G__25356 = f;
var G__25357 = g;
var G__25358 = h;
var G__25359 = i;
var G__25360 = j;
var G__25361 = k;
var G__25362 = l;
var G__25363 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__25351,G__25352,G__25353,G__25354,G__25355,G__25356,G__25357,G__25358,G__25359,G__25360,G__25361,G__25362,G__25363) : self__.dispatch_fn.call(null,G__25351,G__25352,G__25353,G__25354,G__25355,G__25356,G__25357,G__25358,G__25359,G__25360,G__25361,G__25362,G__25363));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25364 = a;
var G__25365 = b;
var G__25366 = c;
var G__25367 = d;
var G__25368 = e;
var G__25369 = f;
var G__25370 = g;
var G__25371 = h;
var G__25372 = i;
var G__25373 = j;
var G__25374 = k;
var G__25375 = l;
var G__25376 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__25364,G__25365,G__25366,G__25367,G__25368,G__25369,G__25370,G__25371,G__25372,G__25373,G__25374,G__25375,G__25376) : target_fn.call(null,G__25364,G__25365,G__25366,G__25367,G__25368,G__25369,G__25370,G__25371,G__25372,G__25373,G__25374,G__25375,G__25376));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25377 = a;
var G__25378 = b;
var G__25379 = c;
var G__25380 = d;
var G__25381 = e;
var G__25382 = f;
var G__25383 = g;
var G__25384 = h;
var G__25385 = i;
var G__25386 = j;
var G__25387 = k;
var G__25388 = l;
var G__25389 = m;
var G__25390 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__25377,G__25378,G__25379,G__25380,G__25381,G__25382,G__25383,G__25384,G__25385,G__25386,G__25387,G__25388,G__25389,G__25390) : self__.dispatch_fn.call(null,G__25377,G__25378,G__25379,G__25380,G__25381,G__25382,G__25383,G__25384,G__25385,G__25386,G__25387,G__25388,G__25389,G__25390));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25391 = a;
var G__25392 = b;
var G__25393 = c;
var G__25394 = d;
var G__25395 = e;
var G__25396 = f;
var G__25397 = g;
var G__25398 = h;
var G__25399 = i;
var G__25400 = j;
var G__25401 = k;
var G__25402 = l;
var G__25403 = m;
var G__25404 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__25391,G__25392,G__25393,G__25394,G__25395,G__25396,G__25397,G__25398,G__25399,G__25400,G__25401,G__25402,G__25403,G__25404) : target_fn.call(null,G__25391,G__25392,G__25393,G__25394,G__25395,G__25396,G__25397,G__25398,G__25399,G__25400,G__25401,G__25402,G__25403,G__25404));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25405 = a;
var G__25406 = b;
var G__25407 = c;
var G__25408 = d;
var G__25409 = e;
var G__25410 = f;
var G__25411 = g;
var G__25412 = h;
var G__25413 = i;
var G__25414 = j;
var G__25415 = k;
var G__25416 = l;
var G__25417 = m;
var G__25418 = n;
var G__25419 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__25405,G__25406,G__25407,G__25408,G__25409,G__25410,G__25411,G__25412,G__25413,G__25414,G__25415,G__25416,G__25417,G__25418,G__25419) : self__.dispatch_fn.call(null,G__25405,G__25406,G__25407,G__25408,G__25409,G__25410,G__25411,G__25412,G__25413,G__25414,G__25415,G__25416,G__25417,G__25418,G__25419));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25420 = a;
var G__25421 = b;
var G__25422 = c;
var G__25423 = d;
var G__25424 = e;
var G__25425 = f;
var G__25426 = g;
var G__25427 = h;
var G__25428 = i;
var G__25429 = j;
var G__25430 = k;
var G__25431 = l;
var G__25432 = m;
var G__25433 = n;
var G__25434 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__25420,G__25421,G__25422,G__25423,G__25424,G__25425,G__25426,G__25427,G__25428,G__25429,G__25430,G__25431,G__25432,G__25433,G__25434) : target_fn.call(null,G__25420,G__25421,G__25422,G__25423,G__25424,G__25425,G__25426,G__25427,G__25428,G__25429,G__25430,G__25431,G__25432,G__25433,G__25434));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25435 = a;
var G__25436 = b;
var G__25437 = c;
var G__25438 = d;
var G__25439 = e;
var G__25440 = f;
var G__25441 = g;
var G__25442 = h;
var G__25443 = i;
var G__25444 = j;
var G__25445 = k;
var G__25446 = l;
var G__25447 = m;
var G__25448 = n;
var G__25449 = o;
var G__25450 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__25435,G__25436,G__25437,G__25438,G__25439,G__25440,G__25441,G__25442,G__25443,G__25444,G__25445,G__25446,G__25447,G__25448,G__25449,G__25450) : self__.dispatch_fn.call(null,G__25435,G__25436,G__25437,G__25438,G__25439,G__25440,G__25441,G__25442,G__25443,G__25444,G__25445,G__25446,G__25447,G__25448,G__25449,G__25450));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25451 = a;
var G__25452 = b;
var G__25453 = c;
var G__25454 = d;
var G__25455 = e;
var G__25456 = f;
var G__25457 = g;
var G__25458 = h;
var G__25459 = i;
var G__25460 = j;
var G__25461 = k;
var G__25462 = l;
var G__25463 = m;
var G__25464 = n;
var G__25465 = o;
var G__25466 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__25451,G__25452,G__25453,G__25454,G__25455,G__25456,G__25457,G__25458,G__25459,G__25460,G__25461,G__25462,G__25463,G__25464,G__25465,G__25466) : target_fn.call(null,G__25451,G__25452,G__25453,G__25454,G__25455,G__25456,G__25457,G__25458,G__25459,G__25460,G__25461,G__25462,G__25463,G__25464,G__25465,G__25466));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25467 = a;
var G__25468 = b;
var G__25469 = c;
var G__25470 = d;
var G__25471 = e;
var G__25472 = f;
var G__25473 = g;
var G__25474 = h;
var G__25475 = i;
var G__25476 = j;
var G__25477 = k;
var G__25478 = l;
var G__25479 = m;
var G__25480 = n;
var G__25481 = o;
var G__25482 = p;
var G__25483 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__25467,G__25468,G__25469,G__25470,G__25471,G__25472,G__25473,G__25474,G__25475,G__25476,G__25477,G__25478,G__25479,G__25480,G__25481,G__25482,G__25483) : self__.dispatch_fn.call(null,G__25467,G__25468,G__25469,G__25470,G__25471,G__25472,G__25473,G__25474,G__25475,G__25476,G__25477,G__25478,G__25479,G__25480,G__25481,G__25482,G__25483));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25484 = a;
var G__25485 = b;
var G__25486 = c;
var G__25487 = d;
var G__25488 = e;
var G__25489 = f;
var G__25490 = g;
var G__25491 = h;
var G__25492 = i;
var G__25493 = j;
var G__25494 = k;
var G__25495 = l;
var G__25496 = m;
var G__25497 = n;
var G__25498 = o;
var G__25499 = p;
var G__25500 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__25484,G__25485,G__25486,G__25487,G__25488,G__25489,G__25490,G__25491,G__25492,G__25493,G__25494,G__25495,G__25496,G__25497,G__25498,G__25499,G__25500) : target_fn.call(null,G__25484,G__25485,G__25486,G__25487,G__25488,G__25489,G__25490,G__25491,G__25492,G__25493,G__25494,G__25495,G__25496,G__25497,G__25498,G__25499,G__25500));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25501 = a;
var G__25502 = b;
var G__25503 = c;
var G__25504 = d;
var G__25505 = e;
var G__25506 = f;
var G__25507 = g;
var G__25508 = h;
var G__25509 = i;
var G__25510 = j;
var G__25511 = k;
var G__25512 = l;
var G__25513 = m;
var G__25514 = n;
var G__25515 = o;
var G__25516 = p;
var G__25517 = q;
var G__25518 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__25501,G__25502,G__25503,G__25504,G__25505,G__25506,G__25507,G__25508,G__25509,G__25510,G__25511,G__25512,G__25513,G__25514,G__25515,G__25516,G__25517,G__25518) : self__.dispatch_fn.call(null,G__25501,G__25502,G__25503,G__25504,G__25505,G__25506,G__25507,G__25508,G__25509,G__25510,G__25511,G__25512,G__25513,G__25514,G__25515,G__25516,G__25517,G__25518));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25519 = a;
var G__25520 = b;
var G__25521 = c;
var G__25522 = d;
var G__25523 = e;
var G__25524 = f;
var G__25525 = g;
var G__25526 = h;
var G__25527 = i;
var G__25528 = j;
var G__25529 = k;
var G__25530 = l;
var G__25531 = m;
var G__25532 = n;
var G__25533 = o;
var G__25534 = p;
var G__25535 = q;
var G__25536 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__25519,G__25520,G__25521,G__25522,G__25523,G__25524,G__25525,G__25526,G__25527,G__25528,G__25529,G__25530,G__25531,G__25532,G__25533,G__25534,G__25535,G__25536) : target_fn.call(null,G__25519,G__25520,G__25521,G__25522,G__25523,G__25524,G__25525,G__25526,G__25527,G__25528,G__25529,G__25530,G__25531,G__25532,G__25533,G__25534,G__25535,G__25536));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25537 = a;
var G__25538 = b;
var G__25539 = c;
var G__25540 = d;
var G__25541 = e;
var G__25542 = f;
var G__25543 = g;
var G__25544 = h;
var G__25545 = i;
var G__25546 = j;
var G__25547 = k;
var G__25548 = l;
var G__25549 = m;
var G__25550 = n;
var G__25551 = o;
var G__25552 = p;
var G__25553 = q;
var G__25554 = r;
var G__25555 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__25537,G__25538,G__25539,G__25540,G__25541,G__25542,G__25543,G__25544,G__25545,G__25546,G__25547,G__25548,G__25549,G__25550,G__25551,G__25552,G__25553,G__25554,G__25555) : self__.dispatch_fn.call(null,G__25537,G__25538,G__25539,G__25540,G__25541,G__25542,G__25543,G__25544,G__25545,G__25546,G__25547,G__25548,G__25549,G__25550,G__25551,G__25552,G__25553,G__25554,G__25555));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25556 = a;
var G__25557 = b;
var G__25558 = c;
var G__25559 = d;
var G__25560 = e;
var G__25561 = f;
var G__25562 = g;
var G__25563 = h;
var G__25564 = i;
var G__25565 = j;
var G__25566 = k;
var G__25567 = l;
var G__25568 = m;
var G__25569 = n;
var G__25570 = o;
var G__25571 = p;
var G__25572 = q;
var G__25573 = r;
var G__25574 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__25556,G__25557,G__25558,G__25559,G__25560,G__25561,G__25562,G__25563,G__25564,G__25565,G__25566,G__25567,G__25568,G__25569,G__25570,G__25571,G__25572,G__25573,G__25574) : target_fn.call(null,G__25556,G__25557,G__25558,G__25559,G__25560,G__25561,G__25562,G__25563,G__25564,G__25565,G__25566,G__25567,G__25568,G__25569,G__25570,G__25571,G__25572,G__25573,G__25574));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25575 = a;
var G__25576 = b;
var G__25577 = c;
var G__25578 = d;
var G__25579 = e;
var G__25580 = f;
var G__25581 = g;
var G__25582 = h;
var G__25583 = i;
var G__25584 = j;
var G__25585 = k;
var G__25586 = l;
var G__25587 = m;
var G__25588 = n;
var G__25589 = o;
var G__25590 = p;
var G__25591 = q;
var G__25592 = r;
var G__25593 = s;
var G__25594 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__25575,G__25576,G__25577,G__25578,G__25579,G__25580,G__25581,G__25582,G__25583,G__25584,G__25585,G__25586,G__25587,G__25588,G__25589,G__25590,G__25591,G__25592,G__25593,G__25594) : self__.dispatch_fn.call(null,G__25575,G__25576,G__25577,G__25578,G__25579,G__25580,G__25581,G__25582,G__25583,G__25584,G__25585,G__25586,G__25587,G__25588,G__25589,G__25590,G__25591,G__25592,G__25593,G__25594));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25595 = a;
var G__25596 = b;
var G__25597 = c;
var G__25598 = d;
var G__25599 = e;
var G__25600 = f;
var G__25601 = g;
var G__25602 = h;
var G__25603 = i;
var G__25604 = j;
var G__25605 = k;
var G__25606 = l;
var G__25607 = m;
var G__25608 = n;
var G__25609 = o;
var G__25610 = p;
var G__25611 = q;
var G__25612 = r;
var G__25613 = s;
var G__25614 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__25595,G__25596,G__25597,G__25598,G__25599,G__25600,G__25601,G__25602,G__25603,G__25604,G__25605,G__25606,G__25607,G__25608,G__25609,G__25610,G__25611,G__25612,G__25613,G__25614) : target_fn.call(null,G__25595,G__25596,G__25597,G__25598,G__25599,G__25600,G__25601,G__25602,G__25603,G__25604,G__25605,G__25606,G__25607,G__25608,G__25609,G__25610,G__25611,G__25612,G__25613,G__25614));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__25616 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__25616);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__12756__auto__,writer__12757__auto__,opt__12758__auto__){
return cljs.core._write(writer__12757__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__25621 = msg;
return Error(G__25621);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__25626 = x;
var G__25627 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__25626,G__25627) : pred.call(null,G__25626,G__25627));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__25628 = y;
var G__25629 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__25628,G__25629) : pred.call(null,G__25628,G__25629));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map